%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: tent0103pa.dvi
%%CreationDate: Fri Jan 24 12:32:34 2003
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMSY10 CMSY8
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips.exe tent0103pa
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2003.01.24:1232
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMSY8
%!PS-AdobeFont-1.1: CMSY8 1.0
%%CreationDate: 1991 Aug 15 07:22:10

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 102 /braceleft put
dup 103 /braceright put
readonly def
/FontBBox{-30 -955 1185 779}readonly def
/UniqueXX 5000818 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f059084178f5ab59e11b66566ca5ba42b1911a
5d7f1bf343015eece988b7a93bce0c7aa61344d48aed9c92c8698d4b7c9951c8
7d103f2414b39e1437f9d2e50c4ee5f218f2e6716926a79ea978f13b1f855345
191dd7d31d8f82c2e3343c7a5894d95bdc492c28226834efcb5c12fea36ac5cc
430e0aa604961e34888adf6c1f3954cbc2498e225d953cf5685852162346f474
5a2a7087d5d7ad486de16d2ca8e15cee26e012671ba3bdc7d95cc8c98bb774f5
08625e968aee27ff7d1a06e63bcfb5aa4876c3f8f13b30ccccee73c3caf4e70d
98e6ed2f422dbb4950bf789680e064150995941a9f4dd68a575949847a7d012b
b910bf03a69374e341e8036ff92c949f3dc6e86aaa7a2b79509e4f1c91ed32d6
1efe046769ce7da625fb1f0ca41748dff078ff43e11f7dc62ab264e4935a91b2
c1ce472fea039037442680a60efd636f39ad1db168cac688ff2382cf569285c8
257ed7fd36c30f1a23e307a6d2d98dde53483743ad4285de4b7453c9f1a7c572
bfa4e441b509559a3881e8830ae00df75e3d0db2501847e07f24f4236bf710c5
9ae2e09a9923d5c0273c8e8b117aff18309037b57ab1a9feb37524d5ebf251cb
169be428c9c0985e9405ffcc54ed2c54b375492f97081d5308cd3f8e601a5450
0d519c3996cd0e34c9bd6246e4e8f843a72a0d9f120ea9ebd8875b09bea5698e
e46c44dcd0ee79d73c0fa68f13ee0da19ecfef0c7ee2b47e5aa78dc4e15ff563
ac5fbb0465737769c47cda02528a86b18213d24643b2534d4e00c296a1793360
9ba32d0fbfddf9a316898c6ea8a74e2b4002d13f9d99f74879743c59b229993c
01e3837d623e32772a0ff79cbf01d564c1d2747410172e9a20ddc38c0a34fafe
b546683fa81f31284943148ef77131248fe3e003b36654d293870546b009c0d4
d0fbd5accf31cf037ec4afc8d25604d9a6deb8c47e7381868c648d4e0c9f09d2
4d8cc70420410c024ec13bc3ffa49aa6a9e02b109ccad3d310fd567e34b982c2
49a4bcedac1953cde835062ccbba1276f0dcc8bdbe1bf8c6eca07de5e320e96f
e336a3b8ad12a2e4435e98d816601cfd462f34a2ad498c4bd067e82ba7449de5
92
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /periodcentered put
dup 21 /greaterequal put
dup 50 /element put
dup 91 /union put
dup 102 /braceleft put
dup 103 /braceright put
dup 106 /bar put
dup 107 /bardbl put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueXX 5000820 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f67052788e6703bb5ee49533870bca1f113ad8
3750d597b842d8d96c423ba1273ddd32f3a54a912a443fcd44f7c3a6fe3956b0
aa1e784aaec6fce08dae0c76da9d0a3eba57b98a6233d9e9f0c3f00fcc6b2c6a
9ba23af389e6dfff4efec3de05d6276c6be417703ce508377f25960ef4ed83b4
9b01b873f3a639ce00f356229b6477a081933fef3bb80e2b9dffa7f75567b1fa
4d739b772f8d674e567534c6c5bbf1cf615372be20b18472f7aa58be8c216dbd
df81cc0a86b6d8318ca68fe22c8af13b54d7576fe4ca5a7af9005ea5cc4edb79
c0ab668e4fec4b7f5a9eb5f0e4c088cd818ecc4feb4b40ec8bd2981bf2336074
b64c430a05cba0221dbc83ae38c6183e5a3f9e0ccbf759b18b8a402d3f90d426
2de18d4a7aae3a6c5b00d0776f59de03935a830225dd9095796e8497098b91e4
1bfe3542be913a4abb4eff66746a21fe1c8fb3619aa8bdabc3f9fffe9f074bd6
e285d21699eade7ffbd00b8ddff1f1dd44d48e34925f8527efa0c2cc548d2caa
c370cf5657177cff2d590410d16f1f5338a4c7f49fe539fabebd18fff4c841bb
2e779b5213a43de355abc1a08372811822879c1559d019d8006deef130792850
f9121c82db5a50b6e15ee1d60a0c2e6e3d205d5a2fbf178cc0494a16cede0113
00b91af8f7d894bad4bb73ee511ca2b22b344c28cbb965f29351b41e7c6986e2
5b750fece8576a64ed87873c53653186cf03aaf88070b6c1e143f11ad3fb8265
d9809fadb29588365444a9d9670b9babdd7b64878479d4919640e6c934c4ea2f
dc96d460fa87942468f7c7c72efd60fbe9f1273b7564df8c44317bd9a81ab7b3
afd1944007926f0eb3ff3259b37398c2ff1b54217c1a1c6093150b4204860538
a53f9ff4ccdb324a25b9b8adb3262d38bfd72f2c7a8bdab7b4eb6e2f211952d7
9403ae399f983d9cb9fab257d6f5cc25328eb6d1efbcc9ebb0b5dd5c120d70e9
ca0b05cfc1b0472a8fbbd86852ad9644090e2adc37ad6750d2b31bbcb595aa73
b81745dd286626ad02bc41e7fdd624068d71967bd4f6f6cbb3dfaf33297c2a5b
b44dbd58222bb123b69ba28a6c6989847f9beba7d642ad47251312d75698b0f6
9ac07472d0b066e7d3534c233954e338a3aed6641b877ba2b5616782bbbbe7d4
cb65113f38cee0d0123469281770720a93d87e49206b417c738b92fa0261cccc
36c621394c1be961ef930357488a62296f58a2f1c58ad0fda0bd5b84e6a1872c
04c24157aa056d24726d61058a7562fb5f29c63004dad73eb1b1aeb8c14420fc
e724025763a8d93bcc90bcb1aa973c3ff62dc2b50b3e050882e50a99c748b49a
def750bdcfb86de6a2fb4d7ec2ac29977467db4d3fd90d965562c417f677aae7
f54533d00abe8baa56557c988d8bb10976af729cb2dbf7b071656596f3861ae3
fdc52852000914ca24def44315a7f30606f4665bbd153c2767ebe6b675556281
9de87fb2cff848da90a4188fa61b064e18e68d4b05d2dd5b3cf0598dc672dcad
bf930b705a165f960e68e60533e8c61b23c4e9a32f19f7eba846b8e798d87fa4
3e88056bc30fd2d056777b13ce2130228c96e20f9b6bc51ee5abebc83731133a
6f6f5199c40e432e6aadd7a13546e06d20d468a2ecbdc362319537cd0687db97
d0a81602bc43d09ae6664ee5ecc4d94a6d6912358ebd3cf302a11163c216eb3a
a37eef5191999a6a468e31e9043abbdc1d47f98a498f45e93c55eac726265df0
45c9aa2893363fe1ccb15e5d700908745b61539b7cef887eb1a8b1ff25115449
dea3f4d172f46ed97a70321af255f9d5700bd2536509a8ce5cfcfc42186da166
a10c7e49369c40507afcb87997b73dce6e49be7aee6f346c88e9b40bb404af34
a88dd536f6f9b41735f93be8ba52a7cccd7c60fbd01d1d817bf93f086c3b96ca
989cc732a48886a734ead7104512375b6ea293a91a297c7c8f074312fe02fc64
f4a540198835e1ffc074887034a7c807b3f0586f218044
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (tent0103pa.dvi)
@start
%DVIPSBitmapFont: Fa cmti10 10.95 19
/Fa 19 120 df<147E49B47E903907C1C38090391F80EFC090383F00FF017E137F491480
4848133F485AA248481400120F5B001F5C157E485AA215FE007F5C90C7FCA21401485C5A
A21403EDF0385AA21407EDE078020F1370127C021F13F0007E013F13E0003E137FECF3E1
261F01E313C03A0F8781E3803A03FF00FF00D800FC133E252977A72E>97
D<EB1FC0EA0FFF5CA2EA003FA291C7FCA25BA2137EA213FEA25BA21201A25BA21203A25B
147E3907F1FF809038F783E09038EF01F013FE390FF800F8A24913FC49137C485A157E5B
15FE123FA290C7FCA248130115FC127EA2140300FE14F85AA2EC07F0A215E048130F15C0
141F15800078EB3F00127C147E003C5B383E01F8381E03E06C485A6CB4C7FCEA01F81F40
76BE2A>I<EC1FE0ECFFF8903803F03E903807C00F90381F8007D93F001380017E131F49
137F485A485A000715005B000F147E484890C7FCA2485AA3127F90C9FCA35A5AA6481403
007E5C5D151E003E5C5D6C5CEC03E0390F800F802603E07EC7FC3801FFF838003FC02129
77A72A>I<EE3F80ED1FFF1700A2ED007FA2167EA216FEA25EA21501A25EA21503A25EA2
1507A25E147E903801FF8F903807C1CF90391F80EFC090383F00FF017E137F5B48486D5A
485AA2485A000F92C7FC5B001F5CA24848137EA215FE127F90C75AA214015A485CA21403
16384814F0A21407167891380FE070127C021F13F0007E013F5B003E137FECF3E1261F01
E35B3A0F8781E3802703FF00FFC7FCD800FC133E294077BE2E>I<EC3F80903801FFE090
3807E0F890381F803CEB3E0001FC131E485A485A12074848133E49133C121F4848137C15
F8EC03F0397F000FE0ECFF80B5EAFC0014C048C8FCA45AA61506150E151E007C143C1578
6C14F0EC01E06CEB07C0390F801F003807C0FC3801FFF038007F801F2976A72A>I<167C
4BB4FC923807C78092380F83C0ED1F87161FED3F3FA2157EA21780EE0E004BC7FCA41401
5DA414035DA30103B512F8A390260007E0C7FCA3140F5DA5141F5DA4143F92C8FCA45C14
7EA414FE5CA413015CA4495AA4495AA4495A121E127F5C12FF49C9FCA2EAFE1EEAF83C12
70EA7878EA3FE0EA0F802A5383BF1C>I<EB01FC13FF5CA21303A25CA21307A25CA2130F
A25CA2131FA25CA2133FA291C8FCEC03F890387F0FFE91383E0F80D97E7813C0ECE007D9
FFC013E014801400A2485A5BA25B0003140F16C05BA20007141F16805BA2000F143F1600
5B5D001F147EEDFE074913FCA2003F0101130FEDF80E1300161E48ECF01CA2007E1538A2
00FE1570020013E048EC7FC00038EC1F0028407ABE2E>104 D<1478EB01FCA21303A314
F8EB00E01400AD137C48B4FC38038F80EA0707000E13C0121E121CEA3C0F1238A2EA781F
00701380A2EAF03F140012005B137E13FE5BA212015BA212035B1438120713E0000F1378
EBC070A214F0EB80E0A2EB81C01383148038078700EA03FEEA00F8163E79BC1C>I<EB01
FC13FF5CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C8FCED03E049EB
0FF8ED3C3C017EEB707CEDE1FC9038FE01C1EC03839038FC0703140E0001011C13F89138
3800E0494813001460000313E0EBF9C0EBF78001FEC8FC1207EBFFE0EBE7F8EBE0FE000F
137F6E7EEBC01F6E7E121F16701380A2003F15F0021F13E001001380A248148116C0007E
EB0F83168000FE14879138078F0048EB03FE0038EB00F826407ABE2A>107
D<EB07F0EA03FF14E0A2EA000FA214C0A2131FA21480A2133FA21400A25BA2137EA213FE
A25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25A
1307127EA2EAFE0F130E12FCA2131E131CA2EA7C381378EA3C70EA1FE0EA0780144079BE
17>I<D801F0D93F80137F3D07FC01FFE003FFC03D0F3E07C1F80F83F03D0E1F0F00FC1E
01F8001E011C90387C3800001C49D97E707F003C01F05C0038157F4A5C26783FC05C1270
4A91C7FC91C7127E00F003FE1301494A5CEA007EA20301140301FE5F495CA20303140700
0160495C180F03075D0003051F13E0494A1480A2030FEC3F810007F001C0495CA2031F91
383E0380120F494AEC0700A2033F150E001FEF1E1C4991C7EA0FF80007C7000EEC03E043
2979A74A>I<D801F0EB3F803A07FC01FFE03A0F3E07C1F83A0E1F0F00FC001E011C137C
001C49137E003C13F012385C38783FC012705C91C7FC00F015FE495CEA007EA2150101FE
5C5BA2150300015D5B15075E0003020F13704914C0A2031F13F00007ED80E05B1681EE01
C0120F49EC0380A2EE0700001FEC0F0E49EB07FC0007C7EA01F02C2979A733>I<EC1FC0
ECFFF8903803F07C90380FC01FEB1F8090393F000F80017E14C0491307484814E0485A12
075B000F15F0485AA2485AA2ED0FE0127F90C7FCA2151F4815C05AA2ED3F80A2ED7F00A2
48147E007C5C007E13015D4A5A003E495A6C495A4A5A260F803EC7FC3807C0FC3801FFF0
38003F80242977A72E>I<903903E001F890390FF807FE903A1E7C1E0F80903A1C3E3C07
C0013C137801389038E003E0EB783F017001C013F0ED80019038F07F0001E015F8147E16
03000113FEA2C75AA20101140717F05CA20103140F17E05CA20107EC1FC0A24A1480163F
010F15005E167E5E131F4B5A6E485A4B5A90393FB80F80DA9C1FC7FCEC0FFCEC03E049C9
FCA2137EA213FEA25BA21201A25BA21203A2387FFFE0B5FCA22D3A80A72E>I<D801F013
FC3A07FC07FF803A0F3E0F03C0260E1F1C13E0001EEB380F001C1370003CEBE01F123814
C0D8783F14C00070903880070092C7FC91C8FC12F05BEA007EA313FE5BA312015BA31203
5BA312075BA3120F5BA3121F5B0007C9FC232979A726>114 D<EC7F80903801FFE09038
07C0F890381F003C013E131C013C131E017C133E49137E15FEA2000114FCA215706D1300
7FEBFFC014FC6C13FF15806D13C06D13E0010F13F01300140F14071403120C123F387F80
011403D8FF0013E0A300FCEB07C000F0EB0F8012700078EB1F006C133C381F01F83807FF
E0C690C7FC1F297AA725>I<EB01C0EB03F01307A25CA2130FA25CA2131FA25CA2133FA2
91C7FCA2007FB51280B6FC1500D8007EC7FC13FEA25BA21201A25BA21203A25BA21207A2
5BA2120FA25BA2121F141C1380A2003F133C1438EB0078147014F05C495AEA1F03495A6C
48C7FCEA07FCEA01F0193A78B81E>I<137C48B4141C26038F80137EEA0707000E7F001E
15FE121CD83C0F5C12381501EA781F007001805BA2D8F03F1303140000005D5B017E1307
A201FE5C5B150F1201495CA2151F0003EDC1C0491481A2153F1683EE0380A2ED7F070001
02FF13005C01F8EBDF0F00009038079F0E90397C0F0F1C90391FFC07F8903907F001F02A
2979A731>I<017C167048B491387001FC3A038F8001F8EA0707000E01C015FE001E1403
001CEDF000EA3C0F0038177C1507D8781F4A133C00701380A2D8F03F130F020049133812
005B017E011F14784C137013FE5B033F14F0000192C712E05BA2170100034A14C049137E
17031880A2EF070015FE170E00010101141E01F86D131C0000D9039F5BD9FC076D5A903A
3E0F07C1E0903A1FFC03FFC0902703F0007FC7FC372979A73C>119
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr8 8 7
/Fb 7 54 df<EC0380B3A4B812FCA3C7D80380C7FCB3A42E2F7CA737>43
D<EB3FC0EBFFF03803E07C48487E48487E497E001EEB0780A2003E14C0A248EB03E0A500
FC14F0B0007C14E0A3007E1307003E14C0A36CEB0F806C14006D5A3807C03E3803F0FC38
00FFF0EB3FC01C2D7DAB23>48 D<130C133C137CEA03FC12FFEAFC7C1200B3B113FE387F
FFFEA2172C7AAB23>I<EB7F803801FFF0380780FC380E003F48EB1F8048EB0FC05A0060
EB07E012F000FC14F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC3F00147E14
7C5C495A495A495A495A011EC7FC5B5B4913305B485A4848136048C7FC000E14E0001FB5
FC5A4814C0B6FCA21C2C7DAB23>I<EB3FC03801FFF03807C0FC380E007E487FEC1F8000
3F14C0A2EB800F1300A2000C131FC7FC1580A2EC3F00143E5C5CEB03F0EBFFC014F0EB00
FC143FEC1F8015C0140F15E0A2EC07F0A21238127C12FEA3EC0FE012F8006014C0007013
1F6C1480001EEB3F00380780FC3801FFF038007FC01C2D7DAB23>I<140EA2141E143EA2
147E14FEA2EB01BE1303143E1306130E130C131813381330136013E013C0EA0180120313
001206120E120C5A123812305A12E0B612FCA2C7EA3E00A9147F90381FFFFCA21E2D7EAC
23>I<000CEB0180380FC01F90B512005C5C14F014C0D80C7EC7FC90C8FCA8EB1FC0EB7F
F8380DE07C380F801F01001380000E130F000CEB07C0C713E0A2140315F0A4127812FCA4
48EB07E012E0006014C00070130F6C14806CEB1F006C133E380780F83801FFE038007F80
1C2D7DAB23>I E
%EndDVIPSBitmapFont
/Fc 152[35 35 102[{}2 66.4176 /CMSY8 rf
%DVIPSBitmapFont: Fd cmmi8 8 6
/Fd 6 111 df<EB03FE131FEB7E0013F8EA03F0485A485A485AA248C7FCA25AEBFFF0A2
007EC7FCA25AA3127CA47EA26C1308380F801C3807C0F83801FFE038007F00171E7D9C1D
>15 D<90273FFFFC0FB5FCA2D900FEC7EA3F80A24A1500A201015D177E5CA2010315FE5F
5CA2010714015F5CA2010F14035F5C91B6FC5B9139C00007E05CA2013F140F5F91C7FCA2
49141F5F137EA201FE143F94C7FC5BA200015D167E5BA2000315FEB539E03FFFF8A2382D
7CAC3A>72 D<90383FFFFCA2903800FE00A25CA21301A25CA21303A25CA21307A25CA213
0FA25CA2131FA25CA2133FA291C7FCA25BA2137EA213FEA25BA21201A25BA21203B512E0
A21E2D7DAC1F>I<EB07E0EB1FF890387C1CE0EBF80D3801F00F3803E007EA07C0120FD8
1F8013C0A2EA3F00140F481480127EA2141F00FE14005AA2EC3F02EC3E06A25AEC7E0E00
7CEBFE0C14FC0101131C393E07BE18391F0E1E38390FFC0FF03903F003C01F1F7D9D25>
97 D<1307EB0F80EB1FC0A2EB0F80EB070090C7FCA9EA01E0EA07F8EA0E3CEA1C3E1238
12301270EA607EEAE07C12C013FC485A120012015B12035BA21207EBC04014C0120F1380
1381381F01801303EB0700EA0F06131EEA07F8EA01F0122E7EAC18>105
D<3907C007E0391FE03FF83918F8783E393879E01E39307B801F38707F00126013FEEAE0
FC12C05B00815C0001143E5BA20003147E157C5B15FC0007ECF8081618EBC00115F0000F
1538913803E0300180147016E0001F010113C015E390C7EAFF00000E143E251F7E9D2B>
110 D E
%EndDVIPSBitmapFont
/Fe 148[45 25 2[45 45 10[61 40[61 28[71 19[25 1[{}8 90.9091
/CMSY10 rf
%DVIPSBitmapFont: Ff cmmi10 10.95 33
/Ff 33 122 df<EC07F8EC3FFF9138FC0F80903903F003E090270FC001F01370D91F806D
13F0017FC714E001FE804848147E000316014916C04848143F000FEE03805B001F160700
3F1700495D170E007F161E49151C173C5F00FF167090C813F05F5F5FA294C7FC7EA25E6C
5D4B7F6C6C9039079F81C0ED0F1F6C6C90383C0F836C6C01F014803C01F80FC007C7003B
007FFF0003FED91FF0EB00F834297DA73A>11 D<EB03F8D90FFE140F90383FFF8090B56C
131E4880486E131C2607FC1F143C270FE003F81338261F8000147890C7007C1370003E02
3C13F0003C023E13E048EC1E010070020E13C000F0EC0F034816801507C81307EE870016
8FED038E169E169CA216BC16B8A216F85EA25EA35EA35EA31507A293C7FC5DA4151EA315
3E153CA45DA31570A21560303C7FA72F>13 D<EC01C0EC0FFF023F13E0027913F0ECE03F
903801C00FEC8007ED01E0010390C7FCA280130180A280A26D7E80A2147E147F6E7EA26E
7E81140FEC7FF0903801F7F8EB07C790381F83FCEB3E03EB7C0101F87F12013803F00048
5AA24848137E485AA2123F90C7FCA25A127EA300FE147C5A15FCA25D1401A25D007C1303
5DA26C495A4A5A6C91C7FC6C131E6C6C5A3803E0783800FFE0EB3F8024427CC028>I<EC
1FF8903801FFFC010713F890381FF000EB3F8001FEC7FC485A485A485A120F485AA2485A
A2485AA290B512C0B6FC150090C8FCA35AA7127E127F7EA26C7E000F14703907C001F039
03E003E03901F81F8039007FFE00EB0FF01E287CA625>I<011FB612FE017F15FF48B8FC
5A4816FE3B0FC03801C000EA1F00003E1403003C01785B4813705AECF0075AC712E00101
91C7FCA25DEB03C0A313071480A2010F5BA2EB1F0082A2133EA2137E825B150F0001815B
120315075BC648EB038030287DA634>25 D<011FB612C090B7FC5A5A481680260FC007C8
FC48C65A123E003C130E48131E5A5AA2C75AA3147CA2147814F8A4495AA31303A25CA213
07A3495AA3131FA25C6DC9FC2A287DA628>28 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E
000A0A798919>58 D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312
011380120313005A120E5A1218123812300B1C798919>I<15FF020713E091381F00F802
78133E4A7F4948EB0F804948EB07C04948EB03E091C7FC496CEB01F002E014F8131F1600
17FCA25C0107C812FE90C9FCA7EC03FCEC3FFF9138FE03C1903903F000E149481371D91F
80133149C7123B017EEC1BFC5B0001151F4848140F484815F8A2485A121F17F0485A161F
17E0127F5BEE3FC0A200FF168090C8127F1700A216FEA2484A5A5E007E1403007F4A5A5E
6C4A5A6C6C495A4BC7FC6C6C13FE6C6C485A3903F80FF06CB512C06C6C90C8FCEB0FF82F
437CC030>64 D<17075F84171FA2173F177FA217FFA25E5EA24C6C7EA2EE0E3F161E161C
1638A21670A216E0ED01C084ED0380171FED07005D150E5DA25D157815705D844A5A170F
4A5A4AC7FC92B6FC5CA2021CC7120F143C14384A81A24A140713015C495AA249C8FC5B13
0E131E4982137C13FED807FFED1FFEB500F00107B512FCA219F83E417DC044>I<49B712
F818FF19C0D9000190C7EA3FF0F00FF84BEC03FCF000FE197F0203EE3F805DF11FC0A202
07EE0FE05D1AF0A2020F16075DA21AF8141F5DA2190F143F5DA21AF0147F4B151FA302FF
17E092C9123FA21AC049177F5C1A8019FF010318005C4E5A61010716034A5E4E5A180F01
0F4C5A4A5E4E5A4EC7FC011F16FE4A4A5AEF07F8013FED0FE0EF3FC04A49B4C8FC017FEC
0FFCB812F017C004FCC9FC453E7DBD4B>68 D<49B912C0A3D9000190C71201F0003F4B15
1F190F1A80020316075DA314075D1A00A2140F4BEB0380A205075B021FED000E4B92C7FC
5FA2023F141E5D173EEE01FE4AB55AA3ED800102FF6D5A92C71278A34915705C191C05F0
133C01034B13384A167894C71270A2010717F04A5E180161010F16034A4B5AA2180F011F
4CC7FC4A5D187E013F16FE4D5A4A140F017F15FFB95AA260423E7DBD43>I<49B9FCA3D9
000190C7120718004B157F193F191E14035DA314075D191CA2140F5D17074D133C021F02
0E13384B1500A2171E023F141C4B133C177C17FC027FEB03F892B5FCA39139FF8003F0ED
00011600A2495D5CA2160101035D5CA293C9FC13075CA3130F5CA3131F5CA2133FA25C49
7EB612F8A3403E7DBD3A>I<DC3FF0130E923803FFFE031F9038FF801C923A7FF00FC03C
913B01FF0001E07CDA07FC903800F0FCDA0FF0EC79F8DA3FC0143F4A48141F4AC8120FD9
03FC16F0495A49481507495A013F17E04A1503495A49C9FC4818C05B1203485A1980485A
A2485A95C7FC123F5BA2127F5BA312FF5BA3043FB512E0A290C8FC9339001FF800170F60
A2171FA260A26C6C153FA2606C7E177F121F6D5E6C6C15FF00075D6C6C5C6C6CDA07BFC7
FC6CB4EC1F1FD97FC0EB7E0F90391FF803F80107B5EAE00601010280C8FC9026001FF8C9
FC3F427BBF48>I<49B6D8C03FB512F81BF01780D900010180C7383FF00093C85B4B5EA2
197F14034B5EA219FF14074B93C7FCA260140F4B5DA21803141F4B5DA21807143F4B5DA2
180F4AB7FC61A20380C7121F14FF92C85BA2183F5B4A5EA2187F13034A5EA218FF13074A
93C8FCA25F130F4A5DA21703131F4A5DA2013F1507A24A5D496C4A7EB6D8E01FB512FCA2
614D3E7DBD4C>I<49B612C05BA2D90001EB800093C7FC5DA314035DA314075DA3140F5D
A3141F5DA3143F5DA3147F5DA314FF92C8FCA35B5CA313035CA313075CA3130F5CA3131F
5CA2133FA25CEBFFE0B612E0A32A3E7DBD28>I<49B600C090387FFFF896B5FC5FD90001
0180C7000F130093C813F84B16E01A804FC7FC0203163C4B15F84E5AF003C002074B5A4B
021FC8FC183E1878020F5D4BEB03E0EF07804DC9FC021F143E4B5B17F04C5A023F1307ED
C00F4C7E163F027FEBFFF8ED81EFED83CF92388F87FC9138FF9F0792383C03FE15784B6C
7E4913E0158092C77F5C01036F7E5C717EA213074A6E7EA2717E130F4A6E7EA284011F15
035C717E133F855C496C4A13E0B600E0017F13FFA34D3E7DBD4D>75
D<48B912FCA25A913A0003FE000F01F84A1301D807E0EE00F8491307491778000F5D90C7
FC001E140FA2001C4B1470123C0038141FA200785D1270033F15F000F018E0485DC81600
157FA25EA215FFA293C9FCA25CA25DA21403A25DA21407A25DA2140FA25DA2141FA25DA2
143FA25DA2147FA214FF497F001FB612FCA25E3E3D7FBC35>84 D<007FB500F090387FFF
FE19FC5D26007FE0C7000313804A913800FC004A5D187001FF16F0A291C95AA248160160
5BA200031603605BA20007160795C7FC5BA2000F5E170E5BA2001F161E171C5BA2003F16
3C17385BA2007F1678A2491570A200FF16F0A290C95AA216015F5A16035F16074CC8FC16
0E161E5E007F5D5E6C4A5A6D495A6C6C495A6C6C011FC9FC6C6C137E3903FC03F8C6B512
E0013F1380D907FCCAFC3F407ABD3E>I<027FB5D88007B512C091B6FCA2020101F8C7EB
F8009126007FE0EC7F804C92C7FC033F157C701478616F6C495A4E5A6F6C495A4EC8FC18
0E6F6C5B606F6C5B6017016F6C485A4D5A6F018FC9FC179E17BCEE7FF85F705AA3707EA2
83163F167FEEF7FCED01E7EEC3FEED0383ED070392380E01FF151E4B6C7F5D5D4A486D7E
4A5A4A486D7E92C7FC140E4A6E7E5C4A6E7E14F0495A49486E7E1307D91F806E7ED97FC0
14072603FFE0EC1FFF007F01FC49B512FEB55CA24A3E7EBD4B>88
D<B66C0103B51280A3000101E0C8387FF0006C49ED3F80017F94C7FC183C606D6C157060
6D6C4A5A17034D5A6D6C4AC8FC170E5F6D6C5C17785F6D6C495A5F6E495A6D4AC9FC160E
6DEB801E5E5E91387FC0705EEDC1C0EC3FE3EDE78003FFCAFC6E5A5D6E5AA25DA25D141F
A35D143FA35D147FA392CBFC5CA3495AA3497E0007B512FEA3413E7DBD35>I<EC1F80EC
FFE0903903F0707090390FC039F890381F801D90383F000F017E5C5B00011407485A4848
5CA2485A001F140F5E485AA2151F007F5D5BA2153F00FF92C7FC90C7FCA25D92387E0380
5AA215FEEDFC07007E0101140014035E6C0107130E140E3A1F801C7C1C000F13783A07C1
F03E383A01FFC01FF03A007F0007C029297DA730>97 D<EB1FC0EA0FFF5CA2EA003FA291
C8FCA25BA2137EA213FEA25BA21201A25BA21203A25BEC3F800007EBFFE09038F3C1F849
C67E01FE137E4848133E49133F5B491480001F141F5B5BED3FC0123FA290C7FCA248147F
1680127EA215FF00FE15005AA24A5AA25D1403485C1407007C5C4A5A5D003C495A003E49
C7FC001E137E6C13F8380783F03803FFC0C648C8FC22407CBE27>I<EC07F0EC7FFE9038
01FC0F903907E0038090390FC001C0D93F8013E090387F000701FE131F485A485A16C048
5A000F15804990C7FC121F485AA3127F5BA312FF90C9FCA6007E1560007F15E01501ED03
C06CEC07806DEB0F00001F141E6C6C137C3907E001F03901F01FC06CB5C7FCEB1FF02329
7DA727>I<EE07F0ED03FF17E0A2ED000FA217C0A2161FA21780A2163FA21700A25EA216
7EA216FEA25EEC1F80ECFFE1903803F07190390FC039F890381F801D90383F000F137E49
5C00011407485A485A5E485A001F140FA248485CA2151F127F495CA2153F12FF90C790C7
FCA25DEE038048147EA215FE1607007ED901FC130014035E6C0107130E140E3A1F801C7C
1C000F13783A07C1F03E383A01FFC01FF03A007F0007C02C407DBE2F>I<143C14FEA213
01A314FCEB00701400AD137E3801FF803803C7C0EA0703000F13E0120E121C13071238A2
EA780F007013C0A2EAF01F14801200133F14005B137EA213FE5BA212015B0003130E13F0
A20007131EEBE01CA2143CEBC0381478147014E013C13803E3C03801FF00EA007C173E7E
BC1F>105 D<D801F0EB0FF0D807FCEB3FFED80F1FEBF01F000E903903C00F80271E0F87
007F001C018E1307003C01DC80003813F85CEA781F00705B5CA200F049130F013F5D0000
90C7FCA2161F495D137E163F94C7FC13FE495C167EA200019238FE03804914FCA2030113
07000303F813005B5FEEF00E0007161E49151C5F1778000F6E6C5A49EC7FC0D80380021F
C7FC31297EA737>110 D<D907C013FE903A0FF003FF80903A1C7C0F07E0903A383C1C03
F0903A783E7801F80170EBF0009026F03FE013FC01E05B4B13FE0001017F147E01C090C7
FC147E17FF000313FEA2C75AA201015C17FE5CA20103140317FC5CA20107EC07F8A24A14
F0160F010F15E0161F17C0EE3F80011F15006E137E5E9138B801F890393FBC03E091389E
0FC0DA07FFC7FCEC01F849C9FCA2137EA213FEA25BA21201A25BA21203A2B512E0A3303A
84A72E>112 D<91381F800C9138FFE01C903903F0707C90390FC0387890391F801CF890
383F000F137E4914F000011407485A485A16E0485A121F150F484814C0A3007F141F4914
80A300FF143F90C71300A35D48147EA315FE007E495A1403A26C13074A5A381F801D000F
13793807C1F33901FFC3F038007F03130014075DA3140F5DA3141F5DA2143F147F90381F
FFFE5BA2263A7DA729>I<D801F0EB3F80D807FCEBFFE03A0F1F03C0F0000E90380F00F8
391E0F9E03001C13BC003CEBF807003813F0A226781FE013F000709038C001C092C7FC5C
12F0133F000090C8FCA35B137EA313FE5BA312015BA312035BA312075BA3120F5BEA0380
25297EA729>I<EC1FC0ECFFF8903803E03C903807800E90381E0007168049130F49131F
153FA201F81400A2151C6D90C7FC7FEBFFE014FE90387FFFC06D7F6D13F86D7F13039038
001FFE14031400157E000C143E123F487EA248C7123CA25D12FC00F05C0070495A007849
5A6C495A260F803EC7FC3803FFF838007FC021297CA72B>I<D901F8133FD907FEEBFFE0
903A1E0F83C0F0903A3807C780F890397003CF0301E013FED801C0EBFC071203018013F8
D8070015F0EE01C0000E4AC7FCA2001E1307A2C75BA2140F5DA3141F5DA3143F92380001
C0A34A1303001E1680003F017E1307267F80FE14005ED8FF81141ED901DF131CD8FE035C
3A7C078F80F03A3C0F07C1E03A1FFC03FF802707F0007EC7FC2D297EA734>120
D<137C48B4EC03802603C7C0EB0FC0EA0703000F7F000E151F001C168013071238163FD8
780F150000705BA2D8F01F5C4A137E1200133F91C712FE5E5B137E150113FE495CA21503
00015D5BA215075EA2150F151F00005D6D133F017C137F017E13FF90393F03DF8090380F
FF1FEB01FC90C7123F93C7FCA25DD80380137ED80FE013FE001F5C4A5AA24848485A4A5A
6CC6485A001C495A001E49C8FC000E137C380781F03803FFC0C648C9FC2A3B7EA72D>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmbx10 10.95 11
/Fg 11 119 df<140F143F5C495A130F48B5FCB6FCA313F7EAFE071200B3B3A8B712F0A5
243C78BB34>49 D<903803FF80013F13F890B512FE00036E7E4881260FF80F7F261FC003
7F4848C67F486C6D7E6D6D7E487E6D6D7EA26F1380A46C5A6C5A6C5A0007C7FCC8FC4B13
00A25E153F5E4B5AA24B5A5E4A5B4A5B4A48C7FC5D4A5AEC1FE04A5A4A5A9139FF000F80
EB01FC495A4948EB1F00495AEB1F8049C7FC017E5C5B48B7FC485D5A5A5A5A5AB7FC5EA4
293C7BBB34>I<903801FFE0010F13FE013F6D7E90B612E04801817F3A03FC007FF8D807
F06D7E82D80FFC131F6D80121F7FA56C5A5E6C48133FD801F05CC8FC4B5A5E4B5A4A5B02
0F5B902607FFFEC7FC15F815FEEDFFC0D9000113F06E6C7E6F7E6F7E6F7E1780A26F13C0
A217E0EA0FC0487E487E487E487EA317C0A25D491580127F49491300D83FC0495A6C6C49
5A3A0FFE01FFF86CB65A6C5DC61580013F49C7FC010313E02B3D7CBB34>I<ED01F81503
1507A2150F151F153FA2157F15FF5C5CA25C5CEC1FBFEC3F3F143E147C14FCEB01F814F0
EB03E01307EB0FC0EB1F801400133E137E5B485A5B485A1207485A5B48C7FC5A127E5AB8
12F8A5C8387FF800AA49B612F8A52D3C7DBB34>I<00071538D80FE0EB01F801FE133F90
B6FC5E5E5E5E93C7FC5D15F85D15C04AC8FC0180C9FCA9ECFFC0018713FC019F13FF90B6
7E020113E09039F8007FF0496D7E01C06D7E5B6CC77FC8120F82A31780A21207EA1FC048
7E487E12FF7FA21700A25B4B5A6C5A01805C6CC7123F6D495AD81FE0495A260FFC075B6C
B65A6C92C7FCC614FC013F13F0010790C8FC293D7BBB34>I<ED3FFF0203B512F0021F14
FE027F6E7E902701FFF80713E00107D9C00013F84990C7EA3FFCD93FFCEC0FFF49486E7F
49486E7F48496E7F4A80488448496F7EA24890C96C7E4884A249161F003F84A348487013
80A400FF19C0AD007F19806D5EA3003F1900A26D5E6C60A26C6D4B5AA26C6D4B5A6C6D4A
5BA26C6D4A5B6C6D4A5B6D6C4A5B6DB4023F90C7FC6D01C0EBFFFE0107D9F80713F80101
90B612E06D5E021F4AC8FC020314F0DA003F90C9FC42407ABE4F>79
D<903807FFC0013F13F848B6FC48812607FE037F260FF8007F6DEB3FF0486C806F7EA36F
7EA26C5A6C5AEA01E0C8FC153F91B5FC130F137F3901FFFE0F4813E0000F1380381FFE00
485A5B485A12FF5BA4151F7F007F143F6D90387BFF806C6C01FB13FE391FFF07F36CEBFF
E100031480C6EC003FD91FF890C7FC2F2B7DA933>97 D<ECFFF0010713FE011F6D7E017F
809039FFE07FE0489038801FF048496C7E48486D7E48486D7E121F491301003F81A2485A
6F1380A212FFA290B7FCA401F0C9FCA5127FA27F123FEE0F806C7E161F6C6C15006C6C5C
6C6D137E6C9038E001FC6C9038F80FF8013FB55A6D14C0010391C7FC9038007FF8292B7D
A930>101 D<903A03FF8007F0013F9038F83FF8499038FCFFFC48B712FE48018313F93A
07FC007FC34848EB3FE1001FEDF1FC4990381FF0F81700003F81A7001F5DA26D133F000F
5D6C6C495A3A03FF83FF8091B5C7FC4814FC01BF5BD80F03138090CAFCA2487EA27F13F0
6CB6FC16F016FC6C15FF17806C16C06C16E01207001F16F0393FE000034848EB003F49EC
1FF800FF150F90C81207A56C6CEC0FF06D141F003F16E001F0147FD81FFC903801FFC027
07FF800F13006C90B55AC615F8013F14E0010101FCC7FC2F3D7DA834>103
D<01FFEBFFE0B5000713FC021FEBFF80027F80DAFF8113F09139FC007FF8000701F06D7E
6C496D7E4A130F4A6D7E1880A27013C0A38218E0AA4C13C0A318805E18005E6E5C6E495A
6E495A02FCEBFFF0DAFF035B92B55A029F91C7FC028713FC028113C00280C9FCACB512FE
A5333B7DA83A>112 D<B500FC90383FFFC0A5000101C0903803E0006E1307A26C5E6E13
0F017F5D6E131F013F92C7FC6E5B011F143E6E137E010F147C6E13FCA26D5C15816D5C15
C36D5C15E76D5C15FF6E5BA36E90C8FCA26E5AA26E5AA26E5AA26E5AA232287EA737>
118 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmr10 10.95 66
/Fh 66 128 df<4AB4FC021F13C091387F01F0903901FC0078D907F0131C4948133E4948
13FF49485A137F1400A213FE6F5A163893C7FCAA167FB8FCA33900FE00018182B3AC486C
ECFF80007FD9FC3F13FEA32F407FBF33>12 D<121EEA7F80EAFFC0A9EA7F80ACEA3F00AC
121EAB120CC7FCA8121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A4179C019>33
D<001E130F397F803FC000FF137F01C013E0A201E013F0A3007F133F391E600F30000013
00A401E01370491360A3000114E04913C00003130101001380481303000EEB070048130E
0018130C0038131C003013181C1C7DBE2D>I<121EEA7F8012FF13C0A213E0A3127FEA1E
601200A413E013C0A312011380120313005A120E5A1218123812300B1C79BE19>39
D<1430147014E0EB01C0EB03801307EB0F00131E133E133C5B13F85B12015B1203A2485A
A2120F5BA2121F90C7FCA25AA3123E127EA6127C12FCB2127C127EA6123E123FA37EA27F
120FA27F1207A26C7EA212017F12007F13787F133E131E7FEB07801303EB01C0EB00E014
701430145A77C323>I<12C07E12707E7E121E7E6C7E7F12036C7E7F12007F1378137CA2
7FA2133F7FA21480130FA214C0A3130714E0A6130314F0B214E01307A614C0130FA31480
A2131F1400A25B133EA25BA2137813F85B12015B485A12075B48C7FC121E121C5A5A5A5A
145A7BC323>I<1506150FB3A9007FB912E0BA12F0A26C18E0C8000FC9FCB3A915063C3C
7BB447>43 D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380
120313005A120E5A1218123812300B1C798919>I<B512FEA617067F961E>I<121EEA7F80
A2EAFFC0A4EA7F80A2EA1E000A0A798919>I<EB01FE90380FFFC090383F03F090387C00
F849137C48487F48487F4848EB0F80A2000F15C04848EB07E0A3003F15F0A290C7120348
15F8A64815FCB3A26C15F8A56C6CEB07F0A3001F15E0A36C6CEB0FC0A26C6CEB1F800003
15006C6C133E6C6C5B017C5B90383F03F090380FFFC0D901FEC7FC263F7DBC2D>48
D<EB01C013031307131F137FEA07FFB5FC139FEAF81F1200B3B3ACEB7FF0B612F8A31D3D
78BC2D>I<EB07FC90383FFF8090B512E03903F01FF83907C007FC390F0001FE001E6D7E
001C1580003CEC7FC05AED3FE01270B4FC6DEB1FF07FA56C5A6CC7FC120CC813E0153FA2
16C0157F168015FF16004A5A5D4A5A4A5A5D4A5A4A5A4AC7FC147E147C5C495A495A495A
495A49C71270133E133C5B4914E0485A485A485A48C7120148B6FCA25A4815C0B7FCA324
3D7CBC2D>I<EB07FC90383FFF809038F80FE03901E003F839078001FCD80F007F000E6D
7E001E1580D81F80137F486C14C07FA27F5BA2121F6C5AC8138015FF1600A24A5AA24A5A
5DEC07E04A5A023FC7FCEB1FFCECFF809038000FE0EC07F86E7E6E7E6E7E1680ED7FC0A2
16E0153FA216F0A2120C123F487E487EA316E0A249137F6CC713C01278EDFF807E6C4913
006C495A3907C007FC3903F80FF0C6B55A013F1380D907F8C7FC243F7CBC2D>I<150E15
1E153EA2157EA215FE1401A21403EC077E1406140E141CA214381470A214E0EB01C0A2EB
0380EB0700A2130E5BA25B5BA25B5B1201485A90C7FC5A120E120C121C5AA25A5AB8FCA3
C8EAFE00AC4A7E49B6FCA3283E7EBD2D>I<00061403D80780131F01F813FE90B5FC5D5D
5D15C092C7FC14FCEB3FE090C9FCACEB01FE90380FFF8090383E03E090387001F8496C7E
49137E497F90C713800006141FC813C0A216E0150FA316F0A3120C127F7F12FFA416E090
C7121F12FC007015C012780038EC3F80123C6CEC7F00001F14FE6C6C485A6C6C485A3903
F80FE0C6B55A013F90C7FCEB07F8243F7CBC2D>I<EB03FCEB1FFF90387E07C09038FC03
F048486C7E48486C7E4848137C000F147E4848137F81003F15805B007F15C0A2151F12FF
16E0A516F0A5127F153FA36C7EA2001F147F120F6C6C13FF6D13DF000313013900F8039F
90387E0F1FD91FFE13E0EB07F090C7FCA2ED3FC0A41680157FD80F801400487E486C13FE
A24A5A5D49485AEB8007391E000FE0001F495A260FC07FC7FC3803FFFE6C13F838003FC0
243F7CBC2D>57 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3121EEA7F80A2EAFF
C0A4EA7F80A2EA1E000A2779A619>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3
121E127FEAFF80A213C0A4127F121E1200A412011380A3120313005A1206120E120C121C
5A1230A20A3979A619>I<007FB912E0BA12F0A26C18E0CDFCAE007FB912E0BA12F0A26C
18E03C167BA147>61 D<EB1FF890B5FC3903E01FC0390F0007F0001EEB03F848EB01FC48
14FE140000FE14FF7E7FA46CC7FC123EC7EA01FEA2EC03FCEC07F815F0EC0FC0EC1F80EC
3F00143E5C147814F85C13015CA2495AA25CAB91C7FC90C8FCA8EB0780EB1FE0A2497EA4
6D5AA2EB078020407BBF2B>63 D<15074B7EA34B7EA34B7EA34B7EA34B7E15E7A2913801
C7FC15C3A291380381FEA34AC67EA3020E6D7EA34A6D7EA34A6D7EA34A6D7EA34A6D7EA3
49486D7E91B6FCA249819138800001A249C87EA24982010E157FA2011E82011C153FA201
3C820138151FA2017882170F13FC00034C7ED80FFF4B7EB500F0010FB512F8A33D417DC0
44>65 D<B712FCEEFF8017F00001903980000FF86C6CC7EA03FE707E701380EF7FC0EF3F
E0A2EF1FF0A218F8A3170F171FA318F0A2EF3FE0177F18C0EFFF804C1300EE03FCEE0FF8
EE7FE091B6C7FC17E091C7EA07FCEE01FE933800FF80EF7FC0EF3FE0EF1FF018F8170F18
FC1707A218FEA718FC170FA2EF1FF818F0173FEF7FE0EFFFC00403138048486C90380FFE
00B85A17E094C7FC373E7DBD40>I<DB3FF01306912603FFFE130E020F9038FF801E913A
3FF007E03E9139FF8000F8D903FEC7EA7C7ED907F8EC1EFE4948140FD93FE01407494814
03495A91C812014848150012034848167E5B000F173EA24848161EA2123F5B180E127FA3
49160012FFAC127F7F180EA2123FA27F001F171E181C6C7EA20007173C6D16386C6C1678
000117706C6C16F06EEC01E06D6C15C06D6C1403D90FF0EC07806D6CEC1F00D903FE143E
902600FF8013F891393FF007F0020FB512C0020391C7FC9138003FF037427BBF42>I<B7
12FCEEFF8017E000019039C0001FF86C6C48EB03FEEE00FF717E717EEF0FE084717E717E
170184717EA21980187F19C0A3F03FE0A519F0AB19E0A5F07FC0A21980A218FF19004D5A
A24D5A6017074D5A4D5AEF7FC04DC7FCEE03FE48486CEB1FF8B85A178004FCC8FC3C3E7D
BD45>I<B912E0A300019038C000016C6C48EB001FEF0FF01703A217011700A31870A418
38161CA41800A2163CA2167C16FC150391B5FCA3EC80031500167C163CA2161CA21807A3
180E93C7FCA4181E181CA2183CA2187CA218F8170117031707171F48486CEB01FFB912F0
A3383E7DBD3E>I<DB3FE0130C912603FFFE131C021F9038FF803C913A7FF00FC07C9139
FF0001F0D903FC90380078FC4948143DD91FE0141F4948140F4948140701FF15034890C8
FC491501485A000716005B000F177C5B001F173CA2485AA2181C127FA25B95C7FC12FFAB
041FB512F0127FA26D9139000FFE00EF03FC123FA27F121FA26C7EA212077F12036C7E7F
6C7F6D6C14076D7E6D6C140FD907F8141ED903FEEC3C7C902600FF80EBF83C913A7FF007
F01C021FB5EAC00C020391C8FC9138003FF03C427BBF47>71 D<B6D8C01FB512F8A30001
01E0C7383FFC0026007F80EC0FF0B3A691B7FCA30280C7120FB3A92601FFE0EC3FFCB6D8
C01FB512F8A33D3E7DBD44>I<B612F0A3C6EBF000EB3FC0B3B3B2EBFFF0B612F0A31C3E
7EBD21>I<011FB512FCA3D9000713006E5A1401B3B3A6123FEA7F80EAFFC0A44A5A1380
D87F005B007C130700385C003C495A6C495A6C495A2603E07EC7FC3800FFF8EB3FC02640
7CBD2F>I<B612F8A3000101E0C9FC38007F80B3B0EF0380A517071800A45FA35FA25F5F
5F4C5A160748486C133FB8FCA3313E7DBD39>76 D<B500C093383FFFF0A300016D93387F
F800D8007F18E0D977F016EFA3D973F8ED01CFA2D971FCED038FA3D970FEED070FA26E15
0E80A26E6C141CA36E6C1438A26E6C1470A36E6C14E0A26E6CEB01C0A36E6CEB0380A36E
6CEB0700A2037F130EA36F6C5AA26F6C5AA36F6C5AA25FED07F0A2923803F9C0A36FB45A
A26F90C7FCA213F8486C147ED807FFEF3FF8B500F8013C011FB512F0A34C3E7DBD53>I<
ED7FE0913807FFFE91391FC03F8091397E0007E04948EB03F8D907F0EB00FE4948147F49
486E7E49486E7E49C86C7E01FE6F7E00018349150300038348486F7EA248486F7EA2001F
188049167F003F18C0A3007F18E049163FA300FF18F0AC007F18E06D167FA4003F18C0A2
6C6CEEFF80A36C6C4B1300A26C6C4B5A00035F6D150700015F6C6C4B5A6D5E6D6C4A5A6D
6C4A5A6D6C4AC7FC6D6C14FED901FCEB03F8D9007FEB0FE091391FC03F80912607FFFEC8
FC9138007FE03C427BBF47>79 D<B712F8EEFF8017E000019039C0003FF86C6C48EB07FC
EE01FE707EEF7F80EF3FC018E0A2EF1FF0A218F8A818F0A2EF3FE0A218C0EF7F80EFFF00
4C5AEE07FCEE3FF091B612C04CC7FC0280C9FCB3A73801FFE0B612C0A3353E7DBD3E>I<
B712C016FCEEFF800001D9C00013E06C6C48EB1FF0EE07FCEE01FE707E84717EA2717EA2
84A760177F606017FF95C7FCEE01FCEE07F8EE1FE0EEFF8091B500FCC8FC16F091388001
FCED003FEE1FC0707E707E83160383160183A383A484A4F0C004190EA28218E0057F131E
2601FFE0161CB600C0EB3FF094381FF83805071370CA3801FFE09438003F803F407DBD43
>82 D<D907FC130C90391FFF801C017FEBF03C3901FC03F83A03F0007E7CD807C0EB1FFC
4848130F001F140748C71203003E1401007E1400A2007C157C12FCA2163CA36C151CA27E
A26C6C14007F7FEA3FF8EBFF806C13F86CEBFF806C14F06C14FC6C14FF6C15C0013F14E0
010714F0EB007F020713F89138007FFC150FED07FE15031501ED00FFA200E0157FA3163F
A27EA3163E7E167E6C157C6C15FC6C15F86D13016DEB03F06DEB07E0D8F9FCEB0FC03AF0
7F803F8090391FFFFE00D8E00713F839C0007FC028427BBF33>I<003FB91280A3903AF0
007FE001018090393FC0003F48C7ED1FC0007E1707127C00781703A300701701A548EF00
E0A5C81600B3B14B7E4B7E0107B612FEA33B3D7DBC42>I<B691380FFFFEA3000301E002
0113E06C01809138007F806CEF3F00017F163E181C6E153C013F1638A26E1578011F1670
A26D6C5DA26E140101075EA26E140301035EA26D6C4AC7FCA2806D150EA26F131E027F14
1CA26F133C023F1438A26E6C5BA26F13F0020F5CA2EDF80102075CA26E6C485AA2EDFE07
020191C8FCA26F5A6E130EA2ED7F9CA216DCED3FF8A36F5AA36F5AA26F5AA36F5A3F407E
BD44>86 D<B500FE017FB5D88007B5FCA3000301C0010101E0C713F86C90C849EC3FE071
48EC0F807E7215006E143F017F190E84A26D6C60A24D7E6D6C60A2EFE7F86D6C60A29338
01C3FC6E18F001076104037F6E0281140101036104077F17006D6C4D5AA2040EEB7F806D
6C4DC7FCA24CEB3FC0DA7F80160EA24CEB1FE003C0161E023F171C047814F0DBE070010F
133C021F173804F014F84C1307DA0FF05EA2DBF1C0EB03FCDA07F95EA2DBFB80EB01FEDA
03FF6F5AA293C8FCA26E5FA24B157F020094C8FCA24B81037C153EA20378151E0338151C
58407EBD5D>I<003FB712F8A391C7EA1FF013F801E0EC3FE00180EC7FC090C8FC003EED
FF80A2003C4A1300007C4A5A12784B5A4B5AA200704A5AA24B5A4B5AA2C8485A4A90C7FC
A24A5A4A5AA24A5AA24A5A4A5AA24A5A4A5AA24990C8FCA2495A4948141CA2495A495AA2
495A495A173C495AA24890C8FC485A1778485A484815F8A24848140116034848140F4848
143FED01FFB8FCA32E3E7BBD38>90 D<486C13C00003130101001380481303000EEB0700
48130E0018130C0038131C003013180070133800601330A300E01370481360A400CFEB67
8039FFC07FE001E013F0A3007F133FA2003F131F01C013E0390F0007801C1C73BE2D>92
D<EB0FF8EBFFFE3903F01F8039078007E0000F6D7E9038E001F8D81FF07F6E7EA3157F6C
5AEA0380C8FCA4EC1FFF0103B5FC90381FF87FEB7F803801FC00EA07F8EA0FE0485A485A
A248C7FCEE038012FEA315FFA3007F5BEC03BF3B3F80071F8700261FC00E13CF3A07F03C
0FFE3A01FFF807FC3A003FC001F0292A7DA82D>97 D<EA01FC12FFA3120712031201B1EC
03FC91381FFF8091387C07E09039FDE001F09039FFC000FC4A137E91C77E49158049141F
17C0EE0FE0A217F0A2160717F8AA17F0A2160FA217E0161F17C06D1580EE3F006D5C6E13
FE9039F3C001F89039F1E003F09039E0780FC09026C03FFFC7FCC7EA07F82D407EBE33>
I<49B4FC010F13E090383F00F8017C131E4848131F4848137F0007ECFF80485A5B121FA2
4848EB7F00151C007F91C7FCA290C9FC5AAB6C7EA3003FEC01C07F001F140316806C6C13
076C6C14000003140E6C6C131E6C6C137890383F01F090380FFFC0D901FEC7FC222A7DA8
28>I<ED01FC15FFA3150715031501B114FF010713E190381F80F990387E003D49131FD8
03F81307485A49130348481301121F123F5B127FA290C7FCA25AAA7E7FA2123FA26C7E00
0F14037F000714076C6C497E6C6C497ED8007C017913F890383F01F190380FFFC1903A01
FE01FC002D407DBE33>I<EB01FE90380FFFC090383F03F09038FC01F848486C7E484813
7E48487F000F158049131F001F15C04848130FA2127F16E090C7FCA25AA290B6FCA290C9
FCA67EA27F123F16E06C7E1501000F15C06C6C13036DEB07806C6C1400C66C131E017E5B
90381F80F8903807FFE0010090C7FC232A7EA828>I<EC1FC0EC7FF8903801F83C903807
E07E90380FC0FFEB1FC1EB3F811401137FEC00FE01FE137C1500AEB6FCA3C648C7FCB3AE
487E007F13FFA320407EBF1C>I<167C903903F801FF903A1FFF078F8090397E0FDE1F90
38F803F83803F001A23B07E000FC0600000F6EC7FC49137E001F147FA8000F147E6D13FE
00075C6C6C485AA23901F803E03903FE0FC026071FFFC8FCEB03F80006CAFC120EA3120F
A27F7F6CB512E015FE6C6E7E6C15E06C810003813A0FC0001FFC48C7EA01FE003E140048
157E825A82A46C5D007C153E007E157E6C5D6C6C495A6C6C495AD803F0EB0FC0D800FE01
7FC7FC90383FFFFC010313C0293D7EA82D>I<EA01FC12FFA3120712031201B1EC01FE91
3807FFC091381E07E091387803F09138E001F8D9FDC07F148001FF6D7E91C7FCA25BA25B
B3A6486C497EB5D8F87F13FCA32E3F7DBE33>I<EA01E0EA07F8A2487EA46C5AA2EA01E0
C8FCACEA01FC127FA3120712031201B3AC487EB512F0A3143E7DBD1A>I<1478EB01FEA2
EB03FFA4EB01FEA2EB00781400AC147FEB7FFFA313017F147FB3B3A5123E127F38FF807E
14FEA214FCEB81F8EA7F01387C03F0381E07C0380FFF803801FC00185185BD1C>I<EA01
FC12FFA3120712031201B292B51280A392383FFC0016E0168093C7FC153C5D5D4A5AEC07
C04A5A4AC8FC143E147F4A7E13FD9038FFDFC0EC9FE0140F496C7E01FC7F496C7E140181
6E7E81826F7E151F826F7EA282486C14FEB539F07FFFE0A32B3F7EBE30>I<EA01FC12FF
A3120712031201B3B3B1487EB512F8A3153F7DBE1A>I<2701F801FE14FF00FF902707FF
C00313E0913B1E07E00F03F0913B7803F03C01F80007903BE001F87000FC2603F9C06D48
7F000101805C01FBD900FF147F91C75B13FF4992C7FCA2495CB3A6486C496CECFF80B5D8
F87FD9FC3F13FEA347287DA74C>I<3901F801FE00FF903807FFC091381E07E091387803
F000079038E001F82603F9C07F0001138001FB6D7E91C7FC13FF5BA25BB3A6486C497EB5
D8F87F13FCA32E287DA733>I<14FF010713E090381F81F890387E007E01F8131F4848EB
0F804848EB07C04848EB03E0000F15F04848EB01F8A2003F15FCA248C812FEA44815FFA9
6C15FEA36C6CEB01FCA3001F15F86C6CEB03F0A26C6CEB07E06C6CEB0FC06C6CEB1F80D8
007EEB7E0090383F81FC90380FFFF0010090C7FC282A7EA82D>I<3901FC03FC00FF9038
1FFF8091387C0FE09039FDE003F03A07FFC001FC6C496C7E6C90C7127F49EC3F805BEE1F
C017E0A2EE0FF0A3EE07F8AAEE0FF0A4EE1FE0A2EE3FC06D1580EE7F007F6E13FE9138C0
01F89039FDE007F09039FC780FC0DA3FFFC7FCEC07F891C9FCAD487EB512F8A32D3A7EA7
33>I<3901F807E000FFEB1FF8EC787CECE1FE3807F9C100031381EA01FB1401EC00FC01
FF1330491300A35BB3A5487EB512FEA31F287EA724>114 D<90383FC0603901FFF8E038
07C03F381F000F003E1307003C1303127C0078130112F81400A27E7E7E6D1300EA7FF8EB
FFC06C13F86C13FE6C7F6C1480000114C0D8003F13E0010313F0EB001FEC0FF800E01303
A214017E1400A27E15F07E14016C14E06CEB03C0903880078039F3E01F0038E0FFFC38C0
1FE01D2A7DA824>I<131CA6133CA4137CA213FCA2120112031207001FB512C0B6FCA2D8
01FCC7FCB3A215E0A912009038FE01C0A2EB7F03013F138090381F8700EB07FEEB01F81B
397EB723>I<D801FC14FE00FF147FA3000714030003140100011400B3A51501A3150312
0015076DEB06FF017E010E13806D4913FC90381FC078903807FFE00100903880FE002E29
7DA733>I<B539E00FFFE0A32707FE000313006C48EB00FC5E00015D7F00005DA26D1301
6D5CA26D6C485AA2ECC007011F91C7FCA290380FE00EA2ECF01E0107131CA26D6C5AA2EC
FC7801011370A2ECFEF001005BA2EC7FC0A36E5AA26EC8FCA3140E2B287EA630>I<B53B
C3FFFE03FFF8A3290FFE003FE00013C06C486D48EB3F806C4817006D010F141E00016F13
1C15076D163C00004A6C1338A2017F5E4B7E151DD93F805DED3DFC1538D91FC04A5AED78
FE9238707E03D90FE0017F5BEDE03F02F0140701070387C7FC9138F1C01F02F9148F0103
15CE9138FB800F02FF14DE6D15FCED00076D5DA24A1303027E5CA2027C1301023C5C0238
13003D287EA642>I<B539E00FFFE0A32707FE000313006C48EB01FC6F5A00015D7F0000
5DA2017F495AA2EC8003013F5CA26D6C48C7FCA26E5A010F130EA26D6C5AA2ECF83C0103
1338A26D6C5AA2ECFEF001005BA2EC7FC0A36E5AA36EC8FCA2140EA2141E141C143C1438
A2147800181370127EB45BA2495AA248485AD87E07C9FCEA780EEA3C3CEA1FF8EA07E02B
3A7EA630>121 D<001FB61280A2EBE0000180140049485A001E495A121C4A5A003C495A
141F00385C4A5A147F5D4AC7FCC6485AA2495A495A130F5C495A90393FC00380A2EB7F80
EBFF005A5B484813071207491400485A48485BA248485B4848137F00FF495A90B6FCA221
277EA628>I<001C130E007FEB3F8039FF807FC0A5397F003F80001CEB0E001A0977BD2D>
127 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmr12 12 26
/Fi 26 119 df<140C141C1438147014E0EB01C01303EB0780EB0F00A2131E5BA25B13F8
5B12015B1203A2485AA3485AA348C7FCA35AA2123EA2127EA4127CA312FCB3A2127CA312
7EA4123EA2123FA27EA36C7EA36C7EA36C7EA212017F12007F13787FA27F7FA2EB0780EB
03C01301EB00E014701438141C140C166476CA26>40 D<12C07E12707E7E7E120F6C7E6C
7EA26C7E6C7EA21378137C133C133E131E131FA2EB0F80A3EB07C0A3EB03E0A314F0A213
01A214F8A41300A314FCB3A214F8A31301A414F0A21303A214E0A3EB07C0A3EB0F80A3EB
1F00A2131E133E133C137C13785BA2485A485AA2485A48C7FC120E5A5A5A5A5A16647BCA
26>I<1618163C167CA2167816F8A216F01501A216E01503A216C01507A21680150FA2ED
1F00A2151E153EA2153C157CA2157815F8A25D1401A24A5AA25D1407A25D140FA292C7FC
5CA2141E143EA2143C147CA25CA25C1301A25C1303A25C1307A25C130FA291C8FC5BA213
3EA2133C137CA2137813F8A25B1201A25B1203A2485AA25B120FA290C9FC5AA2121E123E
A2123C127CA2127812F8A25A126026647BCA31>47 D<B912F8A3000101C0C7127F6C6C48
EC07FC17011700187C183C181CA284A31806A4180704067FA395C7FCA4160EA2161E163E
16FE91B5FCA3EC8000163E161E160EA21606A319C0A3F0018093C7FCA41803A21900A260
A260A2181EA2183E187EEF01FE170748486C147FB95AA33A447CC342>69
D<B912F0A3000101C0C7127F6C6C48EC0FF817031701170018781838A2181CA3180CA418
0E1806160CA21800A5161CA2163C167CED01FC91B5FCA3EC8001ED007C163C161CA2160C
A793C8FCB08048487EB612F8A337447CC340>I<B612F0A3C6EBF0006D5A6D5AB3B3B3A4
497E497EB612F0A31C447DC323>73 D<003FB912F8A3903BF0001FF8001F01806D481303
003EC7150048187C0078183CA20070181CA30060180CA5481806A5C81600B3B3A54B7EED
7FFE49B77EA33F447DC346>84 D<B600C0010FB5FCA3000101E0C813F026007F80ED1F80
F00F00A21806B3B3A7180E6D6C150CA2181C131F6E1518010F163818306D6C1570606D6C
14016D6C5D6D6CEC0780027F4AC7FC6E6C131EDA1FE0137C913907FC03F00201B55A6E6C
1380DB07FCC8FC40467CC349>I<B60107B500F890380FFFFEA3000301E0D9001F90C813
F06C0180DA0FFCED3FC091C86C48ED1F006C871C0E6D6C6E7E1C0CA26D6C6F5DA36EDA06
FF1538011F1A30A26E020E6D1470010FDB0C7F1560A26E021C7F0107DB183F5DA2856D6C
DA301F4A5AA36D6C4A6C6C49C7FCA36D6C4A6C6C1306A3DB80016E130E027FDA8003140C
A2DBC00380023FDA00015CA203E081021F01066D5CA36E6C486E6C5AA36E6C486E6C5AA3
6F48EC1FE1020360A2DBFE7015F302010160020F90C8FCA2DBFFE015FB6E49EC07FEA36F
486E5AA36FC86C5AA3031E6F5AA4030C16605F467EC364>87 D<EB07FC90383FFF809038
F80FE03903C003F048C66C7E000E6D7ED80FC0137E486C137F6D6D7EA36F7EA26C5AEA03
80C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03FC485A485A485A485A127F5B17
6048C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F13013A1FE00783F13B07F81E03
FF802701FFFC0113003A001FE0007C2B2E7CAC31>97 D<EC7F80903803FFF090380FC07C
90383F000F01FCEB03804848EB01C00003140F4848EB1FE049133F120F485AA2485AED1F
C0007FEC070092C7FCA290C9FC5AAB7E7FA2123F16307F001F15706C6C146016E06C6C14
C06C6C13010001EC03806C6CEB0700013F131E90381FC078903807FFF001001380242E7D
AC2B>99 D<167FED3FFFA315018182B3EC7F80903803FFF090380FC07C90383F000E017E
1307496D5AD803F87F48487F5B000F81485AA2485AA2127FA290C8FC5AAB7E7FA2123FA2
6C7EA2000F5D7F6C6C5B00035C6C6C9038077F806C6C010E13C0013F011C13FE90380FC0
F8903803FFE09026007F0013002F467DC436>I<EB01FE903807FFC090381F03F090387E
00FC49137E48487F485A4848EB1F80000F15C049130F121F484814E01507A2007F15F090
C7FCA25AA390B6FCA290C9FCA67EA27FA2123F16306C7E1670000F15606D14E06C6C14C0
000314016C6CEB03806C6CEB0700013E131E90381F80F8903803FFE0010090C7FC242E7D
AC2B>I<EC0FE0EC7FF8903801F81E903803F03F90390FE07F8090381FC0FF5C133F495A
A2ED7F0001FE131C92C7FCAFB67EA3C648C8FCB3B2486C7E007F13FFA321467EC51E>I<
EA01FC12FFA3120712031201B3EC01FE913807FFC091381E07F091383801F802707FECE0
00D9FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F457DC436
>104 D<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCADEA01FC12FFA3120712031201B3
B0487EB512F8A315437DC21C>I<EA01FC12FFA3120712031201B3A292381FFFE0A36F13
00ED07F816E05E5E030EC7FC5D5D5D5D4A5A4A5A4AC8FC5CEC3F804A7E14FF9038FDCFE0
9038FF8FF01407496C7E01FC7F14016E7E81816F7E82151F6F7E821507826F7E8282486C
491380B5D8F81F13F8A32D457DC433>107 D<EA01FC12FFA3120712031201B3B3B3A548
7EB512F8A315457DC41C>I<D801FC01FFEC1FE000FF010701E0EBFFFC913B0F03F801E0
7F913C3C01FC07803F800007903C7000FE0E001FC0000349D97E1C130F2601FDC0D97F38
804A143001FFDA3FF06D7E91C75BA2495DA3495DB3A8486C4A6C497EB5D8F81FB50003B5
12E0A34B2C7DAB52>I<3901FC01FE00FF903807FFC091381E07F091383801F800070170
7F0003EBE0002601FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FE
A32F2C7DAB36>I<EC7F80903803FFF090380FC0FC90383E001F496D7E496D7E48486D7E
48486D7E48486D7E000F81A24848147E003F157FA290C87E481680A44816C0AA6C1680A2
6D147F003F1600A2001F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C495A
013E49C7FC90381FC0FE903807FFF89038007F802A2E7DAC31>I<3903F803F000FFEB1F
FCEC3C3EEC707F0007EBE0FF3803F9C000015B13FBEC007E153C01FF13005BA45BB3A748
B4FCB512FEA3202C7DAB26>114 D<90383FE0183901FFFC383907E01F78390F0003F800
1E1301481300007C1478127800F81438A21518A27EA27E6C6C13006C7E13FC383FFFE06C
13FC6C13FF6C14C06C14E0C614F0011F13F81300EC0FFC140300C0EB01FE1400157E7E15
3EA27EA36C143C6C147C15786C14F86CEB01F039F38003E039F1F00F8039E07FFE0038C0
0FF01F2E7DAC26>I<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FC
A2C648C7FCB3A4150CAA017E131C017F1318A26D133890381F8030ECC070903807E0E090
3801FFC09038007F001E3E7EBC26>I<D801FC147F00FFEC3FFFA3000714010003800001
81B3A85EA35DA212006D5B017E9038077F80017F010E13C06D011C13FE90380FC0789038
03FFF09026007F8013002F2D7DAB36>I<B539F001FFFCA3000790C7EA7FE06C48EC1F80
00011600160E1200160C017F5CA280013F5CA26E1370011F146080010F5CA2ECF0010107
5CA26D6C48C7FCA26E5A01011306A26D6C5AA214FF6E5AA215B8EC3FB015F06E5AA36E5A
A26E5AA36EC8FC2E2C7EAA33>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmr17 17.28 15
/Fj 15 124 df<120FEA3FC0EA7FE012FF13F0A313F8A2127F123FEA0F381200A71378A2
1370A313F013E0A2120113C012031380120713005A121EA25A5A127012300D28748B24>
44 D<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C0C748B24>46
D<4AB4FC021F13F0027F13FC903901FF01FF903A03F8003F80D90FE0EB0FE049486D7E49
486D7E49C76C7E017E140049157E0001167F49810003178049151F000717C049150F000F
17E0A3001F17F0491507A2003F17F8A54848ED03FCA700FF17FEB3A8007F17FCA56D1507
A3003F17F8A4001F17F06D150FA2000F17E0A36C6CED1FC0A2000317806D153F00011700
6D5D6C6C15FE017E5D017F14016D6C495A6D6C495A6D6C495AD903F8EB3F806DB448B4C7
FC9039007FFFFC021F13F0020190C8FC37607BDD42>48 D<EC01C014031407140F143F14
7FEB03FF130F90B5FCB6FCEBFC7F13F01300C7FCB3B3B3B3A24A7EA2010713FCB812E0A4
2B5E74DD42>I<EC0FFE91387FFFE00103B512F8010F14FE903A1FE00FFF8090263E0001
13E001FC6D6C7ED801F06E7E4848EC0FFC496E7E48486E7E48C81480000E81001E6F13C0
121C003CEE7FE012380078EE3FF01270A3B46CED1FF813E0A27FA66C5A6C5A0006C913F0
CA123FA318E0177FA2EFFFC0A218805E18004C5A16075F4C5A5F161F4C5A4C5A5F4CC7FC
4B5A4B5A5E4B5A4B5A4B5A4B5A4BC8FC157E5D4A5A4A5A4A5A4A5A4A5A4AC9FC143E4A15
385C495A495A49481570495A49C9FC131E5B4916F05B484816E0484815014848150348B8
FCA25A5A5AB912C0A4355E7ADD42>I<913803FF80023F13F849B512FE01076E7E90261F
FC0013E0D93FC0EB3FF8017EC7EA0FFC01F86E7E48486E7E48486E13804848804916C048
C9EA7FE013E013F8486CED3FF07FA66C5A6C5AEA01E0CAEA7FE0A318C017FF18805E1800
5E5F4C5A4C5A4C5A4C5AEE7F804CC7FCED03FC913801FFF091B512C05E16F891380001FE
9238003F80EE1FE0EE07F8707E707E83701380EF7FC018E0173F18F018F8171FA218FCA2
170F18FEA21207EA1FC0EA7FF0A2487EA5EF1FFC5B5B6C4816F80078C9123F18F07EEF7F
E07E001FEEFFC06C6C4A13806C7E6C6C4A1300D801F84A5AD800FEEC1FF8D93FC0495A90
3A1FFC01FFE00107B6128001014AC7FCD9003F13F00203138037607BDD42>I<1778A217
F81601A216031607A2160F161FA2163FA2167F16FF16EF1501ED03CF168F1507160F150E
151E151C153C1578157015F015E0EC01C0140315801407EC0F00140E141E141C5C147814
7014F0495A5C13035C49C7FC5B130E131E5B133813785B5B12015B1203485A90C8FC5A12
1E121C123C12385A12F0BA12E0A4C9D80FF8C7FCB34C7EEE7FFF4AB712C0A43B5F7DDE42
>I<120E121E121F7F13F890B912C0A4481880A2190060A2003ECA123C003C1738003817
7800785F60007016014D5A6017074DC7FC48161E171C173C5FCA127017F04C5A5F16034C
5A94C8FC5E161E161C163C5EA25EA24B5A15035E15075E150FA24BC9FCA25D153E157EA3
15FE5D1401A314035DA21407A3140FA4141F5DA4143FA7147FAC6E5A6E5A6E5A3A637AE0
42>55 D<EC3FF0903803FFFE010F6D7E90393FC03FE090397E0007F801F86D7ED801E06D
7E48486D7E48486E7E48C86C7E7F01F06E7E487E6D6E7EA3707EA36C5AEA03E0C9FCA616
7FED7FFF020FB5FC91387FF807903801FF80903807FC00EB1FF0EB7FC0495AD803FEC7FC
485A120F5B485A485AA2484817E0A312FF5BA2160FA3161F6D141B007F153B16736D9139
71FC01C06C6C14E1001FEC01C1D80FFC903A0780FE03806C6C903A0F00FF07002701FF80
7E6DB4FC27007FFFF86D5A011F01E0EB1FF8010190C7EA07E03B417ABF42>97
D<133C13FF487F487FA66C5B6C90C7FC133C90C8FCB3A2EB03C0EA07FF127FA41201EA00
7FA2133FB3B3AC497E497EB612E0A41B5F7DDE23>105 D<15F0EC03FCEC07FEEC0FFFA6
EC07FEEC03FCEC00F01500B3A2151FEC3FFF0107B5FCA4EB000F14038080B3B3B3AE001F
EB01FEEA7FC0EAFFE015FCA2EC03F8A2EC07F0D87FC013E09038800FC0393E001F80391F
C07F00380FFFFE000313F838007FC0207C86DE28>I<D903C0EB7FE0D807FF903803FFFC
B5010F13FFDB3F0013C00378EB1FE04B6D7E0001D9C1C06D7E27007FC3808002C7C71203
D93FCE81170114DC14D802F86E7E5CA35CA35CB3B3496C4A7F496C4A7FB6D8F003B612C0
A4423F7DBE49>110 D<9039078003F8D807FFEB0FFFB5013F13C092387C0FE0913881F0
1F9238E03FF00001EB838039007F8700148FEB3F8E029CEB1FE0EE0FC00298EB030002B8
90C7FCA214B014F0A25CA55CB3B0497EEBFFF8B612FCA42C3F7CBE33>114
D<D903C0150FD807FFED1FFFB50203B5FCA40001ED0007D8007F1501A2013F81B3B25FA3
5FA35F011F15066E140E5F130F6E4A7F01075D6D6C494813E0D901FE4948EBFFC0903A00
FFC01F8091393FFFFE00020F13F8020001C0EC800042407DBE49>117
D<BB12E0A3430381A742>123 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmbx12 17.28 20
/Fk 20 117 df<167C16FC1501ED07F0150FED1FE0ED3FC0ED7F80EDFF004A5A14034A5A
4A5A5D141F4A5A147F4A5A5D5B4990C7FCA2495A130F5C131FA2495AA2495AA213FF5C5A
A25C5AA25A5CA25AA291C8FCA25AA35B123FA5127F5BA612FFB3A4127FA67F123FA5121F
7FA37EA280A27EA2807EA27E80A27E80137FA26D7EA26D7EA2130F8013076D7EA26D7F7F
816E7E143F6E7E140F816E7E6E7E14016E7EED7F80ED3FC0ED1FE0ED0FF01507ED01FC15
00167C269071EB3F>40 D<127812FC127E6C7E7F6C7E6C7E6C7E6C7E6C7E7F6C7F6D7E13
3F806D7E806D7E1307806D7EA26D7F817F81A26E7EA26E7EA281141F81A2140F81A21680
80A216C0A280A216E0A38016F0A516F880A616FCB3A416F8A65C16F0A516E05CA316C0A2
5CA21680A25C1600A25D141FA25D143F5DA24A5AA24A5AA25D5B5D4990C7FCA2495A5C13
0F495A5C495A5C137F495A4890C8FC5B485A485A485A485A485A5B007EC9FC5A12782690
77EB3F>I<ED0FFF4AB512F8020F14FF023F15C091B712F049D9FC037F0107D9F00013FE
4901C0EB3FFF4990C7000F7F49486E7F017F8349486E7F4A80488448496E7FA248844A15
7F4884A3481980A34819C04A81A34819E0A7B518F0B3A86C19E0A76C19C0A26E5DA26C19
80A36C1900A36C6D4B5AA26C60A26C6D4A5B6C606E5C6D6C4A5B6D6C4A5B6D6D495B6D6D
4990C7FC6D01F0EBFFFE6DD9FC035B010090B612F0023F15C0020F92C8FC020114F8DA00
1F138044607ADD51>48 D<913801FFF8021FEBFFC091B612F8010315FF010F16C0013F82
90267FFC0114F89027FFE0003F7F4890C7000F7F48486E7FD807F86E148048486E14C048
486E14E048486F13F001FC17F8486C816D17FC6E80B56C16FE8380A219FFA283A36C5BA2
6C5B6C90C8FCD807FC5DEA01F0CA14FEA34D13FCA219F85F19F04D13E0A294B512C01980
4C14004C5B604C5B4C5B604C13804C90C7FC4C5A4C5A4B13F05F4B13804B90C8FC4B5AED
1FF84B5A4B5A4B48143F4A5B4A48C8FC4A5A4A48157E4A5A4A5AEC7F8092C9FC02FE16FE
495A495A4948ED01FCD90FC0150749B8FC5B5B90B9FC5A4818F85A5A5A5A5ABAFCA219F0
A4405E78DD51>50 D<ED3FFF0207B512F0023F14FC91B7FC010316C049D9F8077F49D9C0
0113F8013F496C6C7E4948C76C7E49486E7E4884484980717F4849825A48707F855A5C85
5A8583A2B583A41A80A71AC0A35F7EA46C5EA27E6E5C7EA26C5E6C7F6C5E6C6D147D6D6C
14FD6D6CEB01F96D90388003F16D9038F01FE16D90B500C11480010115816D6C1401021F
13FC020113E091C8FC1A00A25FA261A3D9FF805E487F486D4A5B487FA2486D5E5F61615F
614A4A90C7FC4D5A6C5B4A4A5A4A01035BD803FCC7485B6C6C021F13C0D9FFC0017F5B6C
D9F803B5C8FC6DB612FC6D5D010F15E0010392C9FC010014F8020F1380426079DD51>57
D<B700C0083FB612F070627097B7FCA37061D800010DF8C7FC70F103EFA202FD6DF107CF
A202FC6DF10F8FA36F6DF01F0FA26F6D183EA26F6D187CA26F6D18F8A36F6DEF01F0A26F
6DEF03E0A26F6DEF07C0A26F6DEF0F80A3706DEE1F00A2706D163EA2706D5EA2706D5EA3
706D4B5AA2706D4B5AA2706D4B5AA2706D4B5AA3716D4AC7FCA2716D143EA2716D5CA271
6D5CA3716D495AA2716D495AA2716D495AA2716D495AA3726D48C8FCA272EBC03EA2726D
5AA2726D5AA372EBF9F0A272EBFFE0A2725CA2725CA37390C9FCA2735AA2735A90381FFF
C0B700F86E480207B812F0A3735AA2735A8C627AE199>77 D<BB7E1AFCF2FFC01BF81BFE
757ED800010280C7001F80070114F0736C7F081F7F747F747F7414807414C0A27414E0A2
1DF0A27513F8A41DFCA91DF8A498B512F0A21DE0A25014C01D8062501400505B505B087F
5B4FB512E0071F5C93B9C7FC1BFC1BF01B8008F0C8FC04C0CCFCB3B3A2B97EA65E627AE1
6E>80 D<001FBEFCA64849C79126E0000F148002E0180091C8171F498601F81A03498649
86A2491B7FA2491B3F007F1DC090C9181FA4007E1C0FA600FE1DE0481C07A5CA95C7FCB3
B3B3A3021FBAFCA663617AE070>84 D<913803FFFE027FEBFFF00103B612FE010F6F7E49
16E090273FFE001F7FD97FE001077FD9FFF801017F486D6D7F717E486D6E7F85717FA271
7FA36C496E7FA26C5B6D5AEB1FC090C9FCA74BB6FC157F0207B7FC147F49B61207010F14
C0013FEBFE004913F048B512C04891C7FC485B4813F85A5C485B5A5CA2B55AA45FA25F80
6C5E806C047D7F6EEB01F96C6DD903F1EBFF806C01FED90FE114FF6C9027FFC07FC01580
000191B5487E6C6C4B7E011F02FC130F010302F001011400D9001F90CBFC49437CC14E>
97 D<903807FF80B6FCA6C6FC7F7FB3A8EFFFF8040FEBFF80047F14F00381B612FC0387
15FF038F010014C0DBBFF0011F7FDBFFC001077F93C76C7F4B02007F03F8824B6F7E4B6F
13804B17C0851BE0A27313F0A21BF8A37313FCA41BFEAE1BFCA44F13F8A31BF0A24F13E0
A24F13C06F17804F1300816F4B5A6F4A5B4AB402075B4A6C6C495B9126F83FE0013F13C0
9127F00FFC03B55A4A6CB648C7FCDAC00115F84A6C15E091C7001F91C8FC90C8000313E0
4F657BE35A>I<92380FFFF04AB67E020F15F0023F15FC91B77E01039039FE001FFF4901
F8010113804901E0010713C04901804913E0017F90C7FC49484A13F0A2485B485B5A5C5A
7113E0485B7113C048701380943800FE0095C7FC485BA4B5FCAE7EA280A27EA2806C18FC
A26C6D150119F87E6C6D15036EED07F06C18E06C6D150F6D6DEC1FC06D01E0EC7F806D6D
ECFF00010701FCEB03FE6D9039FFC03FFC010091B512F0023F5D020F1580020102FCC7FC
DA000F13C03E437BC148>I<92380FFFC04AB512FC020FECFF80023F15E091B712F80103
D9FE037F499039F0007FFF011F01C0011F7F49496D7F4990C76C7F49486E7F4849804884
4A804884485B727E5A5C48717EA35A5C721380A2B5FCA391B9FCA41A0002C0CBFCA67EA3
80A27EA27E6E160FF11F806C183F6C7FF17F006C7F6C6D16FE6C17016D6C4B5A6D6D4A5A
6D01E04A5A6D6DEC3FE0010301FC49B45A6D9026FFC01F90C7FC6D6C90B55A021F15F802
0715E0020092C8FC030713F041437CC14A>101 D<F107F8DB7FFEEC3FFE020FB5D8F001
B5FC027FDAFE03148049B7128F49DCDFFD13C0010FD9F00FEBFFC149D9800114014990C7
EBFC0349486E6C7E4948EC3FFF48496E018113800780130048F0C03E97C7FC48496E7FA3
4884A96C60A36C6D4A5BA26C60A26C6D4A90C8FC6D6C4A5A6D6C4A5A6D6D485BDBF00F5B
4990B612C060D97C7F4AC9FCD9FC0F14F09126007FFECAFC92CCFC1201A47FA27F8014F0
91B77E18FE6CEFFFC019F06D17FC19FF6D846D846D846D84013F8490BAFC0003854801E0
C712014890C9000F7F484816014848EE007F4848717E8512FF5B85A56D5F007F616D173F
003F616D177F6C6C4D5A6C01C003035B6C6D4B5B6C01F8031F5BC601FF92B5C7FC6D01F8
011F5B011F90B712F8010717E0010094C8FC020F15F0DA003F01FCC9FC4A607CC151>
103 D<903807FF80B6FCA6C6FC7F7FB3B3B3B3ADB712E0A623647BE32C>108
D<902607FF80D91FFFEEFFF8B691B500F00207EBFF80040702FC023F14E0041F02FF91B6
12F84C6F488193267FE07F6D4801037F922781FE001F9027E00FF0007FC6DA83F86D9026
F01FC06D7F6DD987F06D4A487F6DD98FC0DBF87EC7804C6D027C80039FC76E488203BEEE
FDF003BC6E4A8003FC04FF834B5FA24B5FA24B94C8FCA44B5EB3B2B7D8F007B7D8803FB6
12FCA67E417BC087>I<902607FF80EB1FFFB691B512F0040714FC041F14FF4C8193267F
E07F7F922781FE001F7FC6DA83F86D7F6DD987F07F6DD98FC0814C7F039FC78015BE03BC
8003FC825DA25DA25DA45DB3B2B7D8F007B71280A651417BC05A>I<923807FFE092B6FC
020715E0021F15F8027F15FE494848C66C6C7E010701F0010F13E04901C001037F49496D
7F4990C87F49486F7E49486F7E48496F13804819C04A814819E048496F13F0A24819F8A3
48496F13FCA34819FEA4B518FFAD6C19FEA46C6D4B13FCA36C19F8A26C6D4B13F0A26C19
E06C6D4B13C0A26C6D4B13806C6D4B13006D6C4B5A6D6D495B6D6D495B010701F0010F13
E06D01FE017F5B010090B7C7FC023F15FC020715E0020092C8FC030713E048437CC151>
I<D90FFFEB0FFCB690383FFF8093B512E04B14F04B14F8923907FC7FFC92390FE0FFFEC6
EC1F806DD93F0113FF6D133E157E157C15F8A215F07013FEA24BEB7FFCEF3FF8EF0FE04B
90C7FCA55DB3B0B712F8A638417BC042>114 D<913A3FFF8007800107B5EAF81F011FEC
FE7F017F91B5FC48B8FC48EBE0014890C7121FD80FFC1407D81FF0801600485A007F167F
49153FA212FF171FA27F7F7F6D92C7FC13FF14E014FF6C14F8EDFFC06C15FC16FF6C16C0
6C16F06C826C826C826C82013F1680010F16C01303D9007F15E0020315F0EC001F150004
1F13F81607007C150100FC81177F6C163FA2171F7EA26D16F0A27F173F6D16E06D157F6D
16C001FEEDFF806D0203130002C0EB0FFE02FCEB7FFC01DFB65A010F5DD8FE0315C026F8
007F49C7FC48010F13E035437BC140>I<EC07E0A6140FA5141FA3143FA2147FA214FF5B
A25B5B5B5B137F48B5FC000F91B512FEB8FCA5D8001F01E0C8FCB3AFEF0FC0AC171F6D6D
1480A2173F6D16006F5B6D6D137E6D6D5B6DEBFF836EEBFFF86E5C020F14C002035C9126
003FFCC7FC325C7DDA3F>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 636 763 a Fk(T)-13 b(en)l(tamen)52 b(Pro)t(cesalgebra)h
(\(2M920\))996 946 y Fj(24)43 b(jan)l(uari)h(2003,)e(14.00)g({17.00)
1087 1276 y Fi(F)-8 b(aculteit)30 b(Wiskunde)k(en)f(Informatica)924
1393 y(T)-8 b(ec)m(hnisc)m(he)35 b(Univ)m(ersiteit)d(Eindho)m(v)m(en)i
(\(TU/e\))270 1813 y Fh(Dit)g(ten)m(tamen)g(is)f(een)h(op)s(en)f(b)s(o)
s(ek)g(ten)m(tamen.)52 b(Dat)35 b(wil)d(zeggen)j(dat)f(het)g
(uitgedeelde)270 1926 y(materiaal)e(\\Algebra)g(of)h(Comm)m(unicating)e
(Pro)s(cesses")h(v)-5 b(an)32 b(J.C.M.)h(Baeten,)h(T.)e(Bas-)270
2039 y(ten)g(en)g(M.A.)i(Reniers)d(\(ho)s(ofdstukk)m(en)h(tot)h(en)f
(met)h(9\))g(gebruikt)e(mag)i(w)m(orden.)46 b(Aan-)270
2152 y(vullende)35 b(aan)m(tek)m(eningen)k(alsmede)e(aan)m(tek)m
(eningen)i(in)d(het)i(man)m(uscript)e(anders)h(dan)270
2265 y(v)m(erb)s(eteringen)30 b(v)-5 b(an)30 b(fouten)g(zijn)f(niet)p
1462 2280 152 4 v 30 w(to)s(egestaan.)270 2456 y(Dit)e(ten)m(tamen)i(b)
s(estaat)f(uit)f(vijf)f(vragen.)40 b(Diegenen)28 b(die)e(de)i
(instructie)d(in)i(na)5 b(jaar)27 b(2002)270 2569 y(v)m(oldo)s(ende)j
(hebb)s(en)f(gemaakt,)k(ho)s(ev)m(en)e(opga)m(v)m(e)h(1)f(niet)g(te)g
(do)s(en.)41 b(Alle)30 b(opga)m(v)m(en)i(tellen)270 2682
y(ev)m(en)40 b(zw)m(aar.)67 b(Sc)m(hrijf)37 b(de)i(b)s(ewijzen)e
(\(indien)g(v)-5 b(an)38 b(to)s(epassing\))h(nau)m(wk)m(eurig)f(op.)67
b(Bij)270 2795 y(afronding)29 b(v)-5 b(an)30 b(u)m(w)g(cijfer)f(w)m
(ordt)i(hierop)e(gelet.)270 3007 y Fg(Opga)m(v)m(e)35
b(1)46 b Fh(Laat)31 b Ff(a;)15 b(b)27 b Fe(2)e Ff(A)31
b Fh(v)m(ersc)m(hillende)e(atomen)i(zijn.)41 b(Gegev)m(en)33
b(is)c(dat)i Ff(\015)5 b Fh(\()p Ff(a;)15 b(b)p Fh(\))27
b(=)f Ff(b)270 3120 y Fh(en)k Ff(\015)5 b Fh(\()p Ff(a;)15
b(a)p Fh(\))27 b(=)e Ff(b)p Fh(.)331 3386 y(\(i\).)45
b(Bewijs)30 b(dat)h Ff(\015)5 b Fh(\()p Ff(b;)15 b(b)p
Fh(\))26 b(=)f Ff(b)p Fh(;)270 3652 y(Berek)m(en)37 b(een)f(normaalv)m
(orm)g(v)m(o)s(or)g(de)g(v)m(olgende)g(gesloten)h(termen)f(\(i.e.)g
(een)g(term)g(in)270 3765 y(MPT)481 3779 y Fd(\017)514
3765 y Fh(\()p Ff(A)p Fh(\)\):)305 4031 y(\(ii\).)45
b Ff(a:\017)26 b Fe(k)f Ff(b:\017)h Fe(k)g Ff(b:\017)p
Fh(;)280 4142 y(\(iii\).)44 b Ff(@)545 4161 y Fc(f)p
Fd(a)p Fc(g)658 4142 y Fh(\()p Ff(a:b:\017)26 b Fe(k)g
Ff(a:b:\017)p Fh(\);)283 4253 y(\(iv\).)45 b Ff(\034)537
4272 y Fc(f)p Fd(a)p Fc(g)649 4253 y Fh(\()p Ff(a:b:\017)26
b Fe(k)g Ff(a:b:\017)p Fh(\);)308 4364 y(\(v\).)46 b
Ff(\031)549 4378 y Fb(1)589 4364 y Fh(\()p Ff(a:\017)25
b Fe(k)h Ff(b:\017)p Fh(\).)1807 5841 y(1)p eop
%%Page: 2 2
2 1 bop 390 399 a Fg(Opga)m(v)m(e)35 b(2)46 b Fh(Onderzo)s(ek)19
b(v)m(o)s(or)i(de)f(v)m(olgende)h(paren)e(transitiesystemen)h(of)g(ze)h
(rb-bisimilair)390 511 y(zijn.)40 b(Zo)30 b(ja,)h(construeer)f(dan)g
(een)g(rb-bisim)m(ulatie;)e(zo)j(nee,)g(leg)f(uit)g(w)m(aarom)h(niet.)
501 778 y(1.)716 2291 y
 tx@Dict begin tx@NodeDict begin {85.35823 170.71646 } false /N@S 10
{InitPnode } NewNode end end
 716 2291 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  85.35823 142.26372 7.11317
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial 716 2291 a
 tx@Dict begin tx@NodeDict begin {85.35823 142.26372 7.11317 } false
/N@A 11 {InitCnode } NewNode end end
 716 2291 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  56.90549 85.35823 7.11317
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial 716 2291 a
 tx@Dict begin tx@NodeDict begin {56.90549 85.35823 7.11317 } false
/N@B 11 {InitCnode } NewNode end end
 716 2291 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  113.81097 85.35823 7.11317
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial 716 2291 a
 tx@Dict begin tx@NodeDict begin {113.81097 85.35823 7.11317 } false
/N@C 11 {InitCnode } NewNode end end
 716 2291 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  28.45274 28.45274 7.11317
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial 716 2291 a
 tx@Dict begin tx@NodeDict begin {28.45274 28.45274 7.11317 } false
/N@D 11 {InitCnode } NewNode end end
 716 2291 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  85.35823 28.45274 7.11317
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial 716 2291 a
 tx@Dict begin tx@NodeDict begin {85.35823 28.45274 7.11317 } false
/N@E 11 {InitCnode } NewNode end end
 716 2291 a 716 2291 a
 tx@Dict begin tx@NodeDict begin {28.45274 0.0 } false /N@F 10 {InitPnode
} NewNode end end
 716 2291
a 716 2291 a
 tx@Dict begin tx@NodeDict begin {113.81097 56.90549 } false /N@G 10
{InitPnode } NewNode end end
 716 2291 a 716 2291 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@S /N@A InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 716 2291 a 716 2291
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@A /N@B InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 716 2291 a 716 2291 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 716 2291 a 716 2291 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 6.02632 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 716 2291
a 691 2311 a Ff(\034)716 2291 y
 tx@Dict begin PutEnd  end
 716 2291 a 716 2291 a
 tx@Dict begin PutEnd  end

716 2291 a 716 2291 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@A /N@C InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 716 2291 a 716 2291 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 716 2291
a 716 2291 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.78806 4.71457
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 716 2291 a 692 2311 a Ff(a)716 2291 y
 tx@Dict begin PutEnd  end
 716
2291 a 716 2291 a
 tx@Dict begin PutEnd  end
 716 2291 a 716 2291 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@B /N@D InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 716 2291 a 716
2291 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 716 2291 a 716 2291 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.78806 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 716 2291 a 692 2311 a Ff(a)716
2291 y
 tx@Dict begin PutEnd  end
 716 2291 a 716 2291 a
 tx@Dict begin PutEnd  end
 716 2291 a 716 2291 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@B /N@E InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 716
2291 a 716 2291 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 716 2291 a 716 2291 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 4.69937 7.60416
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 716 2291 a 696
2323 a Ff(b)716 2291 y
 tx@Dict begin PutEnd  end
 716 2291 a 716 2291 a
 tx@Dict begin PutEnd  end
 716 2291
a 716 2291 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@D /N@F InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 716 2291 a 716 2291 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@C /N@G InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 716 2291 a 1302 w
Fh(en)2230 2291 y
 tx@Dict begin tx@NodeDict begin {85.35823 170.71646 } false /N@S 10
{InitPnode } NewNode end end
 2230 2291 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  85.35823 142.26372 7.11317
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial 2230 2291 a
 tx@Dict begin tx@NodeDict begin {85.35823 142.26372 7.11317 } false
/N@A 11 {InitCnode } NewNode end end
 2230 2291 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  56.90549 85.35823 7.11317
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial 2230 2291 a
 tx@Dict begin tx@NodeDict begin {56.90549 85.35823 7.11317 } false
/N@B 11 {InitCnode } NewNode end end
 2230 2291 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  113.81097 85.35823 7.11317
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial 2230 2291 a
 tx@Dict begin tx@NodeDict begin {113.81097 85.35823 7.11317 } false
/N@C 11 {InitCnode } NewNode end end
 2230 2291 a 2230 2291 a
 tx@Dict begin tx@NodeDict begin {56.90549 56.90549 } false /N@D 10
{InitPnode } NewNode end end
 2230
2291 a 2230 2291 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@S /N@A InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 2230 2291 a 2230 2291 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@A /N@B InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 2230 2291
a 2230 2291 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2230 2291 a 2230 2291 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.78806 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2230 2291 a 2206
2311 a Ff(a)2230 2291 y
 tx@Dict begin PutEnd  end
 2230 2291 a 2230 2291 a
 tx@Dict begin PutEnd  end
 2230
2291 a 2230 2291 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@A /N@C InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 2230 2291 a 2230 2291 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2230 2291
a 2230 2291 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 4.69937 7.60416
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2230 2291 a 2210 2323 a Ff(b)2230 2291
y
 tx@Dict begin PutEnd  end
 2230 2291 a 2230 2291 a
 tx@Dict begin PutEnd  end
 2230 2291 a 2230 2291 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@B /N@D InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 2230
2291 a 501 2453 a Fh(2.)716 3967 y
 tx@Dict begin tx@NodeDict begin {85.35823 170.71646 } false /N@S 10
{InitPnode } NewNode end end
 716 3967 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  85.35823 142.26372 7.11317
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 716 3967 a
 tx@Dict begin tx@NodeDict begin {85.35823 142.26372 7.11317 } false
/N@A 11 {InitCnode } NewNode end end
 716 3967 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  56.90549 85.35823 7.11317
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 716 3967 a
 tx@Dict begin tx@NodeDict begin {56.90549 85.35823 7.11317 } false
/N@B 11 {InitCnode } NewNode end end
 716 3967 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  113.81097 85.35823 7.11317
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 716 3967 a
 tx@Dict begin tx@NodeDict begin {113.81097 85.35823 7.11317 } false
/N@C 11 {InitCnode } NewNode end end
 716 3967 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  56.90549 28.45274 7.11317
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 716 3967 a
 tx@Dict begin tx@NodeDict begin {56.90549 28.45274 7.11317 } false
/N@D 11 {InitCnode } NewNode end end
 716 3967 a 716 3967
a
 tx@Dict begin tx@NodeDict begin {56.90549 0.0 } false /N@E 10 {InitPnode
} NewNode end end
 716 3967 a 716 3967 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@S /N@A InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 716 3967 a 716 3967 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@A /N@B InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 716 3967
a 716 3967 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 716 3967 a 716 3967 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.78806 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 716 3967 a 692 3986
a Ff(a)716 3967 y
 tx@Dict begin PutEnd  end
 716 3967 a 716 3967 a
 tx@Dict begin PutEnd  end
 716 3967 a 716
3967 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@A /N@C InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 716 3967 a 716 3967 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 716 3967 a 716 3967 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.78806 4.71457
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 716
3967 a 692 3986 a Ff(a)716 3967 y
 tx@Dict begin PutEnd  end
 716 3967 a 716 3967
a
 tx@Dict begin PutEnd  end
 716 3967 a 716 3967 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@B /N@D InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 716 3967 a 716 3967 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 716 3967
a 716 3967 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 6.02632 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 716 3967 a 691 3986 a Ff(\034)716 3967 y
 tx@Dict begin PutEnd  end

716 3967 a 716 3967 a
 tx@Dict begin PutEnd  end
 716 3967 a 716 3967 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@C /N@C InitNC { /AngleA 180. def /r 14.22636 def NCCircle x
y r angleA angleB { ArrowB } { sub } ArcArrow arc end } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 716 3967
a 716 3967 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 716 3967 a 716 3967 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 6.02632 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 716 3967 a 691 3986
a Ff(\034)716 3967 y
 tx@Dict begin PutEnd  end
 716 3967 a 716 3967 a
 tx@Dict begin PutEnd  end
 716 3967 a
716 3967 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@D /N@E InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 716 3967 a 1302 w Fh(en)2230 3967 y
 tx@Dict begin tx@NodeDict begin {85.35823 170.71646 } false /N@S 10
{InitPnode } NewNode end end
 2230 3967
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  85.35823 142.26372 7.11317
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 2230 3967 a
 tx@Dict begin tx@NodeDict begin {85.35823 142.26372 7.11317 } false
/N@A 11 {InitCnode } NewNode end end

2230 3967 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  56.90549 85.35823 7.11317
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 2230
3967 a
 tx@Dict begin tx@NodeDict begin {56.90549 85.35823 7.11317 } false
/N@B 11 {InitCnode } NewNode end end
 2230 3967 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  113.81097 85.35823 7.11317
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
2230 3967 a
 tx@Dict begin tx@NodeDict begin {113.81097 85.35823 7.11317 } false
/N@C 11 {InitCnode } NewNode end end
 2230 3967 a 2230 3967 a
 tx@Dict begin tx@NodeDict begin {113.81097 56.90549 } false /N@D 10
{InitPnode } NewNode end end
 2230 3967 a 2230
3967 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@S /N@A InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 2230 3967 a 2230 3967 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@A /N@B InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 2230 3967 a 2230 3967
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2230 3967 a 2230 3967 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.78806 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2230 3967 a 2206 3986 a Ff(a)2230
3967 y
 tx@Dict begin PutEnd  end
 2230 3967 a 2230 3967 a
 tx@Dict begin PutEnd  end
 2230 3967 a 2230 3967
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@A /N@C InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 2230 3967 a 2230 3967 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2230 3967 a 2230 3967 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.78806 4.71457
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2230
3967 a 2206 3986 a Ff(a)2230 3967 y
 tx@Dict begin PutEnd  end
 2230 3967 a 2230
3967 a
 tx@Dict begin PutEnd  end
 2230 3967 a 2230 3967 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@C /N@D InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 2230 3967 a 390 4155 a
Fg(Opga)m(v)m(e)k(3)46 b Fh(W)-8 b(e)32 b(de\014ni)m(\177)-43
b(eren)30 b(een)i(op)s(erator)f Ff(\013)h Fh(op)f(TCP)o(\()p
Ff(A;)15 b(\015)5 b Fh(\))32 b(\(dus)f(geen)g Ff(\034)10
b Fh('s!\))44 b(d.m.v.)390 4268 y(de)30 b(v)m(olgende)h(v)m
(ergelijkingen)e(\()p Ff(a)d Fe(2)e Ff(A)p Fh(\):)1594
4448 y Ff(\013)p Fh(\()p Ff(\016)s Fh(\))85 b(=)e Ff(\016)1601
4586 y(\013)p Fh(\()p Ff(\017)p Fh(\))h(=)f Ff(\016)1513
4723 y(\013)p Fh(\()p Ff(a:x)p Fh(\))h(=)f Ff(a:\016)24
b Fh(+)c Ff(\013)p Fh(\()p Ff(x)p Fh(\))1427 4861 y Ff(\013)p
Fh(\()p Ff(x)h Fh(+)f Ff(y)s Fh(\))83 b(=)g Ff(\013)p
Fh(\()p Ff(x)p Fh(\))21 b(+)f Ff(\013)p Fh(\()p Ff(y)s
Fh(\))390 5041 y(\()p Ff(\013)31 b Fh(geeft)h(de)e(som)g(v)-5
b(an)31 b(alle)e(atomen)j(die)d(in)g(een)i(pro)s(ces)f(v)m(o)s(ork)m
(omen\).)390 5232 y(Bewijs)g(dan)f(dat)i(v)m(o)s(or)g(alle)e(gesloten)i
(TCP\()p Ff(A;)15 b(\015)5 b Fh(\)-termen)32 b Ff(p;)15
b(q)33 b Fh(het)e(v)m(olgende)f(geldt:)1245 5412 y Ff(\013)p
Fh(\()p Ff(p)c Fe(k)g Ff(q)s Fh(\))f(=)g Ff(\013)p Fh(\()p
Ff(p)p Fh(\))c(+)f Ff(\013)p Fh(\()p Ff(q)s Fh(\))h(+)f
Ff(\013)p Fh(\()p Ff(p)p Fh(\))15 b Fe(j)g Ff(\013)p
Fh(\()p Ff(q)s Fh(\))390 5592 y(\(denk)30 b(aan)h(de)f(normaalv)m(orm)g
(v)-5 b(an)30 b(gesloten)h(termen\).)1927 5841 y(2)p
eop
%%Page: 3 3
3 2 bop 270 399 a Fg(Opga)m(v)m(e)35 b(4)46 b Fh(Gegev)m(en)30
b(is)f(de)f(guarded)h(recursiev)m(e)g(sp)s(eci\014catie)f
Ff(E)34 b Fh(o)m(v)m(er)c(v)-5 b(ariab)s(elen)28 b Ff(X)3343
413 y Fd(n)270 511 y Fh(\()p Ff(n)d Fe(\025)g Fh(0\))31
b(met)g(de)f(v)m(ergelijkingen)f(\(o)m(v)m(er)j(atomaire)f(acties)g
Fa(min)8 b Ff(;)15 b Fa(plus)8 b Fh(\):)1013 684 y Ff(X)1088
698 y Fb(0)1153 684 y Fh(=)25 b Ff(\017)182 b(X)1543
698 y Fd(n)p Fb(+1)1706 684 y Fh(=)25 b Fa(min)7 b Ff(:X)2062
698 y Fd(n)2130 684 y Fh(+)20 b Fa(plus)8 b Ff(:X)2484
698 y Fd(n)p Fb(+2)2621 684 y Ff(:)270 856 y Fh(V)-8
b(o)s(orts)29 b(is)e(gegev)m(en)k(de)d(guarded)f(recursiev)m(e)h(sp)s
(eci\014catie)g Ff(F)41 b Fh(o)m(v)m(er)30 b(v)-5 b(ariab)s(ele)27
b Ff(Y)48 b Fh(met)28 b(als)270 969 y(v)m(ergelijking:)1361
1082 y Ff(Y)45 b Fh(=)25 b Fa(min)8 b Ff(:\017)20 b Fh(+)g
Fa(plus)8 b Ff(:Y)40 b Fe(\001)21 b Ff(Y)5 b(:)270 1233
y Fh(Bewijs)30 b(dat)g Ff(Y)45 b Fh(=)25 b Ff(X)990 1247
y Fb(1)1030 1233 y Fh(.)41 b(Je)30 b(mag)h(gebruik)e(mak)m(en)i(v)-5
b(an)30 b(RDP)q(,)g(RSP)g(en)g(AIP.)270 1430 y Fg(Opga)m(v)m(e)35
b(5)46 b Fh(Een)39 b(klan)m(t)g Ff(K)46 b Fh(b)s(estelt)39
b(een)g(pro)s(duct)f(bij)g(fabriek)g Ff(F)13 b Fh(.)67
b(De)40 b(fabriek)f(geeft)270 1543 y(een)k(op)s(drac)m(h)m(t)h(aan)f
(de)g(uitv)m(o)s(erder)f Ff(U)10 b Fh(,)46 b(die)d(het)g(pro)s(duct)f
(maakt)i(en)f(meegeeft)i(aan)270 1656 y(transp)s(ortb)s(edrijf)30
b Ff(T)13 b Fh(.)50 b Ff(T)c Fh(lev)m(ert)33 b(het)h(pro)s(duct)e(af)i
(aan)g(de)f(klan)m(t,)h(tenzij)f(er)h(tijdens)e(het)270
1768 y(transp)s(ort)23 b(iets)h(misgaat.)39 b(Dit)24
b(laatste)h(w)m(ordt)f(gemeld)g(aan)h Ff(F)13 b Fh(,)25
b(die)e(zorgt)j(dat)e(een)g(nieu)m(w)270 1881 y(pro)s(duct)29
b(gemaakt)j(w)m(ordt.)270 2073 y(V)-8 b(o)s(or)31 b(een)g(pro)s
(cesalgebra-b)s(esc)m(hrijving)d(v)-5 b(an)30 b(dit)f(v)m(erhaal)i
(nemen)e(w)m(e)1039 2245 y Ff(D)f Fh(=)d Fe(f)p Fa(b)-5
b(estel)10 b Ff(;)15 b Fa(pr)-5 b(o)g(duct)11 b Ff(;)k
Fa(maak)d Ff(;)j Fa(fout)9 b Ff(;)15 b Fa(klaar)c Fe(g)p
Ff(;)270 2417 y Fh(en)34 b(hebb)s(en)f(w)m(e)i(atomaire)g(acties)g
Fa(ho)-5 b(er)g(a)10 b Ff(;)15 b Fa(werk)10 b Fh(,)36
b(en)e Ff(s)2172 2431 y Fd(i)2200 2417 y Fh(\()p Ff(d)p
Fh(\))p Ff(;)15 b(r)2398 2431 y Fd(i)2427 2417 y Fh(\()p
Ff(d)p Fh(\))p Ff(;)g(c)2623 2431 y Fd(i)2653 2417 y
Fh(\()p Ff(d)p Fh(\))36 b(v)m(o)s(or)f Ff(d)d Fe(2)g
Ff(D)37 b Fh(en)270 2530 y Ff(i)26 b Fh(=)f(1)p Ff(;)15
b Fh(2)p Ff(;)g Fh(3)p Ff(;)g Fh(4)p Ff(;)g Fh(5,)34
b(met)d(standaard)f(comm)m(unicatiefunctie.)787 3206
y
 tx@Dict begin tx@NodeDict begin {11.28249 3.8 23.57024 11.78511 3.74124
} false /N@U 16 {InitRnode } NewNode end end
 787 3206 a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 3.8
neg 19.77023 11.28249 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
30 w Ff(U)1735 3206 y
 tx@Dict begin tx@NodeDict begin {11.28249 3.8 22.81975 11.40987 3.74124
} false /N@T 16 {InitRnode } NewNode end end
 1735 3206 a 32 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 3.8
neg 19.01974 11.28249 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 30 w Ff(T)2671 3206 y
 tx@Dict begin tx@NodeDict begin {11.28249 3.8 24.98311 12.49155 3.74124
} false /N@K 16 {InitRnode } NewNode end end
 2671 3206
a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 3.8
neg 21.1831 11.28249 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 30 w Ff(K)1733
2734 y
 tx@Dict begin tx@NodeDict begin {11.28249 3.8 23.4623 11.73114 3.74124
} false /N@F 16 {InitRnode } NewNode end end
 1733 2734 a 31 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 3.8
neg 19.6623 11.28249 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
30 w Ff(F)649 3411 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@U /N@F InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 649 3411 a 649 3411 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 649 3411 a
649 3411 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.475 7.05666
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 649 3411 a 626 3440 a Fh(1)649 3411 y
 tx@Dict begin PutEnd  end
 649
3411 a 649 3411 a
 tx@Dict begin PutEnd  end
 649 3411 a 649 3411 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@F /N@T InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 649 3411 a 649
3411 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 649 3411 a 649 3411 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.475 7.05666
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 649 3411 a 626 3440 a Fh(2)649
3411 y
 tx@Dict begin PutEnd  end
 649 3411 a 649 3411 a
 tx@Dict begin PutEnd  end
 649 3411 a 649 3411 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@F /N@K InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 649
3411 a 649 3411 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 649 3411 a 649 3411 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.475 7.05666
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 649 3411 a 626
3440 a Fh(3)649 3411 y
 tx@Dict begin PutEnd  end
 649 3411 a 649 3411 a
 tx@Dict begin PutEnd  end
 649 3411
a 649 3411 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@U /N@T InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 649 3411 a 649 3411 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 649 3411 a 649 3411
a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.475 7.05666
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 649 3411 a 626 3440 a Fh(4)649 3411 y
 tx@Dict begin PutEnd  end
 649 3411 a 649
3411 a
 tx@Dict begin PutEnd  end
 649 3411 a 649 3411 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T /N@K InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 649 3411 a 649 3411 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 649
3411 a 649 3411 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.475 7.05666
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 649 3411 a 626 3440 a Fh(5)649 3411
y
 tx@Dict begin PutEnd  end
 649 3411 a 649 3411 a
 tx@Dict begin PutEnd  end
 649 3411 a 270 3434 a Fh(W)-8
b(e)39 b(hebb)s(en)c(een)j(comm)m(unicatienet)m(w)m(erk)g(als)f(geto)s
(ond)h(in)f(b)s(o)m(v)m(enstaand)g(plaatje,)j(en)270
3547 y(sp)s(eci\014caties)620 3719 y Ff(K)90 b Fh(=)83
b Ff(s)984 3733 y Fb(3)1023 3719 y Fh(\()p Fa(b)-5 b(estel)10
b Fh(\))p Ff(:r)1380 3733 y Fb(5)1420 3719 y Fh(\()p
Fa(pr)-5 b(o)g(duct)11 b Fh(\))p Ff(:)p Fa(ho)-5 b(er)g(a)10
b Ff(:\017)633 3857 y(F)96 b Fh(=)83 b Ff(r)982 3871
y Fb(3)1021 3857 y Fh(\()p Fa(b)-5 b(estel)10 b Fh(\))p
Ff(:G)632 3995 y(G)83 b Fh(=)g Ff(s)984 4009 y Fb(1)1023
3995 y Fh(\()p Fa(maak)11 b Fh(\))p Ff(:)p Fh(\()p Ff(r)1413
4009 y Fb(2)1453 3995 y Fh(\()p Fa(fout)f Fh(\))p Ff(:G)20
b Fh(+)g Ff(r)1935 4009 y Fb(2)1974 3995 y Fh(\()p Fa(klaar)12
b Fh(\))p Ff(:s)2319 4009 y Fb(1)2358 3995 y Fh(\()p
Fa(klaar)g Fh(\))p Ff(:\017)p Fh(\))632 4133 y Ff(U)93
b Fh(=)83 b Ff(r)982 4147 y Fb(1)1021 4133 y Fh(\()p
Fa(maak)11 b Fh(\))p Ff(:)p Fa(werk)g Ff(:s)1596 4147
y Fb(4)1635 4133 y Fh(\()p Fa(pr)-5 b(o)g(duct)12 b Fh(\))p
Ff(:U)30 b Fh(+)20 b Ff(r)2253 4147 y Fb(1)2293 4133
y Fh(\()p Fa(klaar)11 b Fh(\))p Ff(:\017)638 4271 y(T)96
b Fh(=)83 b Ff(r)982 4285 y Fb(4)1021 4271 y Fh(\()p
Fa(pr)-5 b(o)g(duct)11 b Fh(\))p Ff(:)p Fh(\()p Ff(\034)5
b(:s)1562 4285 y Fb(2)1603 4271 y Fh(\()p Fa(fout)k Fh(\))p
Ff(:T)33 b Fh(+)20 b Ff(\034)5 b(:s)2150 4285 y Fb(5)2190
4271 y Fh(\()p Fa(pr)-5 b(o)g(duct)11 b Fh(\))p Ff(:s)2626
4285 y Fb(2)2665 4271 y Fh(\()p Fa(klaar)h Fh(\))p Ff(:\017)p
Fh(\))331 4530 y(\(i\).)45 b(Zij)30 b Ff(H)i Fh(=)26
b Fe(f)p Ff(r)928 4544 y Fd(i)956 4530 y Fh(\()p Ff(d)p
Fh(\))p Ff(;)15 b(s)1156 4544 y Fd(i)1186 4530 y Fh(\()p
Ff(d)p Fh(\))27 b Fe(j)f Ff(d)g Fe(2)f Ff(D)s(;)15 b(i)27
b Fh(=)e(1)p Ff(;)15 b Fh(2)p Ff(;)g Fh(3)p Ff(;)g Fh(4)p
Ff(;)g Fh(5)p Fe(g)p Fh(.)46 b(Berek)m(en)32 b(dan)e(een)h(recursiev)m
(e)497 4642 y(sp)s(eci\014catie)k(v)m(o)s(or)i Ff(@)1224
4656 y Fd(H)1291 4642 y Fh(\()p Ff(K)42 b Fe(k)34 b Ff(F)48
b Fe(k)35 b Ff(T)47 b Fe(k)35 b Ff(U)10 b Fh(\))36 b(en)g(tek)m(en)h
(een)f(transitiesysteem)f(v)-5 b(an)497 4755 y(dit)30
b(pro)s(ces.)305 4861 y(\(ii\).)45 b(Zij)d Ff(I)54 b
Fh(=)46 b Fe(f)p Ff(c)944 4875 y Fd(i)973 4861 y Fh(\()p
Ff(d)p Fh(\))i Fe(j)e Ff(d)h Fe(2)f Ff(D)s(;)15 b(i)48
b Fh(=)e(1)p Ff(;)15 b Fh(2)p Ff(;)g Fh(3)p Ff(;)g Fh(4)p
Ff(;)g Fh(5)p Fe(g)33 b([)28 b(f)p Fa(werk)11 b Fe(g)p
Fh(.)79 b(Laat)45 b(zien)d(dat)i(het)497 4974 y(transitiesysteem)g(v)-5
b(an)45 b Ff(\034)1406 4988 y Fd(I)1445 4974 y Fh(\()p
Ff(@)1528 4988 y Fd(H)1596 4974 y Fh(\()p Ff(K)56 b Fe(k)50
b Ff(F)62 b Fe(k)49 b Ff(T)62 b Fe(k)49 b Ff(U)10 b Fh(\)\))45
b(rb-bisim)m(uleert)d(met)j(het)497 5087 y(transitiesysteem)30
b(v)-5 b(an)30 b(de)h(term)f Ff(\034)5 b(:)p Fa(ho)-5
b(er)g(a)10 b Ff(:\017)p Fh(.)280 5193 y(\(iii\).)44
b(W)-8 b(aarom)36 b(staan)g(er)e Ff(\034)10 b Fh('s)35
b(in)e(de)i(sp)s(eci\014catie)f(v)-5 b(an)34 b Ff(T)13
b Fh(?)53 b(W)-8 b(at)36 b(v)m(erandert)f(er)g(als)f(die)497
5306 y(er)d(niet)e(staan?)283 5412 y(\(iv\).)45 b(Ho)s(e)35
b(mo)s(et)g(de)f(sp)s(eci\014catie)f(aangepast)j(w)m(orden)e(als)g
Ff(K)41 b Fh(1)34 b(of)h(2)f(pro)s(ducten)f(mag)497 5525
y(b)s(estellen?)1807 5841 y(3)p eop
%%Page: 4 4
4 3 bop 1927 5841 a Fh(4)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
