%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: PA281102.dvi
%%CreationDate: Tue Nov 26 11:59:40 2002
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMSY10 CMSY8
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips.exe PA281102
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.11.26:1159
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMSY8
%!PS-AdobeFont-1.1: CMSY8 1.0
%%CreationDate: 1991 Aug 15 07:22:10

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 20 /lessequal put
dup 48 /prime put
dup 102 /braceleft put
dup 103 /braceright put
readonly def
/FontBBox{-30 -955 1185 779}readonly def
/UniqueXX 5000818 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f059084178f5ab59e11b66566ca5ba42b1911a
5d7f1bf343015eece988b7a93bce0c7aa61344d48aed9c92c8698d4b7c9951c8
7d103f2414b39e1437f9d2e50c4ee5f218f2e6716926a79ea978f13b1f855345
191dd7d31d8f82c2e3343c7a5894d95bdc492c28226834efcb5c12fea36ac5cc
430e0aa604961e34888adf6c1f3954cbc2498e225d953cf5685852162346f474
5a2a7087d5d7ad486de16d2ca8e15cee26e012671ba3bdc7d95cc8c98bb774f5
08625e968aee27ff7d1a06e63bcfb5aa4876c3f8f13b30ccccee73c3caf4e70d
98e6ed2f422dbb4950bf789680e064150995941a9f4dd68a575949847a7d012b
b910bf03a0fd0ff582d7bf32eef7d0676dea7d3546c46d4eb7719ac8e8665d6e
a9fe98ba42bd08fbd96417703467c96272fef5c13cf7fa8c94202ab5bcfad814
5e9df4907f465e585a2da4d28443b85ad09ece0a2f593267ec8135747b4139f4
f7979e118d5ac80e6c045a243c9e466384507c1567dd83d3f3b7d3567471b593
f8a14480b10de7e6f44f81343544565a97f3971654e73a4dec3727bbb1796c88
25928ce340c512d3873785591e5ced92d0321e93bacc70d60b42d1689a14ae1c
9dc3c452a809210ba2189571bd8d2411057a9e1b79f5d901265603354ff29080
c32cce6dbf1fdc28b391c32a6b8d8667e4b179b77733ec120ea05c22fc11daae
4e6b990affe36623dfc3a96cc26bb344ff4183c8787974a18bca7ccd3a02be09
ddd533e38c0e23802b9c1567a0f11ac5fc7c3f51db7fb0aefbb3db6b64f2cf08
5066abc81d982a825def975862d288f84d8a8f6b3353238c164c514607665d27
c015dd75a9835a6fd06f99087ea735d50727cb68d5153c41a7458f61760eb2e2
34ba2bf1cd2d911e409ad53083abda82c86366b39d68c17c6425c4106f2cb355
158b31874f4a7d1885e826eca537607baa03ec9dfbe5c65d82bcba46ebb09578
a5f4cc3102f5872adb604a838bc02b09fb7b60ba4f66d7212b53391c33406fc6
27f7e306a73f5bd8cb1ef0d940d58cd5cd36ec938117c99286b0ebb5651acce2
d903bfaf372adbba6f49dedfa89a884d95822230daef11bebe45999e26c82730
30bd07293d809b8f3b9520c5d860fd7350951f23b4d0102711ae538f31a18295
d9589db31d71d1be91d6ad19d9b4e5c6fed3c0704500694a413f8a90d0e3eae0
08840ec73ce0a76aa928ee8a1d109cdec6c926f75d10a0b3605fd185500af535
a3bef2bf4007ce7e80b39890dd5fdec9f185230742f0d18b7dbe166ce502f192
8198f06757a72b207257ad3298b8b7f915fee02c48ebca20a927c06c4c5420a8
373f0c8a7aa0ec3b2d8a38822fa1c09318026bb53d49dde632d7a20a8e78505c
18fa7e90ee685d90835f6312940de9b7beda28a5168b35ea5880f6b2ab33b926
10de3825543718bb467e6fd6faf0c64ccede502988ac60
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 20 /lessequal put
dup 21 /greaterequal put
dup 50 /element put
dup 102 /braceleft put
dup 103 /braceright put
dup 106 /bar put
dup 107 /bardbl put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueXX 5000820 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f67052788e6703bb5ee49533870bca1f113ad8
3750d597b842d8d96c423ba1273ddd32f3a54a912a443fcd44f7c3a6fe3956b0
aa1e784aaec6fce08dae0c76da9d0a3eba57b98a6233d9e9f0c3f00fcc6b2c6a
9ba23af389e6dfff4efec3de05d6276c6be417703ce508377f25960ef4ed83b4
9b01b873f3a639ce00f356229b6477a081933fef3bb80e2b9dffa7f75567b1fa
4d739b772f8d674e567534c6c5bbf1cf615372be20b18472f7aa58be8c216dbd
df81cc0a86b6d8318ca68fe22c8af13b54d7576fe4ca5a7af9005ea5cc4edb79
c0ab668e4fec4b7f5a9eb5f0e4c088cd818ecc4feb4b40ec8bd2981bf2336074
b64c430bd45049e0e5328687f735c6b7e17a89e94cca971e266e9e4620eb69ec
b413113badc84da9a20c1ce2b27032d3f32244407558abfb8546ef83b18e52d4
b9e504cc209faea20573ab39db0d2b8d8f86a73d1d0da5bdaafd21cd9e98279c
ddb4ff49d4f119d1c932ce82ced907df1922da40625e825ef9b2a8ca490ab621
58eada2c6c787a0c35461bb5c7176d5dcbad3e0c6250b399fb9f3ee75f86a19c
a75ca8545f3d6e745effa154d08a9fd0361503a222d3c60a517a3b471b531fac
13a006458a7c11098ecb9e0c02e6d3bf642e531d2a9877c733e236a16c7c7b0a
35df73e7c19b66b7a6b5534f1e9f58180cb3a7e548aded575c90640e16a1fcee
000c2aa06a636a6fd40dc9667bf8e2b6ac78c34bf15389dff3a73468a786b442
1afdd3b38811e73403bbb6c55bffb30b35c28f8a42e262606bb1d1e129fdbc69
0192cbbe124b0d3c5cf47bec65dc3709caa055e982dda24beaf668607f2d8990
a6ef1a3f6d9ef02121241b18cb81c5fa11a84f4d6d3376edcb3a9150d33d6dfd
29f05d372361186bd38601c92b4c280a731e5d06bdd5c39218b55a12c9ef2b11
f451fec61fe7e9fa9a90207fb8e3f25f798013932b3b4bf01e90864e8fbb6100
4f5f25891e1bbc42d671cf19f3a8fb2dd7cd30d4cb939e2a9264cc22bfac6938
f1d3ea9e5a1cb7e6b868e3943f92106d821ad57616ed10fd495fb0987ee27752
066697de0f99aacfb56105005140b6fe27bf2c8ced1bce7b43f547cdbdbb9dd3
03634bc49902a3157297469ad27379cf7220f71e070f1d408e7d6881fd42d5fe
9aece9ab87ffb046626f5d3bd3cf100af91fc43f1f9ffd0072c56ef48194f132
e9a2afc07eff23f9ff5a8c7245707d6e8f0f50c052816a5bc65d31d9fd1520d5
2c91731e01a65ae74789ac91d831b7243af48f8630c0bcd5fbc394591c1946b6
a0e1b991254df62dbcfb44e7a296dafda5c48214e448fb42b4e2fbbb4bd5be68
f4a0a378c472379635be6ef77103e3f287d644c18ec61bd2c574bb9d4aee38b9
7fcb8bb4e99c501a81dfe69265b27685bbec2ccdc1cbe2774a2a6c994bdfe5d8
ffabcf38a8d113e13848e4a45f186010754b59c55291f5aaba115eef1505e4ac
238225c9390554a8c9db82d2717bbc1fb361244a09102b33de16ae7c2b97da13
c8756f7688e8770c7c2ed21f1dd07794186a1e20e534610d6bad6a5c182c3533
1348a916786fffe303fd7f408568b2ec3cdf0093101fc6106d409b298f496c1b
f90d1d670d5a6cd5f18ab8ac41a810a1e399ec558282812acf89e03e121a78e9
72141678afdaadfb9e9d3202440d5424e1324c1a00294b2505272e7e78c37fe1
83844d60902975ec3114a3c76c7ddb62b2ea5c10f64861e5001e8ce3826ec2de
4e1360a0052171896465a04176892c8b718781b90a503a4d15150d7d4c1816e3
589aef557cd5e8af418b6ae8f43f0f487586092a147eb2cafccd24d023de174d
2c61f6f6eda7a09d6fb8224c9ed306ce081523f57ad27b6af8e02a8180e03d4b
6002225cc33574a039f303865b1a10460a6c1d4d1b4b43ca57bfb80f931b3bb8
ee0b68a89eb09ac395a17cebd60e847c9f35bf0e9bbe7a702f
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (PA281102.dvi)
@start
%DVIPSBitmapFont: Fa cmti8 8 4
/Fa 4 121 df<011FB512FCEEFF80903A00FE000FC0EE03E04AEB01F017F80101140017
FC5CA2130317F84A1301A20107EC03F017E04AEB07C0EE0F80010FEC3F0016FE9138C007
F891B512E04914F89138C0007C4A7F82013F1580A291C7120FA25BA2017E141FA213FEEE
3F005B167E00015D4B5A49495A4B5A0003EC3F80B600FEC7FC15F82E2D7BAC32>66
D<D91FFFED0FFF600100EE3FC0A2F07F8018EF902601EF8014FF943801DF0014CFEF039F
01034B5A183E028F140E171C0107167EDA87C0EB387C14071770010FEDE0FC60010EEC01
C0EE0380011E158193380701F090381C03E0160E013CEC1C036001381438A20178EC7007
04E05B90387001F0EDF1C001F09038F3800F6001E0EBF700A2000102FE131F4B91C7FC13
C0486C6C5AD80FF05DD8FFFE9039F00FFFF815E0402D7BAC40>77
D<EB07C0EB1FF090387C39C0EBF81FEA01F03803E00FEA07C0120FD81F801380A2EA3F00
141F481400127EA25C00FE133E5AA2EC7E18EC7C385AA214FCD878011378397C03F870A2
393C0F78E0381E1E3D390FF81FC03903E00F001D1F799D24>97 D<90383E01F09038FF87
F83903C7DE1E380783DC903803F87EEA0E01001E13F0EA1C03003C14380038EBE000A2EA
300700005BA3130F5CA3011F1318153814001238D87C3F137012FC15E0EB7F0139F0FF03
C03970E78780393FC3FE00381F00F81F1F7C9D21>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmex10 10.95 1
/Fb 1 81 df<BC12F887A3D87FE0C90001806DEE0007003FF0007F6C6CF00FFF6C6C1803
6D18000007F27F806C6C193F6C6DF00FC01B076C6D18036D6C19E06E1801013F19006D6C
19F06D6C19708001071A386D6C19006D7FA26D7F6E7E81143F6E7E6E7E8114076E7E6E7F
A26E7F6F7E82153F6F7E6F7E8215076F7E81A26F5A167C16FC4B5A5E4B5A4B5A4B5A151F
93CCFC153E5D5D14015D4A5A4A5A4A5A141F4ACDFC143E4A19384A19701301494819F04A
19E04948180149481803011F1AC049CC1207013E190F49F11F8049197F00011AFF484806
03130049180F4848187F4848943803FFFE001F4DB5FC48BBFC635ABCFC63555B7B7F60>
80 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmti10 10.95 20
/Fc 20 122 df<171C173C177CA217FCA216011603A21607A24C7EA2161DA21639167916
7116E1A2ED01C1A2ED038115071601150EA2031C7FA24B7EA25D15F05D4A5AA24A5AA24A
C7FC5C140E5C021FB6FC4A81A20270C7127FA25C13015C495AA249C8FCA2130E131E131C
133C5B01F882487ED807FEEC01FFB500E0017FEBFF80A25C39417BC044>65
D<49B712C018F818FE903B0003FC0001FF9438007F804BEC3FC0A2F01FE014074B15F018
0FA2140F5D181FA2021F16E05D183F19C0023FED7F804B14FF19004D5A027F4A5A92C7EA
07F0EF1FE0EF7F804AD903FEC7FC92B512F017FE4AC7EA3F800101ED1FE04A6E7E170784
01036F7E5CA30107825CA3010F5E4A1407A260011F150F5C4D5A60013F153F4A4A5A4D5A
017F4A90C7FC4C5A91C7EA0FF849EC3FF0B812C094C8FC16F83C3E7BBD40>I<9339FF80
01C0030F13E0033F9038F803809239FF807E07913A03FC001F0FDA0FF0EB071FDA1FC0EC
BF00DA7F806DB4FC4AC77E495AD903F86E5A495A130F4948157E4948157C495A13FF91C9
FC4848167812035B1207491670120FA2485A95C7FC485AA3127F5BA312FF5BA490CCFCA2
170FA2170EA2171E171C173C173817786C16706D15F04C5A003F5E6D1403001F4B5A6D4A
C8FC000F151E6C6C5C6C6C14F86C6C495A6C6CEB07C090397FC03F8090261FFFFEC9FC01
0713F0010013803A4272BF41>I<49B5933807FFFC496062D90003F0FC00505ADBBF805E
1A771AEF1407033F923801CFE0A2F1039F020FEE071F020E606F6C140E1A3F021E161C02
1C04385BA2F1707F143C023804E090C7FCF001C0629126780FE0495A02705FF00700F00E
0114F002E0031C5BA2F03803010116704A6C6C5D18E019070103ED01C00280DA03805BA2
943807000F13070200020E5C5FDB03F8141F495D010E4B5CA24D133F131E011CDAF9C05C
EEFB80197F013C6DB4C7FC013895C8FC5E01784A5C13F8486C4A5CD807FE4C7EB500F049
48B512FE16E01500563E7BBD52>77 D<92390FF001C0ED7FFE4AB5EA0380913907F80FC7
91390FC003EF91391F8001FF4AC71300027E805C495A4948143EA2495AA2010F153C5CA3
011F1538A38094C7FC80A214FC6DB4FC15F015FE6DEBFFC06D14F06D14FC6D80143F020F
7F020180EC001F150303007F167F163FA2161FA212075A5F120EA2001E153F94C7FCA216
3E003E157E167C003F15FC4B5A486C5C4B5A6D495AD87DE0EB1F80D8F8F849C8FC017F13
FE39F03FFFF8D8E00F13E048C690C9FC32427ABF33>83 D<147E49B47E903907C1C38090
391F80EFC090383F00FF017E137F4914804848133F485AA248481400120F5B001F5C157E
485AA215FE007F5C90C7FCA21401485C5AA21403EDF0385AA21407EDE078020F1370127C
021F13F0007E013F13E0003E137FECF3E1261F01E313C03A0F8781E3803A03FF00FF00D8
00FC133E252977A72E>97 D<EC1FE0ECFFF8903803F03E903807C00F90381F8007D93F00
1380017E131F49137F485A485A000715005B000F147E484890C7FCA2485AA3127F90C9FC
A35A5AA6481403007E5C5D151E003E5C5D6C5CEC03E0390F800F802603E07EC7FC3801FF
F838003FC0212977A72A>99 D<EE3F80ED1FFF1700A2ED007FA2167EA216FEA25EA21501
A25EA21503A25EA21507A25E147E903801FF8F903807C1CF90391F80EFC090383F00FF01
7E137F5B48486D5A485AA2485A000F92C7FC5B001F5CA24848137EA215FE127F90C75AA2
14015A485CA2140316384814F0A21407167891380FE070127C021F13F0007E013F5B003E
137FECF3E1261F01E35B3A0F8781E3802703FF00FFC7FCD800FC133E294077BE2E>I<EC
3F80903801FFE0903807E0F890381F803CEB3E0001FC131E485A485A12074848133E4913
3C121F4848137C15F8EC03F0397F000FE0ECFF80B5EAFC0014C048C8FCA45AA61506150E
151E007C143C15786C14F0EC01E06CEB07C0390F801F003807C0FC3801FFF038007F801F
2976A72A>I<167C4BB4FC923807C78092380F83C0ED1F87161FED3F3FA2157EA21780EE
0E004BC7FCA414015DA414035DA30103B512F8A390260007E0C7FCA3140F5DA5141F5DA4
143F92C8FCA45C147EA414FE5CA413015CA4495AA4495AA4495A121E127F5C12FF49C9FC
A2EAFE1EEAF83C1270EA7878EA3FE0EA0F802A5383BF1C>I<1478EB01FCA21303A314F8
EB00E01400AD137C48B4FC38038F80EA0707000E13C0121E121CEA3C0F1238A2EA781F00
701380A2EAF03F140012005B137E13FE5BA212015BA212035B1438120713E0000F1378EB
C070A214F0EB80E0A2EB81C01383148038078700EA03FEEA00F8163E79BC1C>105
D<D801F0D93F80137F3D07FC01FFE003FFC03D0F3E07C1F80F83F03D0E1F0F00FC1E01F8
001E011C90387C3800001C49D97E707F003C01F05C0038157F4A5C26783FC05C12704A91
C7FC91C7127E00F003FE1301494A5CEA007EA20301140301FE5F495CA203031407000160
495C180F03075D0003051F13E0494A1480A2030FEC3F810007F001C0495CA2031F91383E
0380120F494AEC0700A2033F150E001FEF1E1C4991C7EA0FF80007C7000EEC03E0432979
A74A>109 D<D801F0EB3F803A07FC01FFE03A0F3E07C1F83A0E1F0F00FC001E011C137C
001C49137E003C13F012385C38783FC012705C91C7FC00F015FE495CEA007EA2150101FE
5C5BA2150300015D5B15075E0003020F13704914C0A2031F13F00007ED80E05B1681EE01
C0120F49EC0380A2EE0700001FEC0F0E49EB07FC0007C7EA01F02C2979A733>I<EC1FC0
ECFFF8903803F07C90380FC01FEB1F8090393F000F80017E14C0491307484814E0485A12
075B000F15F0485AA2485AA2ED0FE0127F90C7FCA2151F4815C05AA2ED3F80A2ED7F00A2
48147E007C5C007E13015D4A5A003E495A6C495A4A5A260F803EC7FC3807C0FC3801FFF0
38003F80242977A72E>I<D801F013FC3A07FC07FF803A0F3E0F03C0260E1F1C13E0001E
EB380F001C1370003CEBE01F123814C0D8783F14C00070903880070092C7FC91C8FC12F0
5BEA007EA313FE5BA312015BA312035BA312075BA3120F5BA3121F5B0007C9FC232979A7
26>114 D<EC7F80903801FFE0903807C0F890381F003C013E131C013C131E017C133E49
137E15FEA2000114FCA215706D13007FEBFFC014FC6C13FF15806D13C06D13E0010F13F0
1300140F14071403120C123F387F80011403D8FF0013E0A300FCEB07C000F0EB0F801270
0078EB1F006C133C381F01F83807FFE0C690C7FC1F297AA725>I<EB01C0EB03F01307A2
5CA2130FA25CA2131FA25CA2133FA291C7FCA2007FB51280B6FC1500D8007EC7FC13FEA2
5BA21201A25BA21203A25BA21207A25BA2120FA25BA2121F141C1380A2003F133C1438EB
0078147014F05C495AEA1F03495A6C48C7FCEA07FCEA01F0193A78B81E>I<137C48B414
1C26038F80137EEA0707000E7F001E15FE121CD83C0F5C12381501EA781F007001805BA2
D8F03F1303140000005D5B017E1307A201FE5C5B150F1201495CA2151F0003EDC1C04914
81A2153F1683EE0380A2ED7F07000102FF13005C01F8EBDF0F00009038079F0E90397C0F
0F1C90391FFC07F8903907F001F02A2979A731>I<903903F001F890390FFC07FE90393C
1E0E0F9026780F1C138001F0EBB83FD801E013F89039C007F07FEA0380000714E0D9000F
140048151C000E4AC7FCA2001E131FA2C75BA2143F92C8FCA35C147EA314FE4A131CA301
01143C001E1538003F491378D87F811470018314F000FF5D9039077801C039FE0F7C033A
7C0E3C078027783C1E1EC7FC391FF80FFC3907E003F029297CA72A>120
D<137C48B4143826038F8013FCEA0707000E7F001E1401001C15F8EA3C0F12381503D878
1F14F000701380A2D8F03F1307020013E012005B017E130F16C013FE5B151F1201491480
A2153F000315005BA25D157EA315FE5D00011301EBF8030000130790387C1FF8EB3FF9EB
07E1EB00035DA21407000E5CEA3F80007F495AA24A5AD8FF0090C7FC143E007C137E0070
5B387801F0383803E0381E0FC06CB4C8FCEA03F8263B79A72C>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr8 8 14
/Fd 14 122 df<9138FF807E01079038E1FF80903A1F807FC3C0D93E00EB87E049EBFF07
4913FE485A00039138FC018049017CC7FCAAB712FCA22703E0007CC7FCB3A6486C13FE3A
7FFF0FFFF0A22B2F7FAE29>11 D<EC0380B3A4B812FCA3C7D80380C7FCB3A42E2F7CA737
>43 D<EB3FC0EBFFF03803E07C48487E48487E497E001EEB0780A2003E14C0A248EB03E0
A500FC14F0B0007C14E0A3007E1307003E14C0A36CEB0F806C14006D5A3807C03E3803F0
FC3800FFF0EB3FC01C2D7DAB23>48 D<130C133C137CEA03FC12FFEAFC7C1200B3B113FE
387FFFFEA2172C7AAB23>I<EB7F803801FFF0380780FC380E003F48EB1F8048EB0FC05A
0060EB07E012F000FC14F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC3F0014
7E147C5C495A495A495A495A011EC7FC5B5B4913305B485A4848136048C7FC000E14E000
1FB5FC5A4814C0B6FCA21C2C7DAB23>I<13FF000713C0380F01F0381C00F8003F137C80
A2143F001E7FC7FCA4EB07FF137F3801FE1FEA07F0EA1FC0EA3F80EA7F00127E00FE1406
5AA3143F7E007E137F007FEBEF8C391F83C7FC390FFF03F83901FC01E01F207D9E23>97
D<EB1FE0EB7FFC3801F01E3803E0073907C01F80EA0F80EA1F005A003EEB0F00007E90C7
FCA2127C12FCA9127EA215C07E6C130101801380380FC0033907E007003801F03E38007F
F8EB1FC01A207E9E1F>99 D<EB1F80EBFFF03803E0783807C03E380F801E381F001FEC0F
80123E007E130715C0127C12FCA3B6FCA200FCC8FCA5127EA2003E14C0123F6C1301390F
80038001C013003803E00F3801F03C38007FF8EB1FC01A207E9E1F>101
D<130FEB1F80EB3FC0A4EB1F80EB0F0090C7FCA8EB07C013FFA2130F1307B3AD12301278
38FC0F80A21400485AEA783EEA3FF8EA07E0123C83AD16>106 D<EB1FE0EB7FF83801F0
3E3803C00F3907800780390F0003C04814E0003EEB01F0A248EB00F8A300FC14FCA9007C
14F8A26CEB01F0A26CEB03E0A2390F8007C03907C00F803901F03E0038007FF8EB1FE01E
207E9E23>111 D<3807C0FE39FFC7FF809038CF03E0390FDC01F03907F800FC49137E49
133E49133FED1F80A3ED0FC0A8151F1680A2ED3F00A26D137E6D137C5D9038FC01F09038
CE07E09038C7FF80D9C1FCC7FC01C0C8FCA9487EEAFFFEA2222B7E9D27>I<380781F838
FF87FEEB8E3FEA0F9CEA07B813B0EBF01EEBE000A45BB0487EB5FCA2181E7E9D1C>114
D<1360A413E0A312011203A21207121FB512F0A23803E000AF1418A714383801F0301470
3800F860EB3FE0EB0F80152A7FA81B>116 D<3AFFFC01FFC0A23A0FE0007E000007147C
1538000314306D137000011460A26C6C5BA2EBFC01017C5BEB7E03013E90C7FCA2EB1F06
A2148EEB0F8CA2EB07D8A2EB03F0A36D5AA26D5AA2495AA2130391C8FC1278EAFC06A25B
131CEA7838EA7070EA3FE0EA0F80222B7F9C25>121 D E
%EndDVIPSBitmapFont
/Fe 152[35 35 53[19 27[55 20[{}4 66.4176 /CMSY8 rf
%DVIPSBitmapFont: Ff cmmi8 8 7
/Ff 7 111 df<90B6128012035A481500261E00E0C7FC5A00705B130112E012C0EA0003
A25CA21307A349C8FCA35BA2131E133EA45BA21338211E7E9C1F>28
D<123C127EB4FCA21380A2127F123D1201A312031300A25A1206120E5A5A5A126009157A
8714>59 D<90273FFFFC0FB5FCA2D900FEC7EA3F80A24A1500A201015D177E5CA2010315
FE5F5CA2010714015F5CA2010F14035F5C91B6FC5B9139C00007E05CA2013F140F5F91C7
FCA249141F5F137EA201FE143F94C7FC5BA200015D167E5BA2000315FEB539E03FFFF8A2
382D7CAC3A>72 D<90383FFFFCA2903800FE00A25CA21301A25CA21303A25CA21307A25C
A2130FA25CA2131FA25CA2133FA291C7FCA25BA2137EA213FEA25BA21201A25BA21203B5
12E0A21E2D7DAC1F>I<EB07E0EB1FF890387C1CE0EBF80D3801F00F3803E007EA07C012
0FD81F8013C0A2EA3F00140F481480127EA2141F00FE14005AA2EC3F02EC3E06A25AEC7E
0E007CEBFE0C14FC0101131C393E07BE18391F0E1E38390FFC0FF03903F003C01F1F7D9D
25>97 D<13F8121FA21201A25BA21203A25BA21207A25BA2120FEBC7E0EB9FF8EBB83C38
1FF01EEBE01F13C09038800F80EA3F00A2123EA2007E131FA2127CA2143F00FC14005AA2
147EA2147C14FC5C387801F01303495A383C0F806C48C7FCEA0FFCEA03F0192F7DAD1E>
I<3907C007E0391FE03FF83918F8783E393879E01E39307B801F38707F00126013FEEAE0
FC12C05B00815C0001143E5BA20003147E157C5B15FC0007ECF8081618EBC00115F0000F
1538913803E0300180147016E0001F010113C015E390C7EAFF00000E143E251F7E9D2B>
110 D E
%EndDVIPSBitmapFont
/Fg 148[45 25 2[45 45 51[61 28[71 71 20[{}7 90.9091 /CMSY10
rf
%DVIPSBitmapFont: Fh cmmi10 10.95 31
/Fh 31 122 df<EB03F8D90FFE140F90383FFF8090B56C131E4880486E131C2607FC1F14
3C270FE003F81338261F8000147890C7007C1370003E023C13F0003C023E13E048EC1E01
0070020E13C000F0EC0F034816801507C81307EE8700168FED038E169E169CA216BC16B8
A216F85EA25EA35EA35EA31507A293C7FC5DA4151EA3153E153CA45DA31570A21560303C
7FA72F>13 D<EC01C0EC0FFF023F13E0027913F0ECE03F903801C00FEC8007ED01E00103
90C7FCA280130180A280A26D7E80A2147E147F6E7EA26E7E81140FEC7FF0903801F7F8EB
07C790381F83FCEB3E03EB7C0101F87F12013803F000485AA24848137E485AA2123F90C7
FCA25A127EA300FE147C5A15FCA25D1401A25D007C13035DA26C495A4A5A6C91C7FC6C13
1E6C6C5A3803E0783800FFE0EB3F8024427CC028>I<EC1FF8903801FFFC010713F89038
1FF000EB3F8001FEC7FC485A485A485A120F485AA2485AA2485AA290B512C0B6FC150090
C8FCA35AA7127E127F7EA26C7E000F14703907C001F03903E003E03901F81F8039007FFE
00EB0FF01E287CA625>I<011FB612FE017F15FF48B8FC5A4816FE3B0FC03801C000EA1F
00003E1403003C01785B4813705AECF0075AC712E0010191C7FCA25DEB03C0A313071480
A2010F5BA2EB1F0082A2133EA2137E825B150F0001815B120315075BC648EB038030287D
A634>25 D<011FB612C090B7FC5A5A481680260FC007C8FC48C65A123E003C130E48131E
5A5AA2C75AA3147CA2147814F8A4495AA31303A25CA21307A3495AA3131FA25C6DC9FC2A
287DA628>28 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A798919>58
D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380120313005A
120E5A1218123812300B1C798919>I<180E183F18FFEF03FEEF0FF8EF3FE0EFFF809338
03FE00EE0FF8EE3FE0EEFF80DB03FEC7FCED1FF8ED7FE0913801FF80DA07FEC8FCEC1FF0
EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA07FCEA1FF0EA7FC048CBFCA2EA7FC0
EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FE913801
FF809138007FE0ED1FF8ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FE0EF
0FF8EF03FEEF00FF183F180E383679B147>I<15FF020713E091381F00F80278133E4A7F
4948EB0F804948EB07C04948EB03E091C7FC496CEB01F002E014F8131F160017FCA25C01
07C812FE90C9FCA7EC03FCEC3FFF9138FE03C1903903F000E149481371D91F80133149C7
123B017EEC1BFC5B0001151F4848140F484815F8A2485A121F17F0485A161F17E0127F5B
EE3FC0A200FF168090C8127F1700A216FEA2484A5A5E007E1403007F4A5A5E6C4A5A6C6C
495A4BC7FC6C6C13FE6C6C485A3903F80FF06CB512C06C6C90C8FCEB0FF82F437CC030>
64 D<17075F84171FA2173F177FA217FFA25E5EA24C6C7EA2EE0E3F161E161C1638A216
70A216E0ED01C084ED0380171FED07005D150E5DA25D157815705D844A5A170F4A5A4AC7
FC92B6FC5CA2021CC7120F143C14384A81A24A140713015C495AA249C8FC5B130E131E49
82137C13FED807FFED1FFEB500F00107B512FCA219F83E417DC044>I<49B712F818FF19
E090260001FEC7EA3FF0F007F84B6E7E727E850203815D1A80A20207167F4B15FFA3020F
17004B5C611803021F5E4B4A5A180FF01FE0023F4B5A4B4A5ADD01FEC7FCEF07F8027FEC
7FE092B6C8FC18E092C7EA07F84AEC01FE4A6E7E727E727E13014A82181FA213034A82A3
01075F4A153FA261010F167F4A5E18FF4D90C7FC011F5E4A14034D5A013FED1FF04D5A4A
ECFFC0017F020790C8FCB812FC17F094C9FC413E7DBD45>I<49B6D8C03FB512F81BF017
80D900010180C7383FF00093C85B4B5EA2197F14034B5EA219FF14074B93C7FCA260140F
4B5DA21803141F4B5DA21807143F4B5DA2180F4AB7FC61A20380C7121F14FF92C85BA218
3F5B4A5EA2187F13034A5EA218FF13074A93C8FCA25F130F4A5DA21703131F4A5DA2013F
1507A24A5D496C4A7EB6D8E01FB512FCA2614D3E7DBD4C>72 D<49B612C05BA2D90001EB
800093C7FC5DA314035DA314075DA3140F5DA3141F5DA3143F5DA3147F5DA314FF92C8FC
A35B5CA313035CA313075CA3130F5CA3131F5CA2133FA25CEBFFE0B612E0A32A3E7DBD28
>I<EE3FF00303B5FC92391FC03FC092397E0007E0DA01F8EB01F8DA07E06D7E4A48147E
023FC87E027EED1F804A16C0D903F8150F494816E0495A4948ED07F0A2494816F849C9FC
5B48481603A2484817FCA2485A000F17075B121FA25B123F19F84848160FA44848EE1FF0
A3F03FE0A390CAEA7FC0A2F0FF80A219004D5A1703604D5A6C7E4D5A4D5A003F5F4D5A6C
6C4BC7FC17FE6C6C4A5A4C5A6C6CEC07E06C6CEC1FC06C6C4A5A6C6C02FEC8FC90393F80
03F890390FE01FE00103B5C9FC9038007FF03E427BBF45>79 D<49B712F018FF19C0D900
0190C76C7EF00FF84BEC03FC1801020382727E5DA214071A805DA2140F4E13005DA2021F
5E18034B5D1807023F5E4E5A4B4A5A4E5A027F4B5A06FEC7FC4BEB03FCEF3FF091B712C0
05FCC8FC92CBFCA25BA25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA25C
497EB612E0A3413E7DBD3A>I<EE3FF00303B5FC92391FC03FC092397E0007E0DA01F8EB
01F8DA07E06D7E4A48147EDA3F8080027EC813804AED1FC0EB03F84948ED0FE0130F4948
16F04A1507494816F8137F49C9FC485AA2484817FCA2485A120FA2485AA25B123F19F848
48160FA44848EE1FF0A3F03FE0A290CAFCF07FC0A2198018FF19004D5AA24D5A606C1607
4D5A6D01F85C003FD903FE495ADA0F07495A271FC01C0349C7FC9139380180FE260FE030
EB81FCEEC3F82607F070EBC7E03B03F86000CFC0D801FCECFF80D800FE4AC8FC90393FF0
03F890270FF81FE0130C0103B5FC9026007FF1141CDA00011418183882607013F0170393
38FC0FE093B5FC6060A26F91C7FC5F705AEE3FF0EE0FC03E527BBF48>I<48B912FCA25A
913A0003FE000F01F84A1301D807E0EE00F8491307491778000F5D90C7FC001E140FA200
1C4B1470123C0038141FA200785D1270033F15F000F018E0485DC81600157FA25EA215FF
A293C9FCA25CA25DA21403A25DA21407A25DA2140FA25DA2141FA25DA2143FA25DA2147F
A214FF497F001FB612FCA25E3E3D7FBC35>84 D<007FB500F090387FFFFE19FC5D26007F
E0C7000313804A913800FC004A5D187001FF16F0A291C95AA2481601605BA20003160360
5BA20007160795C7FC5BA2000F5E170E5BA2001F161E171C5BA2003F163C17385BA2007F
1678A2491570A200FF16F0A290C95AA216015F5A16035F16074CC8FC160E161E5E007F5D
5E6C4A5A6D495A6C6C495A6C6C011FC9FC6C6C137E3903FC03F8C6B512E0013F1380D907
FCCAFC3F407ABD3E>I<B6020FB5FCA219FE000301C0020013E06C90C9EA7F00183E183C
6C5F187060A24D5A17036E5D4DC7FC017F5D170E5FA25F17786E14705F133F4C5A4C5AA2
4CC8FC5E6E130E5EA2011F5C167816705E15015E6E485AA2010F49C9FC5D150E5DA25D6E
5AA201075B14F95DECFB80A202FFCAFC5CA25C13035C5CA25CA25C40407BBD35>I<B601
7FB5D88007B51280A24A1A0000030180010101E0C7EA7FF049C80180EC1FC0000194C85B
99C7FC1B1E1B1C63A2634C7F634C150163DC077F4A5A160F6D020E4BC8FC161C6C190E16
38620470153C04F0153804E05DED01C062DB03807F4F5A922607003F130362030E4BC9FC
151EDA801C150E5D017F5F5D614B1578028116704B5DEC8380F0C1C00287C713E1F0E380
028EEC1FE796CAFC029C15EE14BC02F815FC5C013F5E5C605C604A5D91C8FC60133E95CB
FC013C81170E59407BBD56>I<027FB5D88007B512C091B6FCA2020101F8C7EBF8009126
007FE0EC7F804C92C7FC033F157C701478616F6C495A4E5A6F6C495A4EC8FC180E6F6C5B
606F6C5B6017016F6C485A4D5A6F018FC9FC179E17BCEE7FF85F705AA3707EA283163F16
7FEEF7FCED01E7EEC3FEED0383ED070392380E01FF151E4B6C7F5D5D4A486D7E4A5A4A48
6D7E92C7FC140E4A6E7E5C4A6E7E14F0495A49486E7E1307D91F806E7ED97FC014072603
FFE0EC1FFF007F01FC49B512FEB55CA24A3E7EBD4B>I<EC1F80ECFFE0903903F0707090
390FC039F890381F801D90383F000F017E5C5B00011407485A48485CA2485A001F140F5E
485AA2151F007F5D5BA2153F00FF92C7FC90C7FCA25D92387E03805AA215FEEDFC07007E
0101140014035E6C0107130E140E3A1F801C7C1C000F13783A07C1F03E383A01FFC01FF0
3A007F0007C029297DA730>97 D<EB1FC0EA0FFF5CA2EA003FA291C8FCA25BA2137EA213
FEA25BA21201A25BA21203A25BEC3F800007EBFFE09038F3C1F849C67E01FE137E484813
3E49133F5B491480001F141F5B5BED3FC0123FA290C7FCA248147F1680127EA215FF00FE
15005AA24A5AA25D1403485C1407007C5C4A5A5D003C495A003E49C7FC001E137E6C13F8
380783F03803FFC0C648C8FC22407CBE27>I<EC07F0EC7FFE903801FC0F903907E00380
90390FC001C0D93F8013E090387F000701FE131F485A485A16C0485A000F15804990C7FC
121F485AA3127F5BA312FF90C9FCA6007E1560007F15E01501ED03C06CEC07806DEB0F00
001F141E6C6C137C3907E001F03901F01FC06CB5C7FCEB1FF023297DA727>I<EE07F0ED
03FF17E0A2ED000FA217C0A2161FA21780A2163FA21700A25EA2167EA216FEA25EEC1F80
ECFFE1903803F07190390FC039F890381F801D90383F000F137E495C00011407485A485A
5E485A001F140FA248485CA2151F127F495CA2153F12FF90C790C7FCA25DEE038048147E
A215FE1607007ED901FC130014035E6C0107130E140E3A1F801C7C1C000F13783A07C1F0
3E383A01FFC01FF03A007F0007C02C407DBE2F>I<EC1FE0ECFFFC903803F01E90380FC0
0F90393F800780D97E0013C0491303EA03F8120749130748481480121F49130F003FEC1F
00153E397F8001FCEC1FF0B6128002F8C7FC90C9FCA45AA616C01501007E1403ED07806C
EC0F00151E6C5C6C6C13F83907C003E03903E03F802600FFFEC7FCEB3FE022297CA72A>
I<D801F0EB0FF0D807FCEB3FFED80F1FEBF01F000E903903C00F80271E0F87007F001C01
8E1307003C01DC80003813F85CEA781F00705B5CA200F049130F013F5D000090C7FCA216
1F495D137E163F94C7FC13FE495C167EA200019238FE03804914FCA203011307000303F8
13005B5FEEF00E0007161E49151C5F1778000F6E6C5A49EC7FC0D80380021FC7FC31297E
A737>110 D<D801F0EB3F80D807FCEBFFE03A0F1F03C0F0000E90380F00F8391E0F9E03
001C13BC003CEBF807003813F0A226781FE013F000709038C001C092C7FC5C12F0133F00
0090C8FCA35B137EA313FE5BA312015BA312035BA312075BA3120F5BEA038025297EA729
>114 D<EC1FC0ECFFF8903803E03C903807800E90381E0007168049130F49131F153FA2
01F81400A2151C6D90C7FC7FEBFFE014FE90387FFFC06D7F6D13F86D7F13039038001FFE
14031400157E000C143E123F487EA248C7123CA25D12FC00F05C0070495A0078495A6C49
5A260F803EC7FC3803FFF838007FC021297CA72B>I<D901F8133FD907FEEBFFE0903A1E
0F83C0F0903A3807C780F890397003CF0301E013FED801C0EBFC071203018013F8D80700
15F0EE01C0000E4AC7FCA2001E1307A2C75BA2140F5DA3141F5DA3143F92380001C0A34A
1303001E1680003F017E1307267F80FE14005ED8FF81141ED901DF131CD8FE035C3A7C07
8F80F03A3C0F07C1E03A1FFC03FF802707F0007EC7FC2D297EA734>120
D<137C48B4EC03802603C7C0EB0FC0EA0703000F7F000E151F001C168013071238163FD8
780F150000705BA2D8F01F5C4A137E1200133F91C712FE5E5B137E150113FE495CA21503
00015D5BA215075EA2150F151F00005D6D133F017C137F017E13FF90393F03DF8090380F
FF1FEB01FC90C7123F93C7FCA25DD80380137ED80FE013FE001F5C4A5AA24848485A4A5A
6CC6485A001C495A001E49C8FC000E137C380781F03803FFC0C648C9FC2A3B7EA72D>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmbx10 10.95 17
/Fi 17 119 df<140F143F5C495A130F48B5FCB6FCA313F7EAFE071200B3B3A8B712F0A5
243C78BB34>49 D<903803FF80013F13F890B512FE00036E7E4881260FF80F7F261FC003
7F4848C67F486C6D7E6D6D7E487E6D6D7EA26F1380A46C5A6C5A6C5A0007C7FCC8FC4B13
00A25E153F5E4B5AA24B5A5E4A5B4A5B4A48C7FC5D4A5AEC1FE04A5A4A5A9139FF000F80
EB01FC495A4948EB1F00495AEB1F8049C7FC017E5C5B48B7FC485D5A5A5A5A5AB7FC5EA4
293C7BBB34>I<903801FFE0010F13FE013F6D7E90B612E04801817F3A03FC007FF8D807
F06D7E82D80FFC131F6D80121F7FA56C5A5E6C48133FD801F05CC8FC4B5A5E4B5A4A5B02
0F5B902607FFFEC7FC15F815FEEDFFC0D9000113F06E6C7E6F7E6F7E6F7E1780A26F13C0
A217E0EA0FC0487E487E487E487EA317C0A25D491580127F49491300D83FC0495A6C6C49
5A3A0FFE01FFF86CB65A6C5DC61580013F49C7FC010313E02B3D7CBB34>I<ED01F81503
1507A2150F151F153FA2157F15FF5C5CA25C5CEC1FBFEC3F3F143E147C14FCEB01F814F0
EB03E01307EB0FC0EB1F801400133E137E5B485A5B485A1207485A5B48C7FC5A127E5AB8
12F8A5C8387FF800AA49B612F8A52D3C7DBB34>I<00071538D80FE0EB01F801FE133F90
B6FC5E5E5E5E93C7FC5D15F85D15C04AC8FC0180C9FCA9ECFFC0018713FC019F13FF90B6
7E020113E09039F8007FF0496D7E01C06D7E5B6CC77FC8120F82A31780A21207EA1FC048
7E487E12FF7FA21700A25B4B5A6C5A01805C6CC7123F6D495AD81FE0495A260FFC075B6C
B65A6C92C7FCC614FC013F13F0010790C8FC293D7BBB34>I<ED3FFF0203B512F0021F14
FE027F6E7E902701FFF80713E00107D9C00013F84990C7EA3FFCD93FFCEC0FFF49486E7F
49486E7F48496E7F4A80488448496F7EA24890C96C7E4884A249161F003F84A348487013
80A400FF19C0AD007F19806D5EA3003F1900A26D5E6C60A26C6D4B5AA26C6D4B5A6C6D4A
5BA26C6D4A5B6C6D4A5B6D6C4A5B6DB4023F90C7FC6D01C0EBFFFE0107D9F80713F80101
90B612E06D5E021F4AC8FC020314F0DA003F90C9FC42407ABE4F>79
D<B812F017FF18C018F018FC26003FFCC77FEF1FFF7113807113C07113E0A27113F0A319
F8A819F0A34D13E019C05F4D1380053F1300EFFFFE91B712F860188005FCC7FC4ACAFCB3
A4B77EA53D3E7DBD47>I<B600FC020FB512C0A5C66C48C9381F8000013F95C7FC80616D
173E6F157E6D177C6F15FC6D5F8118016D6D5D18036D5F6F14076D5F6F140F027F5E8118
1F023F93C8FC6F5C6E153E70137E6E157C8218FC6E6D5B17016E5DEEF0036E5DEEF8076E
5D16FC170F037F5CEEFE1F033F91C9FC705A6F133E17BE17FE6F5BA26F5BA26F5BA26F5B
A36F5BA2705AA270CAFCA24A3F7EBD4F>86 D<903807FFC0013F13F848B6FC48812607FE
037F260FF8007F6DEB3FF0486C806F7EA36F7EA26C5A6C5AEA01E0C8FC153F91B5FC130F
137F3901FFFE0F4813E0000F1380381FFE00485A5B485A12FF5BA4151F7F007F143F6D90
387BFF806C6C01FB13FE391FFF07F36CEBFFE100031480C6EC003FD91FF890C7FC2F2B7D
A933>97 D<ECFFF0010713FE011F6D7E017F809039FFE07FE0489038801FF048496C7E48
486D7E48486D7E121F491301003F81A2485A6F1380A212FFA290B7FCA401F0C9FCA5127F
A27F123FEE0F806C7E161F6C6C15006C6C5C6C6D137E6C9038E001FC6C9038F80FF8013F
B55A6D14C0010391C7FC9038007FF8292B7DA930>101 D<903A03FF8007F0013F9038F8
3FF8499038FCFFFC48B712FE48018313F93A07FC007FC34848EB3FE1001FEDF1FC499038
1FF0F81700003F81A7001F5DA26D133F000F5D6C6C495A3A03FF83FF8091B5C7FC4814FC
01BF5BD80F03138090CAFCA2487EA27F13F06CB6FC16F016FC6C15FF17806C16C06C16E0
1207001F16F0393FE000034848EB003F49EC1FF800FF150F90C81207A56C6CEC0FF06D14
1F003F16E001F0147FD81FFC903801FFC02707FF800F13006C90B55AC615F8013F14E001
0101FCC7FC2F3D7DA834>103 D<01FFEB1FF8B5EBFFFE02036D7E4A80DA0FE07F91381F
007F0007013C806C5B4A6D7E5CA25CA35CB3A4B5D8FE0FB512E0A533297CA83A>110
D<01FFEBFFE0B5000713FC021FEBFF80027F80DAFF8113F09139FC007FF8000701F06D7E
6C496D7E4A130F4A6D7E1880A27013C0A38218E0AA4C13C0A318805E18005E6E5C6E495A
6E495A02FCEBFFF0DAFF035B92B55A029F91C7FC028713FC028113C00280C9FCACB512FE
A5333B7DA83A>112 D<3901FE01FE00FF903807FF804A13E04A13F0EC3F1F91387C3FF8
000713F8000313F0EBFFE0A29138C01FF0ED0FE091388007C092C7FCA391C8FCB3A2B6FC
A525297DA82B>114 D<EB07C0A5130FA4131FA3133F137FA213FF5A1207001FEBFFFEB6
FCA40001EBC000B3151FA96CEBE03EA2017F137EECF8FC90383FFFF86D13F0010713E001
001380203B7EB929>116 D<D9FF80EB0FF8B5EB0FFFA50007EC007F6C153FB3A5167FA3
16FF6C5C4B7F6C903AC007DFFFE09138F01F9F6DB5121F6D13FE010F13F8010101E0EBE0
00332A7CA83A>I<B500FC90383FFFC0A5000101C0903803E0006E1307A26C5E6E130F01
7F5D6E131F013F92C7FC6E5B011F143E6E137E010F147C6E13FCA26D5C15816D5C15C36D
5C15E76D5C15FF6E5BA36E90C8FCA26E5AA26E5AA26E5AA26E5AA232287EA737>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmr10 10.95 66
/Fj 66 123 df<4AB4FC021F13C091387F01F0903901FC0078D907F0131C4948133E4948
13FF49485A137F1400A213FE6F5A163893C7FCAA167FB8FCA33900FE00018182B3AC486C
ECFF80007FD9FC3F13FEA32F407FBF33>12 D<121EEA7F80EAFFC0A9EA7F80ACEA3F00AC
121EAB120CC7FCA8121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A4179C019>33
D<001E130F397F803FC000FF137F01C013E0A201E013F0A3007F133F391E600F30000013
00A401E01370491360A3000114E04913C00003130101001380481303000EEB070048130E
0018130C0038131C003013181C1C7DBE2D>I<121EEA7F8012FF13C0A213E0A3127FEA1E
601200A413E013C0A312011380120313005A120E5A1218123812300B1C79BE19>39
D<1430147014E0EB01C0EB03801307EB0F00131E133E133C5B13F85B12015B1203A2485A
A2120F5BA2121F90C7FCA25AA3123E127EA6127C12FCB2127C127EA6123E123FA37EA27F
120FA27F1207A26C7EA212017F12007F13787F133E131E7FEB07801303EB01C0EB00E014
701430145A77C323>I<12C07E12707E7E121E7E6C7E7F12036C7E7F12007F1378137CA2
7FA2133F7FA21480130FA214C0A3130714E0A6130314F0B214E01307A614C0130FA31480
A2131F1400A25B133EA25BA2137813F85B12015B485A12075B48C7FC121E121C5A5A5A5A
145A7BC323>I<1506150FB3A9007FB912E0BA12F0A26C18E0C8000FC9FCB3A915063C3C
7BB447>43 D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380
120313005A120E5A1218123812300B1C798919>I<B512FEA617067F961E>I<121EEA7F80
A2EAFFC0A4EA7F80A2EA1E000A0A798919>I<EB01FE90380FFFC090383F03F090387C00
F849137C48487F48487F4848EB0F80A2000F15C04848EB07E0A3003F15F0A290C7120348
15F8A64815FCB3A26C15F8A56C6CEB07F0A3001F15E0A36C6CEB0FC0A26C6CEB1F800003
15006C6C133E6C6C5B017C5B90383F03F090380FFFC0D901FEC7FC263F7DBC2D>48
D<EB01C013031307131F137FEA07FFB5FC139FEAF81F1200B3B3ACEB7FF0B612F8A31D3D
78BC2D>I<EB07FC90383FFF8090B512E03903F01FF83907C007FC390F0001FE001E6D7E
001C1580003CEC7FC05AED3FE01270B4FC6DEB1FF07FA56C5A6CC7FC120CC813E0153FA2
16C0157F168015FF16004A5A5D4A5A4A5A5D4A5A4A5A4AC7FC147E147C5C495A495A495A
495A49C71270133E133C5B4914E0485A485A485A48C7120148B6FCA25A4815C0B7FCA324
3D7CBC2D>I<EB07FC90383FFF809038F80FE03901E003F839078001FCD80F007F000E6D
7E001E1580D81F80137F486C14C07FA27F5BA2121F6C5AC8138015FF1600A24A5AA24A5A
5DEC07E04A5A023FC7FCEB1FFCECFF809038000FE0EC07F86E7E6E7E6E7E1680ED7FC0A2
16E0153FA216F0A2120C123F487E487EA316E0A249137F6CC713C01278EDFF807E6C4913
006C495A3907C007FC3903F80FF0C6B55A013F1380D907F8C7FC243F7CBC2D>I<150E15
1E153EA2157EA215FE1401A21403EC077E1406140E141CA214381470A214E0EB01C0A2EB
0380EB0700A2130E5BA25B5BA25B5B1201485A90C7FC5A120E120C121C5AA25A5AB8FCA3
C8EAFE00AC4A7E49B6FCA3283E7EBD2D>I<00061403D80780131F01F813FE90B5FC5D5D
5D15C092C7FC14FCEB3FE090C9FCACEB01FE90380FFF8090383E03E090387001F8496C7E
49137E497F90C713800006141FC813C0A216E0150FA316F0A3120C127F7F12FFA416E090
C7121F12FC007015C012780038EC3F80123C6CEC7F00001F14FE6C6C485A6C6C485A3903
F80FE0C6B55A013F90C7FCEB07F8243F7CBC2D>I<EB03FC90381FFF8090387C07E09038
F001F83901E0007C48487F48487F48C7FCED0F80121E16C0003E1407A4123FA26DEB0F80
7F6C6C131F6D140001FC133E6C6C5B9038FF80786C6D5A6CEBF3E06CEBFF806C91C7FC13
3F6D13C06D7F013F13F801787F48486C7E3903E01FFF48486C1380260F800313C048487E
489038007FE0003E143F007E141F007CEC0FF01507481403A31501A46C15E0007C1403A2
007E15C06C14076CEC0F806DEB1F006C6C133ED807F05B3901FC03F86CB512E0011F1380
D903FCC7FC243F7CBC2D>56 D<EB03FCEB1FFF90387E07C09038FC03F048486C7E48486C
7E4848137C000F147E4848137F81003F15805B007F15C0A2151F12FF16E0A516F0A5127F
153FA36C7EA2001F147F120F6C6C13FF6D13DF000313013900F8039F90387E0F1FD91FFE
13E0EB07F090C7FCA2ED3FC0A41680157FD80F801400487E486C13FEA24A5A5D49485AEB
8007391E000FE0001F495A260FC07FC7FC3803FFFE6C13F838003FC0243F7CBC2D>I<12
1EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3121EEA7F80A2EAFFC0A4EA7F80A2EA1E00
0A2779A619>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3121E127FEAFF80A213
C0A4127F121E1200A412011380A3120313005A1206120E120C121C5A1230A20A3979A619
>I<007FB912E0BA12F0A26C18E0CDFCAE007FB912E0BA12F0A26C18E03C167BA147>61
D<EB1FF890B5FC3903E01FC0390F0007F0001EEB03F848EB01FC4814FE140000FE14FF7E
7FA46CC7FC123EC7EA01FEA2EC03FCEC07F815F0EC0FC0EC1F80EC3F00143E5C147814F8
5C13015CA2495AA25CAB91C7FC90C8FCA8EB0780EB1FE0A2497EA46D5AA2EB078020407B
BF2B>63 D<15074B7EA34B7EA34B7EA34B7EA34B7E15E7A2913801C7FC15C3A291380381
FEA34AC67EA3020E6D7EA34A6D7EA34A6D7EA34A6D7EA34A6D7EA349486D7E91B6FCA249
819138800001A249C87EA24982010E157FA2011E82011C153FA2013C820138151FA20178
82170F13FC00034C7ED80FFF4B7EB500F0010FB512F8A33D417DC044>65
D<B712FCEEFF8017F00001903980000FF86C6CC7EA03FE707E701380EF7FC0EF3FE0A2EF
1FF0A218F8A3170F171FA318F0A2EF3FE0177F18C0EFFF804C1300EE03FCEE0FF8EE7FE0
91B6C7FC17E091C7EA07FCEE01FE933800FF80EF7FC0EF3FE0EF1FF018F8170F18FC1707
A218FEA718FC170FA2EF1FF818F0173FEF7FE0EFFFC00403138048486C90380FFE00B85A
17E094C7FC373E7DBD40>I<DB3FF01306912603FFFE130E020F9038FF801E913A3FF007
E03E9139FF8000F8D903FEC7EA7C7ED907F8EC1EFE4948140FD93FE0140749481403495A
91C812014848150012034848167E5B000F173EA24848161EA2123F5B180E127FA3491600
12FFAC127F7F180EA2123FA27F001F171E181C6C7EA20007173C6D16386C6C1678000117
706C6C16F06EEC01E06D6C15C06D6C1403D90FF0EC07806D6CEC1F00D903FE143E902600
FF8013F891393FF007F0020FB512C0020391C7FC9138003FF037427BBF42>I<B712FCEE
FF8017E000019039C0001FF86C6C48EB03FEEE00FF717E717EEF0FE084717E717E170184
717EA21980187F19C0A3F03FE0A519F0AB19E0A5F07FC0A21980A218FF19004D5AA24D5A
6017074D5A4D5AEF7FC04DC7FCEE03FE48486CEB1FF8B85A178004FCC8FC3C3E7DBD45>
I<B912E0A300019038C000016C6C48EB001FEF0FF01703A217011700A31870A41838161C
A41800A2163CA2167C16FC150391B5FCA3EC80031500167C163CA2161CA21807A3180E93
C7FCA4181E181CA2183CA2187CA218F8170117031707171F48486CEB01FFB912F0A3383E
7DBD3E>I<DB3FE0130C912603FFFE131C021F9038FF803C913A7FF00FC07C9139FF0001
F0D903FC90380078FC4948143DD91FE0141F4948140F4948140701FF15034890C8FC4915
01485A000716005B000F177C5B001F173CA2485AA2181C127FA25B95C7FC12FFAB041FB5
12F0127FA26D9139000FFE00EF03FC123FA27F121FA26C7EA212077F12036C7E7F6C7F6D
6C14076D7E6D6C140FD907F8141ED903FEEC3C7C902600FF80EBF83C913A7FF007F01C02
1FB5EAC00C020391C8FC9138003FF03C427BBF47>71 D<B6D8C01FB512F8A3000101E0C7
383FFC0026007F80EC0FF0B3A691B7FCA30280C7120FB3A92601FFE0EC3FFCB6D8C01FB5
12F8A33D3E7DBD44>I<B612F0A3C6EBF000EB3FC0B3B3B2EBFFF0B612F0A31C3E7EBD21>
I<011FB512FCA3D9000713006E5A1401B3B3A6123FEA7F80EAFFC0A44A5A1380D87F005B
007C130700385C003C495A6C495A6C495A2603E07EC7FC3800FFF8EB3FC026407CBD2F>
I<B612F8A3000101E0C9FC38007F80B3B0EF0380A517071800A45FA35FA25F5F5F4C5A16
0748486C133FB8FCA3313E7DBD39>76 D<B500C093383FFFF0A300016D93387FF800D800
7F18E0D977F016EFA3D973F8ED01CFA2D971FCED038FA3D970FEED070FA26E150E80A26E
6C141CA36E6C1438A26E6C1470A36E6C14E0A26E6CEB01C0A36E6CEB0380A36E6CEB0700
A2037F130EA36F6C5AA26F6C5AA36F6C5AA25FED07F0A2923803F9C0A36FB45AA26F90C7
FCA213F8486C147ED807FFEF3FF8B500F8013C011FB512F0A34C3E7DBD53>I<ED7FE091
3807FFFE91391FC03F8091397E0007E04948EB03F8D907F0EB00FE4948147F49486E7E49
486E7E49C86C7E01FE6F7E00018349150300038348486F7EA248486F7EA2001F18804916
7F003F18C0A3007F18E049163FA300FF18F0AC007F18E06D167FA4003F18C0A26C6CEEFF
80A36C6C4B1300A26C6C4B5A00035F6D150700015F6C6C4B5A6D5E6D6C4A5A6D6C4A5A6D
6C4AC7FC6D6C14FED901FCEB03F8D9007FEB0FE091391FC03F80912607FFFEC8FC913800
7FE03C427BBF47>79 D<B712F8EEFF8017E000019039C0003FF86C6C48EB07FCEE01FE70
7EEF7F80EF3FC018E0A2EF1FF0A218F8A818F0A2EF3FE0A218C0EF7F80EFFF004C5AEE07
FCEE3FF091B612C04CC7FC0280C9FCB3A73801FFE0B612C0A3353E7DBD3E>I<B712C016
FCEEFF800001D9C00013E06C6C48EB1FF0EE07FCEE01FE707E84717EA2717EA284A76017
7F606017FF95C7FCEE01FCEE07F8EE1FE0EEFF8091B500FCC8FC16F091388001FCED003F
EE1FC0707E707E83160383160183A383A484A4F0C004190EA28218E0057F131E2601FFE0
161CB600C0EB3FF094381FF83805071370CA3801FFE09438003F803F407DBD43>82
D<D907FC130C90391FFF801C017FEBF03C3901FC03F83A03F0007E7CD807C0EB1FFC4848
130F001F140748C71203003E1401007E1400A2007C157C12FCA2163CA36C151CA27EA26C
6C14007F7FEA3FF8EBFF806C13F86CEBFF806C14F06C14FC6C14FF6C15C0013F14E00107
14F0EB007F020713F89138007FFC150FED07FE15031501ED00FFA200E0157FA3163FA27E
A3163E7E167E6C157C6C15FC6C15F86D13016DEB03F06DEB07E0D8F9FCEB0FC03AF07F80
3F8090391FFFFE00D8E00713F839C0007FC028427BBF33>I<003FB91280A3903AF0007F
E001018090393FC0003F48C7ED1FC0007E1707127C00781703A300701701A548EF00E0A5
C81600B3B14B7E4B7E0107B612FEA33B3D7DBC42>I<B600C090B512F8A3000101E0C700
07130026007F80EC01FC715A1870B3B3A4013F16F06E5DA21701011F5E80010F15036E4A
5A010793C7FC6D6C5C6D6C141E6D6C5C027F14F86E6C485A91390FF00FE00203B5128002
0049C8FCED1FF03D407DBD44>I<B500FE017FB5D88007B5FCA3000301C0010101E0C713
F86C90C849EC3FE07148EC0F807E7215006E143F017F190E84A26D6C60A24D7E6D6C60A2
EFE7F86D6C60A2933801C3FC6E18F001076104037F6E0281140101036104077F17006D6C
4D5AA2040EEB7F806D6C4DC7FCA24CEB3FC0DA7F80160EA24CEB1FE003C0161E023F171C
047814F0DBE070010F133C021F173804F014F84C1307DA0FF05EA2DBF1C0EB03FCDA07F9
5EA2DBFB80EB01FEDA03FF6F5AA293C8FCA26E5FA24B157F020094C8FCA24B81037C153E
A20378151E0338151C58407EBD5D>87 D<003FB712F8A391C7EA1FF013F801E0EC3FE001
80EC7FC090C8FC003EEDFF80A2003C4A1300007C4A5A12784B5A4B5AA200704A5AA24B5A
4B5AA2C8485A4A90C7FCA24A5A4A5AA24A5AA24A5A4A5AA24A5A4A5AA24990C8FCA2495A
4948141CA2495A495AA2495A495A173C495AA24890C8FC485A1778485A484815F8A24848
140116034848140F4848143FED01FFB8FCA32E3E7BBD38>90 D<486C13C0000313010100
1380481303000EEB070048130E0018130C0038131C003013180070133800601330A300E0
1370481360A400CFEB678039FFC07FE001E013F0A3007F133FA2003F131F01C013E0390F
0007801C1C73BE2D>92 D<EB0FF8EBFFFE3903F01F8039078007E0000F6D7E9038E001F8
D81FF07F6E7EA3157F6C5AEA0380C8FCA4EC1FFF0103B5FC90381FF87FEB7F803801FC00
EA07F8EA0FE0485A485AA248C7FCEE038012FEA315FFA3007F5BEC03BF3B3F80071F8700
261FC00E13CF3A07F03C0FFE3A01FFF807FC3A003FC001F0292A7DA82D>97
D<EA01FC12FFA3120712031201B1EC03FC91381FFF8091387C07E09039FDE001F09039FF
C000FC4A137E91C77E49158049141F17C0EE0FE0A217F0A2160717F8AA17F0A2160FA217
E0161F17C06D1580EE3F006D5C6E13FE9039F3C001F89039F1E003F09039E0780FC09026
C03FFFC7FCC7EA07F82D407EBE33>I<49B4FC010F13E090383F00F8017C131E4848131F
4848137F0007ECFF80485A5B121FA24848EB7F00151C007F91C7FCA290C9FC5AAB6C7EA3
003FEC01C07F001F140316806C6C13076C6C14000003140E6C6C131E6C6C137890383F01
F090380FFFC0D901FEC7FC222A7DA828>I<ED01FC15FFA3150715031501B114FF010713
E190381F80F990387E003D49131FD803F81307485A49130348481301121F123F5B127FA2
90C7FCA25AAA7E7FA2123FA26C7E000F14037F000714076C6C497E6C6C497ED8007C0179
13F890383F01F190380FFFC1903A01FE01FC002D407DBE33>I<EB01FE90380FFFC09038
3F03F09038FC01F848486C7E4848137E48487F000F158049131F001F15C04848130FA212
7F16E090C7FCA25AA290B6FCA290C9FCA67EA27F123F16E06C7E1501000F15C06C6C1303
6DEB07806C6C1400C66C131E017E5B90381F80F8903807FFE0010090C7FC232A7EA828>
I<EC1FC0EC7FF8903801F83C903807E07E90380FC0FFEB1FC1EB3F811401137FEC00FE01
FE137C1500AEB6FCA3C648C7FCB3AE487E007F13FFA320407EBF1C>I<167C903903F801
FF903A1FFF078F8090397E0FDE1F9038F803F83803F001A23B07E000FC0600000F6EC7FC
49137E001F147FA8000F147E6D13FE00075C6C6C485AA23901F803E03903FE0FC026071F
FFC8FCEB03F80006CAFC120EA3120FA27F7F6CB512E015FE6C6E7E6C15E06C810003813A
0FC0001FFC48C7EA01FE003E140048157E825A82A46C5D007C153E007E157E6C5D6C6C49
5A6C6C495AD803F0EB0FC0D800FE017FC7FC90383FFFFC010313C0293D7EA82D>I<EA01
FC12FFA3120712031201B1EC01FE913807FFC091381E07E091387803F09138E001F8D9FD
C07F148001FF6D7E91C7FCA25BA25BB3A6486C497EB5D8F87F13FCA32E3F7DBE33>I<EA
01E0EA07F8A2487EA46C5AA2EA01E0C8FCACEA01FC127FA3120712031201B3AC487EB512
F0A3143E7DBD1A>I<1478EB01FEA2EB03FFA4EB01FEA2EB00781400AC147FEB7FFFA313
017F147FB3B3A5123E127F38FF807E14FEA214FCEB81F8EA7F01387C03F0381E07C0380F
FF803801FC00185185BD1C>I<EA01FC12FFA3120712031201B292B51280A392383FFC00
16E0168093C7FC153C5D5D4A5AEC07C04A5A4AC8FC143E147F4A7E13FD9038FFDFC0EC9F
E0140F496C7E01FC7F496C7E1401816E7E81826F7E151F826F7EA282486C14FEB539F07F
FFE0A32B3F7EBE30>I<EA01FC12FFA3120712031201B3B3B1487EB512F8A3153F7DBE1A>
I<2701F801FE14FF00FF902707FFC00313E0913B1E07E00F03F0913B7803F03C01F80007
903BE001F87000FC2603F9C06D487F000101805C01FBD900FF147F91C75B13FF4992C7FC
A2495CB3A6486C496CECFF80B5D8F87FD9FC3F13FEA347287DA74C>I<3901F801FE00FF
903807FFC091381E07E091387803F000079038E001F82603F9C07F0001138001FB6D7E91
C7FC13FF5BA25BB3A6486C497EB5D8F87F13FCA32E287DA733>I<14FF010713E090381F
81F890387E007E01F8131F4848EB0F804848EB07C04848EB03E0000F15F04848EB01F8A2
003F15FCA248C812FEA44815FFA96C15FEA36C6CEB01FCA3001F15F86C6CEB03F0A26C6C
EB07E06C6CEB0FC06C6CEB1F80D8007EEB7E0090383F81FC90380FFFF0010090C7FC282A
7EA82D>I<3901FC03FC00FF90381FFF8091387C0FE09039FDE003F03A07FFC001FC6C49
6C7E6C90C7127F49EC3F805BEE1FC017E0A2EE0FF0A3EE07F8AAEE0FF0A4EE1FE0A2EE3F
C06D1580EE7F007F6E13FE9138C001F89039FDE007F09039FC780FC0DA3FFFC7FCEC07F8
91C9FCAD487EB512F8A32D3A7EA733>I<3901F807E000FFEB1FF8EC787CECE1FE3807F9
C100031381EA01FB1401EC00FC01FF1330491300A35BB3A5487EB512FEA31F287EA724>
114 D<90383FC0603901FFF8E03807C03F381F000F003E1307003C1303127C0078130112
F81400A27E7E7E6D1300EA7FF8EBFFC06C13F86C13FE6C7F6C1480000114C0D8003F13E0
010313F0EB001FEC0FF800E01303A214017E1400A27E15F07E14016C14E06CEB03C09038
80078039F3E01F0038E0FFFC38C01FE01D2A7DA824>I<131CA6133CA4137CA213FCA212
0112031207001FB512C0B6FCA2D801FCC7FCB3A215E0A912009038FE01C0A2EB7F03013F
138090381F8700EB07FEEB01F81B397EB723>I<D801FC14FE00FF147FA3000714030003
140100011400B3A51501A31503120015076DEB06FF017E010E13806D4913FC90381FC078
903807FFE00100903880FE002E297DA733>I<B539E00FFFE0A32707FE000313006C48EB
00FC5E00015D7F00005DA26D13016D5CA26D6C485AA2ECC007011F91C7FCA290380FE00E
A2ECF01E0107131CA26D6C5AA2ECFC7801011370A2ECFEF001005BA2EC7FC0A36E5AA26E
C8FCA3140E2B287EA630>I<B53BC3FFFE03FFF8A3290FFE003FE00013C06C486D48EB3F
806C4817006D010F141E00016F131C15076D163C00004A6C1338A2017F5E4B7E151DD93F
805DED3DFC1538D91FC04A5AED78FE9238707E03D90FE0017F5BEDE03F02F01407010703
87C7FC9138F1C01F02F9148F010315CE9138FB800F02FF14DE6D15FCED00076D5DA24A13
03027E5CA2027C1301023C5C023813003D287EA642>I<B539F01FFFE0A30003D9C00F13
00C690388007F8D97F0013E002805BD93FC05B011F49C7FC90380FE00EECF01E6D6C5A01
035B6D6C5A6E5AEB00FF6E5A6E5A81141F814A7E81147BECF1FC903801E1FEECC0FF0103
7F49486C7ED90F007F011E6D7E013E130F496D7E01FC80486C80000F4A7EB539803FFFF8
A32D277FA630>I<001FB61280A2EBE0000180140049485A001E495A121C4A5A003C495A
141F00385C4A5A147F5D4AC7FCC6485AA2495A495A130F5C495A90393FC00380A2EB7F80
EBFF005A5B484813071207491400485A48485BA248485B4848137F00FF495A90B6FCA221
277EA628>122 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmr12 12 26
/Fk 26 119 df<140C141C1438147014E0EB01C01303EB0780EB0F00A2131E5BA25B13F8
5B12015B1203A2485AA3485AA348C7FCA35AA2123EA2127EA4127CA312FCB3A2127CA312
7EA4123EA2123FA27EA36C7EA36C7EA36C7EA212017F12007F13787FA27F7FA2EB0780EB
03C01301EB00E014701438141C140C166476CA26>40 D<12C07E12707E7E7E120F6C7E6C
7EA26C7E6C7EA21378137C133C133E131E131FA2EB0F80A3EB07C0A3EB03E0A314F0A213
01A214F8A41300A314FCB3A214F8A31301A414F0A21303A214E0A3EB07C0A3EB0F80A3EB
1F00A2131E133E133C137C13785BA2485A485AA2485A48C7FC120E5A5A5A5A5A16647BCA
26>I<1618163C167CA2167816F8A216F01501A216E01503A216C01507A21680150FA2ED
1F00A2151E153EA2153C157CA2157815F8A25D1401A24A5AA25D1407A25D140FA292C7FC
5CA2141E143EA2143C147CA25CA25C1301A25C1303A25C1307A25C130FA291C8FC5BA213
3EA2133C137CA2137813F8A25B1201A25B1203A2485AA25B120FA290C9FC5AA2121E123E
A2123C127CA2127812F8A25A126026647BCA31>47 D<B912F8A3000101C0C7127F6C6C48
EC07FC17011700187C183C181CA284A31806A4180704067FA395C7FCA4160EA2161E163E
16FE91B5FCA3EC8000163E161E160EA21606A319C0A3F0018093C7FCA41803A21900A260
A260A2181EA2183E187EEF01FE170748486C147FB95AA33A447CC342>69
D<B912F0A3000101C0C7127F6C6C48EC0FF817031701170018781838A2181CA3180CA418
0E1806160CA21800A5161CA2163C167CED01FC91B5FCA3EC8001ED007C163C161CA2160C
A793C8FCB08048487EB612F8A337447CC340>I<B612F0A3C6EBF0006D5A6D5AB3B3B3A4
497E497EB612F0A31C447DC323>73 D<003FB912F8A3903BF0001FF8001F01806D481303
003EC7150048187C0078183CA20070181CA30060180CA5481806A5C81600B3B3A54B7EED
7FFE49B77EA33F447DC346>84 D<B600C0010FB5FCA3000101E0C813F026007F80ED1F80
F00F00A21806B3B3A7180E6D6C150CA2181C131F6E1518010F163818306D6C1570606D6C
14016D6C5D6D6CEC0780027F4AC7FC6E6C131EDA1FE0137C913907FC03F00201B55A6E6C
1380DB07FCC8FC40467CC349>I<B60107B500F890380FFFFEA3000301E0D9001F90C813
F06C0180DA0FFCED3FC091C86C48ED1F006C871C0E6D6C6E7E1C0CA26D6C6F5DA36EDA06
FF1538011F1A30A26E020E6D1470010FDB0C7F1560A26E021C7F0107DB183F5DA2856D6C
DA301F4A5AA36D6C4A6C6C49C7FCA36D6C4A6C6C1306A3DB80016E130E027FDA8003140C
A2DBC00380023FDA00015CA203E081021F01066D5CA36E6C486E6C5AA36E6C486E6C5AA3
6F48EC1FE1020360A2DBFE7015F302010160020F90C8FCA2DBFFE015FB6E49EC07FEA36F
486E5AA36FC86C5AA3031E6F5AA4030C16605F467EC364>87 D<EB07FC90383FFF809038
F80FE03903C003F048C66C7E000E6D7ED80FC0137E486C137F6D6D7EA36F7EA26C5AEA03
80C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03FC485A485A485A485A127F5B17
6048C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F13013A1FE00783F13B07F81E03
FF802701FFFC0113003A001FE0007C2B2E7CAC31>97 D<EC7F80903803FFF090380FC07C
90383F000F01FCEB03804848EB01C00003140F4848EB1FE049133F120F485AA2485AED1F
C0007FEC070092C7FCA290C9FC5AAB7E7FA2123F16307F001F15706C6C146016E06C6C14
C06C6C13010001EC03806C6CEB0700013F131E90381FC078903807FFF001001380242E7D
AC2B>99 D<167FED3FFFA315018182B3EC7F80903803FFF090380FC07C90383F000E017E
1307496D5AD803F87F48487F5B000F81485AA2485AA2127FA290C8FC5AAB7E7FA2123FA2
6C7EA2000F5D7F6C6C5B00035C6C6C9038077F806C6C010E13C0013F011C13FE90380FC0
F8903803FFE09026007F0013002F467DC436>I<EB01FE903807FFC090381F03F090387E
00FC49137E48487F485A4848EB1F80000F15C049130F121F484814E01507A2007F15F090
C7FCA25AA390B6FCA290C9FCA67EA27FA2123F16306C7E1670000F15606D14E06C6C14C0
000314016C6CEB03806C6CEB0700013E131E90381F80F8903803FFE0010090C7FC242E7D
AC2B>I<EC0FE0EC7FF8903801F81E903803F03F90390FE07F8090381FC0FF5C133F495A
A2ED7F0001FE131C92C7FCAFB67EA3C648C8FCB3B2486C7E007F13FFA321467EC51E>I<
EA01FC12FFA3120712031201B3EC01FE913807FFC091381E07F091383801F802707FECE0
00D9FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F457DC436
>104 D<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCADEA01FC12FFA3120712031201B3
B0487EB512F8A315437DC21C>I<EA01FC12FFA3120712031201B3A292381FFFE0A36F13
00ED07F816E05E5E030EC7FC5D5D5D5D4A5A4A5A4AC8FC5CEC3F804A7E14FF9038FDCFE0
9038FF8FF01407496C7E01FC7F14016E7E81816F7E82151F6F7E821507826F7E8282486C
491380B5D8F81F13F8A32D457DC433>107 D<EA01FC12FFA3120712031201B3B3B3A548
7EB512F8A315457DC41C>I<D801FC01FFEC1FE000FF010701E0EBFFFC913B0F03F801E0
7F913C3C01FC07803F800007903C7000FE0E001FC0000349D97E1C130F2601FDC0D97F38
804A143001FFDA3FF06D7E91C75BA2495DA3495DB3A8486C4A6C497EB5D8F81FB50003B5
12E0A34B2C7DAB52>I<3901FC01FE00FF903807FFC091381E07F091383801F800070170
7F0003EBE0002601FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FE
A32F2C7DAB36>I<EC7F80903803FFF090380FC0FC90383E001F496D7E496D7E48486D7E
48486D7E48486D7E000F81A24848147E003F157FA290C87E481680A44816C0AA6C1680A2
6D147F003F1600A2001F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C495A
013E49C7FC90381FC0FE903807FFF89038007F802A2E7DAC31>I<3903F803F000FFEB1F
FCEC3C3EEC707F0007EBE0FF3803F9C000015B13FBEC007E153C01FF13005BA45BB3A748
B4FCB512FEA3202C7DAB26>114 D<90383FE0183901FFFC383907E01F78390F0003F800
1E1301481300007C1478127800F81438A21518A27EA27E6C6C13006C7E13FC383FFFE06C
13FC6C13FF6C14C06C14E0C614F0011F13F81300EC0FFC140300C0EB01FE1400157E7E15
3EA27EA36C143C6C147C15786C14F86CEB01F039F38003E039F1F00F8039E07FFE0038C0
0FF01F2E7DAC26>I<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FC
A2C648C7FCB3A4150CAA017E131C017F1318A26D133890381F8030ECC070903807E0E090
3801FFC09038007F001E3E7EBC26>I<D801FC147F00FFEC3FFFA3000714010003800001
81B3A85EA35DA212006D5B017E9038077F80017F010E13C06D011C13FE90380FC0789038
03FFF09026007F8013002F2D7DAB36>I<B539F001FFFCA3000790C7EA7FE06C48EC1F80
00011600160E1200160C017F5CA280013F5CA26E1370011F146080010F5CA2ECF0010107
5CA26D6C48C7FCA26E5A01011306A26D6C5AA214FF6E5AA215B8EC3FB015F06E5AA36E5A
A26E5AA36EC8FC2E2C7EAA33>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmr17 17.28 15
/Fl 15 124 df<120FEA3FC0EA7FE012FF13F0A313F8A2127F123FEA0F381200A71378A2
1370A313F013E0A2120113C012031380120713005A121EA25A5A127012300D28748B24>
44 D<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C0C748B24>46
D<4AB4FC021F13F0027F13FC903901FF01FF903A03F8003F80D90FE0EB0FE049486D7E49
486D7E49C76C7E017E140049157E0001167F49810003178049151F000717C049150F000F
17E0A3001F17F0491507A2003F17F8A54848ED03FCA700FF17FEB3A8007F17FCA56D1507
A3003F17F8A4001F17F06D150FA2000F17E0A36C6CED1FC0A2000317806D153F00011700
6D5D6C6C15FE017E5D017F14016D6C495A6D6C495A6D6C495AD903F8EB3F806DB448B4C7
FC9039007FFFFC021F13F0020190C8FC37607BDD42>48 D<EC01C014031407140F143F14
7FEB03FF130F90B5FCB6FCEBFC7F13F01300C7FCB3B3B3B3A24A7EA2010713FCB812E0A4
2B5E74DD42>I<EC0FFE91387FFFE00103B512F8010F14FE903A1FE00FFF8090263E0001
13E001FC6D6C7ED801F06E7E4848EC0FFC496E7E48486E7E48C81480000E81001E6F13C0
121C003CEE7FE012380078EE3FF01270A3B46CED1FF813E0A27FA66C5A6C5A0006C913F0
CA123FA318E0177FA2EFFFC0A218805E18004C5A16075F4C5A5F161F4C5A4C5A5F4CC7FC
4B5A4B5A5E4B5A4B5A4B5A4B5A4BC8FC157E5D4A5A4A5A4A5A4A5A4A5A4AC9FC143E4A15
385C495A495A49481570495A49C9FC131E5B4916F05B484816E0484815014848150348B8
FCA25A5A5AB912C0A4355E7ADD42>I<913803FF80021F13F891B512FE01036E7E4948C6
13E0D91FE0EB1FF0D93F80EB07FC017EC7EA01FE496E7E48488149ED3F804848ED1FC000
07160F4916E0000F1607A24916F0001F1603A57FA26D150718E07F6C6C150F6D16C07F6C
6CED1F8002C0143F6C6D150002F8147E6C6D5C6C6D495A6E6C485A6D9038C00FE06D9038
F01F80010F6D48C7FC6DEBFEFC0101EBFFF06D5C143F6E13F86E7F4A7F027F6D7E902601
F87F7F49486C13F090260FC00F7F49486C7F90263F000113FF017E6D148049143F48486E
13C048486E13E04848020313F04848809338007FF84848153F003F161F90C9EA0FFC4816
07007E160318FE170100FE16005AA2187EA66C177C007E17FCA2007F17F86C16016D16F0
001F16036D16E06C6C15076C6CED0FC06DED1F806C6CED3F006C6C15FE26007F80495AD9
3FE0EB0FF0D90FFEEB7FE06DB6128001014AC7FCD9003F13F80203138037607BDD42>56
D<4AB47E021F13F0027F13FC49B6FC902607FE007FD90FF0EB3FC04948EB0FE049486D7E
49486D7E49C76C7E484881484814004848157F18804848153F001F17C0A24848151F18E0
A2007F17F049150FA300FF17F8A418FC1707A618FEA2170F127FA46C7E171FA2121F6D15
3F000F163717776C6C15676C6C15E70001ED01C77F6C6CEC03876D6CEB07076D6C130ED9
0FE0133CD907F801F813FC0101B512F06D14C0021F130091C8120FA218F8A418F0171FA2
18E0A2173F18C0A2EF7F80EA07F0486CEDFF00487E4C5A5F16035F4C5A49140F6C484A5A
01804A5A90C8485A6C6C4AC7FC01E0495A6C6CEB07F86CB4EB3FF06C6CB512C0011F91C8
FC010713FC010013E037607BDD42>I<EB03C0EA07FFB5FCA41201EA007FA2133FB3AAEE
7FC0923807FFFC031F13FF92397F007FC003F8EB0FF0DAC3E06D7EDAC780EB01FC02CFC8
7E02DE157F02FC6F7E4A824A6F7E180F4A82727E5C727EA2851801A285A3841A80AD1A00
60A461180361A21807616E5E180F6E4B5A6E5E02B8153F023C4B5A6E4BC7FC6E4A5A9026
3E0780495A6E6CEB0FF090263C01F0495ADA007EEBFF806FB448C8FC0138010F13F890C8
138041657DE349>98 D<EC03FE91381FFFE091B512F8903901FE03FE903A07F0007F8049
486D7ED93FC06D7E49C76C7E496E7E49140348488148481401000782491400000F828348
5A1880123F49153FA2007F17C0A35BA212FF90B8FCA30180CAFCA9127F7FA3123FA27F12
1FEF01C06C7E17036C6C1680A26C6C15070001EE0F006D150E6C6C151E6D6C5C6D6C5C6D
6C5CD907F0EB03E0D903FC495A902700FF803FC7FC91383FFFFC020F13F0020113803241
7CBF3A>101 D<D903C0D9FFC0EC07FED807FF010301F891381FFFC0B5010F01FE027F13
F0923D3F00FF8001F807FC0378903B3FC003C001FEDAC1E090261FE00FC77E0001D9C3C0
90260FF01E6E7ED8007F49902607F81C6E7E02C7C75CD93FCE6E6C486E7E02CC166002DC
16E002D85E02F8DA01FF6F7E4A5EA24A93C8FCA44A5DB3B3496C4A6C4B7E496C4A6D4A7E
B6D8F007B6D8803FB512FCA4663F7CBE6F>109 D<D903C0EB7FE0D807FF903803FFFCB5
010F13FFDB3F0013C00378EB1FE04B6D7E0001D9C1C06D7E27007FC3808002C7C71203D9
3FCE81170114DC14D802F86E7E5CA35CA35CB3B3496C4A7F496C4A7FB6D8F003B612C0A4
423F7DBE49>I<EDFF80020F13F8023F13FE9139FF007F80D903FCEB1FE0D907F0EB07F0
D90FC0EB01F8D93F80EB00FE49C8127F017E81496F7E48486F7E00038349150700078348
486F7EA2001F83491501A2003F83A348486F7EA400FF1880AC007F1800A26D5DA2003F5F
A36C6C4B5AA36C6C4B5A00075FA26C6C4B5A6C6C4B5AA26C6C4B5A017F4BC7FC6D6C14FE
6D6C495AD90FF0EB07F8D903FCEB1FE0D900FFEB7F806EB5C8FC020F13F8020113C03941
7CBF42>I<9039078003F8D807FFEB0FFFB5013F13C092387C0FE0913881F01F9238E03F
F00001EB838039007F8700148FEB3F8E029CEB1FE0EE0FC00298EB030002B890C7FCA214
B014F0A25CA55CB3B0497EEBFFF8B612FCA42C3F7CBE33>114 D<B66C49B512E0A40001
01F8C8387FFE0026007FE0ED1FF819E0013F705A61131F6E93C7FC130F180E6E151E0107
161C8001035EA26E157801011670806D5EA26F1301027F5DA26E6C495AA26F1307021F92
C8FCA26E6C130EA26F131E0207141CA26F133C020314388102015CA26F13F06E5C168092
387F81C0A216C3033F5B16E3DB1FE7C9FCA216FF6F5AA26F5AA36F5AA26F5AA36F5A433F
7FBD46>118 D<BB12E0A3430381A742>123 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmbx12 17.28 20
/Fm 20 117 df<167C16FC1501ED07F0150FED1FE0ED3FC0ED7F80EDFF004A5A14034A5A
4A5A5D141F4A5A147F4A5A5D5B4990C7FCA2495A130F5C131FA2495AA2495AA213FF5C5A
A25C5AA25A5CA25AA291C8FCA25AA35B123FA5127F5BA612FFB3A4127FA67F123FA5121F
7FA37EA280A27EA2807EA27E80A27E80137FA26D7EA26D7EA2130F8013076D7EA26D7F7F
816E7E143F6E7E140F816E7E6E7E14016E7EED7F80ED3FC0ED1FE0ED0FF01507ED01FC15
00167C269071EB3F>40 D<127812FC127E6C7E7F6C7E6C7E6C7E6C7E6C7E7F6C7F6D7E13
3F806D7E806D7E1307806D7EA26D7F817F81A26E7EA26E7EA281141F81A2140F81A21680
80A216C0A280A216E0A38016F0A516F880A616FCB3A416F8A65C16F0A516E05CA316C0A2
5CA21680A25C1600A25D141FA25D143F5DA24A5AA24A5AA25D5B5D4990C7FCA2495A5C13
0F495A5C495A5C137F495A4890C8FC5B485A485A485A485A485A5B007EC9FC5A12782690
77EB3F>I<ED0FFF4AB512F8020F14FF023F15C091B712F049D9FC037F0107D9F00013FE
4901C0EB3FFF4990C7000F7F49486E7F017F8349486E7F4A80488448496E7FA248844A15
7F4884A3481980A34819C04A81A34819E0A7B518F0B3A86C19E0A76C19C0A26E5DA26C19
80A36C1900A36C6D4B5AA26C60A26C6D4A5B6C606E5C6D6C4A5B6D6C4A5B6D6D495B6D6D
4990C7FC6D01F0EBFFFE6DD9FC035B010090B612F0023F15C0020F92C8FC020114F8DA00
1F138044607ADD51>48 D<913801FFF8021FEBFFC091B612F8010315FF010F16C0013F82
90267FFC0114F89027FFE0003F7F4890C7000F7F48486E7FD807F86E148048486E14C048
486E14E048486F13F001FC17F8486C816D17FC6E80B56C16FE8380A219FFA283A36C5BA2
6C5B6C90C8FCD807FC5DEA01F0CA14FEA34D13FCA219F85F19F04D13E0A294B512C01980
4C14004C5B604C5B4C5B604C13804C90C7FC4C5A4C5A4B13F05F4B13804B90C8FC4B5AED
1FF84B5A4B5A4B48143F4A5B4A48C8FC4A5A4A48157E4A5A4A5AEC7F8092C9FC02FE16FE
495A495A4948ED01FCD90FC0150749B8FC5B5B90B9FC5A4818F85A5A5A5A5ABAFCA219F0
A4405E78DD51>50 D<ED3FFF0207B512F0023F14FC91B7FC010316C049D9F8077F49D9C0
0113F8013F496C6C7E4948C76C7E49486E7E4884484980717F4849825A48707F855A5C85
5A8583A2B583A41A80A71AC0A35F7EA46C5EA27E6E5C7EA26C5E6C7F6C5E6C6D147D6D6C
14FD6D6CEB01F96D90388003F16D9038F01FE16D90B500C11480010115816D6C1401021F
13FC020113E091C8FC1A00A25FA261A3D9FF805E487F486D4A5B487FA2486D5E5F61615F
614A4A90C7FC4D5A6C5B4A4A5A4A01035BD803FCC7485B6C6C021F13C0D9FFC0017F5B6C
D9F803B5C8FC6DB612FC6D5D010F15E0010392C9FC010014F8020F1380426079DD51>57
D<B700C0083FB612F070627097B7FCA37061D800010DF8C7FC70F103EFA202FD6DF107CF
A202FC6DF10F8FA36F6DF01F0FA26F6D183EA26F6D187CA26F6D18F8A36F6DEF01F0A26F
6DEF03E0A26F6DEF07C0A26F6DEF0F80A3706DEE1F00A2706D163EA2706D5EA2706D5EA3
706D4B5AA2706D4B5AA2706D4B5AA2706D4B5AA3716D4AC7FCA2716D143EA2716D5CA271
6D5CA3716D495AA2716D495AA2716D495AA2716D495AA3726D48C8FCA272EBC03EA2726D
5AA2726D5AA372EBF9F0A272EBFFE0A2725CA2725CA37390C9FCA2735AA2735A90381FFF
C0B700F86E480207B812F0A3735AA2735A8C627AE199>77 D<BB7E1AFCF2FFC01BF81BFE
757ED800010280C7001F80070114F0736C7F081F7F747F747F7414807414C0A27414E0A2
1DF0A27513F8A41DFCA91DF8A498B512F0A21DE0A25014C01D8062501400505B505B087F
5B4FB512E0071F5C93B9C7FC1BFC1BF01B8008F0C8FC04C0CCFCB3B3A2B97EA65E627AE1
6E>80 D<001FBEFCA64849C79126E0000F148002E0180091C8171F498601F81A03498649
86A2491B7FA2491B3F007F1DC090C9181FA4007E1C0FA600FE1DE0481C07A5CA95C7FCB3
B3B3A3021FBAFCA663617AE070>84 D<913803FFFE027FEBFFF00103B612FE010F6F7E49
16E090273FFE001F7FD97FE001077FD9FFF801017F486D6D7F717E486D6E7F85717FA271
7FA36C496E7FA26C5B6D5AEB1FC090C9FCA74BB6FC157F0207B7FC147F49B61207010F14
C0013FEBFE004913F048B512C04891C7FC485B4813F85A5C485B5A5CA2B55AA45FA25F80
6C5E806C047D7F6EEB01F96C6DD903F1EBFF806C01FED90FE114FF6C9027FFC07FC01580
000191B5487E6C6C4B7E011F02FC130F010302F001011400D9001F90CBFC49437CC14E>
97 D<903807FF80B6FCA6C6FC7F7FB3A8EFFFF8040FEBFF80047F14F00381B612FC0387
15FF038F010014C0DBBFF0011F7FDBFFC001077F93C76C7F4B02007F03F8824B6F7E4B6F
13804B17C0851BE0A27313F0A21BF8A37313FCA41BFEAE1BFCA44F13F8A31BF0A24F13E0
A24F13C06F17804F1300816F4B5A6F4A5B4AB402075B4A6C6C495B9126F83FE0013F13C0
9127F00FFC03B55A4A6CB648C7FCDAC00115F84A6C15E091C7001F91C8FC90C8000313E0
4F657BE35A>I<92380FFFF04AB67E020F15F0023F15FC91B77E01039039FE001FFF4901
F8010113804901E0010713C04901804913E0017F90C7FC49484A13F0A2485B485B5A5C5A
7113E0485B7113C048701380943800FE0095C7FC485BA4B5FCAE7EA280A27EA2806C18FC
A26C6D150119F87E6C6D15036EED07F06C18E06C6D150F6D6DEC1FC06D01E0EC7F806D6D
ECFF00010701FCEB03FE6D9039FFC03FFC010091B512F0023F5D020F1580020102FCC7FC
DA000F13C03E437BC148>I<92380FFFC04AB512FC020FECFF80023F15E091B712F80103
D9FE037F499039F0007FFF011F01C0011F7F49496D7F4990C76C7F49486E7F4849804884
4A804884485B727E5A5C48717EA35A5C721380A2B5FCA391B9FCA41A0002C0CBFCA67EA3
80A27EA27E6E160FF11F806C183F6C7FF17F006C7F6C6D16FE6C17016D6C4B5A6D6D4A5A
6D01E04A5A6D6DEC3FE0010301FC49B45A6D9026FFC01F90C7FC6D6C90B55A021F15F802
0715E0020092C8FC030713F041437CC14A>101 D<F107F8DB7FFEEC3FFE020FB5D8F001
B5FC027FDAFE03148049B7128F49DCDFFD13C0010FD9F00FEBFFC149D9800114014990C7
EBFC0349486E6C7E4948EC3FFF48496E018113800780130048F0C03E97C7FC48496E7FA3
4884A96C60A36C6D4A5BA26C60A26C6D4A90C8FC6D6C4A5A6D6C4A5A6D6D485BDBF00F5B
4990B612C060D97C7F4AC9FCD9FC0F14F09126007FFECAFC92CCFC1201A47FA27F8014F0
91B77E18FE6CEFFFC019F06D17FC19FF6D846D846D846D84013F8490BAFC0003854801E0
C712014890C9000F7F484816014848EE007F4848717E8512FF5B85A56D5F007F616D173F
003F616D177F6C6C4D5A6C01C003035B6C6D4B5B6C01F8031F5BC601FF92B5C7FC6D01F8
011F5B011F90B712F8010717E0010094C8FC020F15F0DA003F01FCC9FC4A607CC151>
103 D<903807FF80B6FCA6C6FC7F7FB3B3B3B3ADB712E0A623647BE32C>108
D<902607FF80D91FFFEEFFF8B691B500F00207EBFF80040702FC023F14E0041F02FF91B6
12F84C6F488193267FE07F6D4801037F922781FE001F9027E00FF0007FC6DA83F86D9026
F01FC06D7F6DD987F06D4A487F6DD98FC0DBF87EC7804C6D027C80039FC76E488203BEEE
FDF003BC6E4A8003FC04FF834B5FA24B5FA24B94C8FCA44B5EB3B2B7D8F007B7D8803FB6
12FCA67E417BC087>I<902607FF80EB1FFFB691B512F0040714FC041F14FF4C8193267F
E07F7F922781FE001F7FC6DA83F86D7F6DD987F07F6DD98FC0814C7F039FC78015BE03BC
8003FC825DA25DA25DA45DB3B2B7D8F007B71280A651417BC05A>I<923807FFE092B6FC
020715E0021F15F8027F15FE494848C66C6C7E010701F0010F13E04901C001037F49496D
7F4990C87F49486F7E49486F7E48496F13804819C04A814819E048496F13F0A24819F8A3
48496F13FCA34819FEA4B518FFAD6C19FEA46C6D4B13FCA36C19F8A26C6D4B13F0A26C19
E06C6D4B13C0A26C6D4B13806C6D4B13006D6C4B5A6D6D495B6D6D495B010701F0010F13
E06D01FE017F5B010090B7C7FC023F15FC020715E0020092C8FC030713E048437CC151>
I<D90FFFEB0FFCB690383FFF8093B512E04B14F04B14F8923907FC7FFC92390FE0FFFEC6
EC1F806DD93F0113FF6D133E157E157C15F8A215F07013FEA24BEB7FFCEF3FF8EF0FE04B
90C7FCA55DB3B0B712F8A638417BC042>114 D<913A3FFF8007800107B5EAF81F011FEC
FE7F017F91B5FC48B8FC48EBE0014890C7121FD80FFC1407D81FF0801600485A007F167F
49153FA212FF171FA27F7F7F6D92C7FC13FF14E014FF6C14F8EDFFC06C15FC16FF6C16C0
6C16F06C826C826C826C82013F1680010F16C01303D9007F15E0020315F0EC001F150004
1F13F81607007C150100FC81177F6C163FA2171F7EA26D16F0A27F173F6D16E06D157F6D
16C001FEEDFF806D0203130002C0EB0FFE02FCEB7FFC01DFB65A010F5DD8FE0315C026F8
007F49C7FC48010F13E035437BC140>I<EC07E0A6140FA5141FA3143FA2147FA214FF5B
A25B5B5B5B137F48B5FC000F91B512FEB8FCA5D8001F01E0C8FCB3AFEF0FC0AC171F6D6D
1480A2173F6D16006F5B6D6D137E6D6D5B6DEBFF836EEBFFF86E5C020F14C002035C9126
003FFCC7FC325C7DDA3F>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 636 763 a Fm(T)-13 b(en)l(tamen)52 b(Pro)t(cesalgebra)h
(\(2M920\))953 946 y Fl(28)43 b(no)l(v)l(em)l(b)t(er)h(2002,)e(9.00)g
({12.00)1087 1276 y Fk(F)-8 b(aculteit)30 b(Wiskunde)k(en)f
(Informatica)924 1393 y(T)-8 b(ec)m(hnisc)m(he)35 b(Univ)m(ersiteit)d
(Eindho)m(v)m(en)i(\(TU/e\))270 1801 y Fj(Dit)g(ten)m(tamen)g(is)f(een)
h(op)s(en)f(b)s(o)s(ek)g(ten)m(tamen.)52 b(Dat)35 b(wil)d(zeggen)j(dat)
f(het)g(uitgedeelde)270 1914 y(materiaal)e(\\Algebra)g(of)h(Comm)m
(unicating)e(Pro)s(cesses")h(v)-5 b(an)32 b(J.C.M.)h(Baeten,)h(T.)e
(Bas-)270 2027 y(ten)g(en)g(M.A.)i(Reniers)d(\(ho)s(ofdstukk)m(en)h
(tot)h(en)f(met)h(9\))g(gebruikt)e(mag)i(w)m(orden.)46
b(Aan-)270 2140 y(vullende)35 b(aan)m(tek)m(eningen)k(alsmede)e(aan)m
(tek)m(eningen)i(in)d(het)i(man)m(uscript)e(anders)h(dan)270
2253 y(v)m(erb)s(eteringen)28 b(v)-5 b(an)29 b(fouten)g(zijn)f(niet)p
1457 2268 152 4 v 29 w(to)s(egestaan.)42 b(\(Het)31 b(is)d(o)s(ok)h(to)
s(egestaan)i(het)f(b)s(o)s(ek)270 2366 y(\\Pro)s(cess)22
b(Algebra")g(v)-5 b(an)21 b(Baeten)i(en)e(W)-8 b(eijland)21
b(te)h(gebruik)m(en,)h(o)s(ok)f(zonder)f(aan)m(tek)m(enin-)270
2479 y(gen.\))270 2670 y(Dit)30 b(ten)m(tamen)h(b)s(estaat)f(uit)f
(vijf)g(vragen.)41 b(De)30 b(maximale)g(w)m(aardering)f(v)m(o)s(or)h
(de)g(vragen)270 2783 y(\(en)h(de)f(onderdelen)f(w)m(aaruit)h(ze)h(b)s
(estaan\))g(is)e(als)h(v)m(olgt:)p 1046 2983 1569 4 v
1046 3000 V 1044 3113 4 113 v 1061 3113 V 1144 3079 a
Fi(V)-9 b(raag)p 1492 3113 V 1509 3113 V 149 w Fj(1\(i\))100
b(1\(ii\))f(1\(iii\))g(1\(iv\))p 2596 3113 V 2613 3113
V 1046 3116 1569 4 v 1044 3229 4 113 v 1061 3229 V 1112
3195 a Fi(Pun)m(ten)p 1492 3229 V 1509 3229 V 165 w Fj(5)208
b(5)234 b(5)246 b(5)p 2596 3229 V 2613 3229 V 1046 3232
1569 4 v 1046 3249 V 1044 3362 4 113 v 1061 3362 V 1144
3328 a Fi(V)-9 b(raag)p 1492 3362 V 1509 3362 V 149 w
Fj(2\(i\))100 b(2\(ii\))f(2\(iii\))p 2596 3362 V 2613
3362 V 1046 3365 1569 4 v 1044 3478 4 113 v 1061 3478
V 1112 3444 a Fi(Pun)m(ten)p 1492 3478 V 1509 3478 V
165 w Fj(5)208 b(5)234 b(5)p 2596 3478 V 2613 3478 V
1046 3481 1569 4 v 1046 3498 V 1044 3611 4 113 v 1061
3611 V 1144 3577 a Fi(V)-9 b(raag)p 1492 3611 V 1509
3611 V 149 w Fj(3\(i\))100 b(3\(ii\))f(3\(iii\))g(3\(iv\))p
2596 3611 V 2613 3611 V 1046 3614 1569 4 v 1044 3727
4 113 v 1061 3727 V 1112 3693 a Fi(Pun)m(ten)p 1492 3727
V 1509 3727 V 165 w Fj(5)208 b(5)234 b(5)246 b(5)p 2596
3727 V 2613 3727 V 1046 3730 1569 4 v 1046 3747 V 1044
3860 4 113 v 1061 3860 V 1144 3826 a Fi(V)-9 b(raag)p
1492 3860 V 1509 3860 V 149 w Fj(4\(i\))100 b(4\(ii\))f(4\(iii\))g
(4\(iv\))p 2596 3860 V 2613 3860 V 1046 3863 1569 4 v
1044 3976 4 113 v 1061 3976 V 1112 3942 a Fi(Pun)m(ten)p
1492 3976 V 1509 3976 V 165 w Fj(5)208 b(5)k(10)200 b(10)p
2596 3976 V 2613 3976 V 1046 3979 1569 4 v 1046 3996
V 1044 4109 4 113 v 1061 4109 V 1144 4075 a Fi(V)-9 b(raag)p
1492 4109 V 1509 4109 V 149 w Fj(5\(i\))100 b(5\(ii\))f(5\(iii\))p
2596 4109 V 2613 4109 V 1046 4112 1569 4 v 1044 4225
4 113 v 1061 4225 V 1112 4191 a Fi(Pun)m(ten)p 1492 4225
V 1509 4225 V 165 w Fj(5)208 b(5)234 b(5)p 2596 4225
V 2613 4225 V 1046 4229 1569 4 v 1046 4245 V 270 4483
a(Het)42 b(eindcijfer)d(k)m(om)m(t)k(tot)f(stand)f(do)s(or)g(het)h(b)s
(ehaalde)e(aan)m(tal)i(pun)m(ten)f(do)s(or)f(tien)h(te)270
4595 y(delen)c(en)h(af)g(te)g(ronden.)63 b(Zij)36 b(die)h(de)h(h)m
(uisw)m(erk)m(opga)m(v)m(en)h(naar)f(tevredenheid)e(v)-5
b(an)38 b(de)270 4708 y(instructeur)44 b(hebb)s(en)g(gemaakt,)51
b(scoren)46 b(zonder)f(w)m(erk)h(20)g(pun)m(ten)f(v)m(o)s(or)h(opga)m
(v)m(e)h(1.)270 4821 y(Sc)m(hrijf)32 b(de)j(b)s(ewijzen)d(\(indien)g(v)
-5 b(an)34 b(to)s(epassing\))g(nau)m(wk)m(eurig)g(op.)52
b(Bij)33 b(afronding)g(v)-5 b(an)270 4934 y(u)m(w)30
b(cijfer)f(w)m(ordt)i(hierop)e(gelet.)270 5141 y Fi(Opga)m(v)m(e)35
b(1)46 b Fj(Laat)35 b Fh(a;)15 b(b;)g(c)34 b Fg(2)e Fh(A)j
Fj(v)m(ersc)m(hillende)e(atomaire)i(acties)h(zijn.)52
b(Gegev)m(en)37 b(is)d(dat)270 5254 y Fh(\015)5 b Fj(\()p
Fh(a;)15 b(b)p Fj(\))43 b(=)e Fh(c)p Fj(.)70 b(Er)39
b(zijn)g(geen)i(andere)f(comm)m(unicaties)f(gede\014nieerd.)69
b(Geef)41 b(een)f(nor-)270 5367 y(maalv)m(orm)22 b(\(i.e.)h(een)f
(gesloten)g(BSP-term\))h(v)m(o)s(or)f(de)g(v)m(olgende)g(gesloten)h
(TCP)3014 5381 y Ff(\034)3056 5367 y Fj(-termen.)270
5479 y(W)-8 b(erk)37 b(daarbij)e(de)h(ev)m(en)m(tuele)i
Fh(\034)10 b Fj('s)36 b(zo)m(v)m(eel)j(mogelijk)c(w)m(eg.)60
b(Alleen)36 b(een)g(an)m(t)m(w)m(o)s(ord)i(v)m(ol-)270
5592 y(staat.)1807 5841 y(1)p eop
%%Page: 2 2
2 1 bop 451 399 a Fj(\(i\).)45 b(\()p Fh(a:\017)21 b
Fj(+)f Fh(a:b:\017)p Fj(\))26 b Fg(k)g Fh(c:\017)p Fj(;)425
583 y(\(ii\).)45 b Fh(@)665 602 y Fe(f)p Ff(a;b)p Fe(g)828
583 y Fj(\()p Fh(a:\017)25 b Fg(k)h Fh(b:\017)f Fg(k)h
Fh(b:\017)p Fj(\);)400 768 y(\(iii\).)44 b Fh(\034)657
787 y Fe(f)p Ff(a)p Fe(g)769 768 y Fj(\()p Fh(a:b:\017)26
b Fg(k)g Fh(a:b:\017)p Fj(\);)403 953 y(\(iv\).)45 b
Fh(\031)669 967 y Fd(2)709 953 y Fj(\()p Fh(a:b:\016)30
b Fg(k)25 b Fh(\034)5 b(:\016)s Fj(\).)390 1313 y Fi(Opga)m(v)m(e)35
b(2)46 b Fj(Onderzo)s(ek)31 b(v)m(o)s(or)i(de)f(v)m(olgende)h(paren)f
(pro)s(cesgrafen)g(of)h(ze)g(rb-bisimilair)390 1426 y(zijn.)40
b(Zo)30 b(ja,)h(construeer)f(dan)g(een)g(rb-bisim)m(ulatie;)e(zo)j
(nee,)g(leg)f(uit)g(w)m(aarom)h(niet.)451 1803 y(\(i\).)617
3126 y
 tx@Dict begin tx@NodeDict begin {0.0 142.26372 } false /N@S1 10 {InitPnode
} NewNode end end
 617 3126 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 113.81097 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
617 3126 a
 tx@Dict begin tx@NodeDict begin {0.0 113.81097 5.69046 } false /N@N1
11 {InitCnode } NewNode end end
 617 3126 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 56.90549 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
617 3126 a
 tx@Dict begin tx@NodeDict begin {0.0 56.90549 5.69046 } false /N@N2
11 {InitCnode } NewNode end end
 617 3126 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  56.90549 56.90549 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
617 3126 a
 tx@Dict begin tx@NodeDict begin {56.90549 56.90549 5.69046 } false
/N@N3 11 {InitCnode } NewNode end end
 617 3126 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 0.0 5.69046 .5 CLW
mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial
617 3126 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 5.69046 } false /N@E1 11
{InitCnode } NewNode end end
 617 3126 a 617 3126 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@S1 /N@N1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 617 3126 a 617 3126
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N1 /N@N2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 617 3126 a 617 3126 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617 3126 a 617 3126 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.78806 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 3126
a 593 3146 a Fh(a)617 3126 y
 tx@Dict begin PutEnd  end
 617 3126 a 617 3126 a
 tx@Dict begin PutEnd  end
 617
3126 a 617 3126 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N1 /N@N3 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 617 3126 a 617 3126 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617 3126 a 617
3126 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 4.69937 7.60416
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 3126 a 597 3158 a Fh(b)617 3126 y
 tx@Dict begin PutEnd  end
 617 3126
a 617 3126 a
 tx@Dict begin PutEnd  end
 617 3126 a 617 3126 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N2 /N@N3 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 617 3126 a 617 3126
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617 3126 a 617 3126 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 6.02632 4.71457
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 3126 a 592 3146 a Fh(\034)617
3126 y
 tx@Dict begin PutEnd  end
 617 3126 a 617 3126 a
 tx@Dict begin PutEnd  end
 617 3126 a 617 3126 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N2 /N@E1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 617
3126 a 617 3126 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617 3126 a 617 3126 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.69933 7.60416
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 3126 a 593
3158 a Fh(d)617 3126 y
 tx@Dict begin PutEnd  end
 617 3126 a 617 3126 a
 tx@Dict begin PutEnd  end
 617 3126
a 617 3126 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N3 /N@E1 InitNC { /AngleA 210.  def /AngleB 60.  def 0.67  0.67
 NCCurve  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 617 3126 a 617 3126 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617 3126 a 617 3126
a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 4.73868 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 3126 a 597 3146 a Fh(c)617 3126 y
 tx@Dict begin PutEnd  end
 617 3126 a 617
3126 a
 tx@Dict begin PutEnd  end
 617 3126 a 617 3126 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N3 /N@E1 InitNC { /AngleA 240.  def /AngleB 30.  def 0.67  0.67
 NCCurve  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 617 3126 a 617 3126 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617
3126 a 617 3126 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.69933 7.60416
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 3126 a 593 3158 a Fh(d)617 3126
y
 tx@Dict begin PutEnd  end
 617 3126 a 617 3126 a
 tx@Dict begin PutEnd  end
 617 3126 a 617 3126 a
 tx@Dict begin tx@NodeDict begin {142.26372 142.26372 } false /N@S2
10 {InitPnode } NewNode end end
 617 3126
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  142.26372 113.81097
5.69046 .5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore end
 
@endspecial 617 3126 a
 tx@Dict begin tx@NodeDict begin {142.26372 113.81097 5.69046 } false
/N@N4 11 {InitCnode } NewNode end end
 617
3126 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  142.26372 56.90549 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 617 3126
a
 tx@Dict begin tx@NodeDict begin {142.26372 56.90549 5.69046 } false
/N@N5 11 {InitCnode } NewNode end end
 617 3126 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  199.1692 56.90549 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 617
3126 a
 tx@Dict begin tx@NodeDict begin {199.1692 56.90549 5.69046 } false
/N@N6 11 {InitCnode } NewNode end end
 617 3126 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  142.26372 0.0 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
617 3126 a
 tx@Dict begin tx@NodeDict begin {142.26372 0.0 5.69046 } false /N@E2
11 {InitCnode } NewNode end end
 617 3126 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  199.1692 0.0 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
617 3126 a
 tx@Dict begin tx@NodeDict begin {199.1692 0.0 5.69046 } false /N@E3
11 {InitCnode } NewNode end end
 617 3126 a 617 3126 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@S2 /N@N4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 617 3126 a 617 3126
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N4 /N@N5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 617 3126 a 617 3126 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617 3126 a 617 3126 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.78806 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 3126
a 593 3146 a Fh(a)617 3126 y
 tx@Dict begin PutEnd  end
 617 3126 a 617 3126 a
 tx@Dict begin PutEnd  end
 617
3126 a 617 3126 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N4 /N@N6 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 617 3126 a 617 3126 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617 3126 a 617
3126 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 4.69937 7.60416
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 3126 a 597 3158 a Fh(b)617 3126 y
 tx@Dict begin PutEnd  end
 617 3126
a 617 3126 a
 tx@Dict begin PutEnd  end
 617 3126 a 617 3126 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N5 /N@E2 InitNC { /AngleA 240.  def /AngleB 120.  def 0.67 
0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 617 3126 a 617 3126
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617 3126 a 617 3126 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 4.73868 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 3126 a 597 3146 a Fh(c)617
3126 y
 tx@Dict begin PutEnd  end
 617 3126 a 617 3126 a
 tx@Dict begin PutEnd  end
 617 3126 a 617 3126 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N5 /N@E2 InitNC { /AngleA 300.  def /AngleB 60.  def 0.67  0.67
 NCCurve  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 617
3126 a 617 3126 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617 3126 a 617 3126 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.69933 7.60416
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 3126 a 593
3158 a Fh(d)617 3126 y
 tx@Dict begin PutEnd  end
 617 3126 a 617 3126 a
 tx@Dict begin PutEnd  end
 617 3126
a 617 3126 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N6 /N@E3 InitNC { /AngleA 240.  def /AngleB 120.  def 0.67 
0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 617 3126 a 617 3126 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617 3126 a 617 3126
a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 4.73868 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 3126 a 597 3146 a Fh(c)617 3126 y
 tx@Dict begin PutEnd  end
 617 3126 a 617
3126 a
 tx@Dict begin PutEnd  end
 617 3126 a 617 3126 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N6 /N@E3 InitNC { /AngleA 300.  def /AngleB 60.  def 0.67  0.67
 NCCurve  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 617 3126 a 617 3126 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617
3126 a 617 3126 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.69933 7.60416
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 3126 a 593 3158 a Fh(d)617 3126
y
 tx@Dict begin PutEnd  end
 617 3126 a 617 3126 a
 tx@Dict begin PutEnd  end
 617 3126 a 425 3698 a Fj(\(ii\).)617
5021 y
 tx@Dict begin tx@NodeDict begin {0.0 142.26372 } false /N@S1 10 {InitPnode
} NewNode end end
 617 5021 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 113.81097 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
617 5021 a
 tx@Dict begin tx@NodeDict begin {0.0 113.81097 5.69046 } false /N@N1
11 {InitCnode } NewNode end end
 617 5021 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 56.90549 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
617 5021 a
 tx@Dict begin tx@NodeDict begin {0.0 56.90549 5.69046 } false /N@N2
11 {InitCnode } NewNode end end
 617 5021 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  56.90549 56.90549 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
617 5021 a
 tx@Dict begin tx@NodeDict begin {56.90549 56.90549 5.69046 } false
/N@N3 11 {InitCnode } NewNode end end
 617 5021 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 0.0 5.69046 .5 CLW
mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial
617 5021 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 5.69046 } false /N@E1 11
{InitCnode } NewNode end end
 617 5021 a 617 5021 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@S1 /N@N1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 617 5021 a 617 5021
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N1 /N@N2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 617 5021 a 617 5021 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617 5021 a 617 5021 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.78806 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 5021
a 593 5040 a Fh(a)617 5021 y
 tx@Dict begin PutEnd  end
 617 5021 a 617 5021 a
 tx@Dict begin PutEnd  end
 617
5021 a 617 5021 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N2 /N@N3 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 617 5021 a 617 5021 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617 5021 a 617
5021 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 6.02632 4.71457
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 5021 a 592 5040 a Fh(\034)617 5021 y
 tx@Dict begin PutEnd  end
 617 5021
a 617 5021 a
 tx@Dict begin PutEnd  end
 617 5021 a 617 5021 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N2 /N@E1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 617 5021 a 617 5021
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617 5021 a 617 5021 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 4.73868 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 5021 a 597 5040 a Fh(c)617
5021 y
 tx@Dict begin PutEnd  end
 617 5021 a 617 5021 a
 tx@Dict begin PutEnd  end
 617 5021 a 617 5021 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N3 /N@E1 InitNC { /AngleA 210.  def /AngleB 60.  def 0.67  0.67
 NCCurve  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 617
5021 a 617 5021 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617 5021 a 617 5021 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 4.73868 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 5021 a 597
5040 a Fh(c)617 5021 y
 tx@Dict begin PutEnd  end
 617 5021 a 617 5021 a
 tx@Dict begin PutEnd  end
 617 5021
a 617 5021 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N3 /N@E1 InitNC { /AngleA 240.  def /AngleB 30.  def 0.67  0.67
 NCCurve  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 617 5021 a 617 5021 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617 5021 a 617 5021
a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.78806 4.71457
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 5021 a 593 5040 a Fh(a)617 5021 y
 tx@Dict begin PutEnd  end
 617 5021 a 617
5021 a
 tx@Dict begin PutEnd  end
 617 5021 a 617 5021 a
 tx@Dict begin tx@NodeDict begin {142.26372 142.26372 } false /N@S2
10 {InitPnode } NewNode end end
 617 5021 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  142.26372 113.81097
5.69046 .5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore end
 
@endspecial 617 5021 a
 tx@Dict begin tx@NodeDict begin {142.26372 113.81097 5.69046 } false
/N@N4 11 {InitCnode } NewNode end end
 617 5021 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  142.26372 56.90549 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 617 5021 a
 tx@Dict begin tx@NodeDict begin {142.26372 56.90549 5.69046 } false
/N@N5 11 {InitCnode } NewNode end end
 617 5021 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  199.1692 56.90549 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 617 5021 a
 tx@Dict begin tx@NodeDict begin {199.1692 56.90549 5.69046 } false
/N@N6 11 {InitCnode } NewNode end end
 617 5021 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  142.26372 0.0 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 617 5021 a
 tx@Dict begin tx@NodeDict begin {142.26372 0.0 5.69046 } false /N@E2
11 {InitCnode } NewNode end end
 617 5021 a 617 5021
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@S2 /N@N4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 617 5021 a 617 5021 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N4 /N@N5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 617 5021 a 617 5021 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617 5021
a 617 5021 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.78806 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 5021 a 593 5040 a Fh(a)617 5021 y
 tx@Dict begin PutEnd  end
 617
5021 a 617 5021 a
 tx@Dict begin PutEnd  end
 617 5021 a 617 5021 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N5 /N@E2 InitNC { /AngleA 300.  def /AngleB 60.  def 0.67  0.67
 NCCurve  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 617 5021 a 617
5021 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617 5021 a 617 5021 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 4.73868 4.71457
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 5021 a 597 5040 a Fh(c)617
5021 y
 tx@Dict begin PutEnd  end
 617 5021 a 617 5021 a
 tx@Dict begin PutEnd  end
 617 5021 a 617 5021 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N5 /N@E2 InitNC { /AngleA 240.  def /AngleB 120.  def 0.67 
0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 617
5021 a 617 5021 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617 5021 a 617 5021 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.78806 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 5021 a 593
5040 a Fh(a)617 5021 y
 tx@Dict begin PutEnd  end
 617 5021 a 617 5021 a
 tx@Dict begin PutEnd  end
 617 5021
a 617 5021 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N5 /N@N6 InitNC { /AngleA 30.  def /AngleB 150.  def 0.67  0.67
 NCCurve  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 617 5021 a 617 5021 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617 5021 a 617 5021
a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 6.02632 4.71457
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 5021 a 592 5040 a Fh(\034)617 5021 y
 tx@Dict begin PutEnd  end
 617 5021 a
617 5021 a
 tx@Dict begin PutEnd  end
 617 5021 a 617 5021 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N6 /N@N5 InitNC { /AngleA 210.  def /AngleB 330.  def 0.67 
0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 617 5021 a 617 5021
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 617 5021 a 617 5021 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 6.02632 4.71457
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 617 5021 a 592 5040 a Fh(\034)617
5021 y
 tx@Dict begin PutEnd  end
 617 5021 a 617 5021 a
 tx@Dict begin PutEnd  end
 617 5021 a 400 5592 a Fj(\(iii\).)1927
5841 y(2)p eop
%%Page: 3 3
3 2 bop 497 1488 a
 tx@Dict begin tx@NodeDict begin {0.0 142.26372 } false /N@S1 10 {InitPnode
} NewNode end end
 497 1488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 113.81097 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial 497 1488 a
 tx@Dict begin tx@NodeDict begin {0.0 113.81097 5.69046 } false /N@N1
11 {InitCnode } NewNode end end
 497 1488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  56.90549 113.81097 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial 497 1488 a
 tx@Dict begin tx@NodeDict begin {56.90549 113.81097 5.69046 } false
/N@N2 11 {InitCnode } NewNode end end
 497 1488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 56.90549 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial 497 1488 a
 tx@Dict begin tx@NodeDict begin {0.0 56.90549 5.69046 } false /N@N3
11 {InitCnode } NewNode end end
 497 1488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  56.90549 56.90549 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial 497 1488 a
 tx@Dict begin tx@NodeDict begin {56.90549 56.90549 5.69046 } false
/N@N4 11 {InitCnode } NewNode end end
 497 1488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  28.45274 0.0 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial 497 1488 a
 tx@Dict begin tx@NodeDict begin {28.45274 0.0 5.69046 } false /N@N5
11 {InitCnode } NewNode end end
 497 1488 a 497 1488 a
 tx@Dict begin tx@NodeDict begin {28.45274 -28.45274 } false /N@E1
10 {InitPnode } NewNode end end
 497 1488
a 497 1488 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@S1 /N@N1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 497 1488 a 497 1488 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N1 /N@N2 InitNC { /AngleA 30.  def /AngleB 150.  def 0.67  0.67
 NCCurve  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 497 1488 a 497 1488
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 497 1488 a 497 1488 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 6.02632 4.71457
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 497 1488 a 472 1508 a Fh(\034)497
1488 y
 tx@Dict begin PutEnd  end
 497 1488 a 497 1488 a
 tx@Dict begin PutEnd  end
 497 1488 a 497 1488 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N2 /N@N1 InitNC { /AngleA 210.  def /AngleB 330.  def 0.67 
0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 497
1488 a 497 1488 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 497 1488 a 497 1488 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 6.02632 4.71457
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 497 1488 a 472
1508 a Fh(\034)497 1488 y
 tx@Dict begin PutEnd  end
 497 1488 a 497 1488 a
 tx@Dict begin PutEnd  end
 497 1488
a 497 1488 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N1 /N@N3 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 497 1488 a 497 1488 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 497 1488 a 497 1488
a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.78806 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 497 1488 a 473 1508 a Fh(a)497 1488 y
 tx@Dict begin PutEnd  end
 497 1488 a 497
1488 a
 tx@Dict begin PutEnd  end
 497 1488 a 497 1488 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N2 /N@N4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 497 1488 a 497 1488 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 497
1488 a 497 1488 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 6.02632 4.71457
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 497 1488 a 472 1508 a Fh(\034)497 1488
y
 tx@Dict begin PutEnd  end
 497 1488 a 497 1488 a
 tx@Dict begin PutEnd  end
 497 1488 a 497 1488 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N3 /N@N5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 497 1488
a 497 1488 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 497 1488 a 497 1488 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.78806 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 497 1488 a 473 1508
a Fh(a)497 1488 y
 tx@Dict begin PutEnd  end
 497 1488 a 497 1488 a
 tx@Dict begin PutEnd  end
 497 1488 a 497
1488 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N4 /N@N5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 497 1488 a 497 1488 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 497 1488 a 497 1488 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 4.69937 7.60416
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 497
1488 a 477 1520 a Fh(b)497 1488 y
 tx@Dict begin PutEnd  end
 497 1488 a 497 1488
a
 tx@Dict begin PutEnd  end
 497 1488 a 497 1488 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@N5 /N@E1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 497 1488 a 497 1488 a
 tx@Dict begin tx@NodeDict begin {142.26372 142.26372 } false /N@SS1
10 {InitPnode } NewNode end end
 497 1488
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  142.26372 113.81097
5.69046 .5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore end
 
@endspecial 497 1488 a
 tx@Dict begin tx@NodeDict begin {142.26372 113.81097 5.69046 } false
/N@NN1 11 {InitCnode } NewNode end end
 497
1488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  199.1692 113.81097 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 497 1488
a
 tx@Dict begin tx@NodeDict begin {199.1692 113.81097 5.69046 } false
/N@NN2 11 {InitCnode } NewNode end end
 497 1488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  142.26372 56.90549 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 497
1488 a
 tx@Dict begin tx@NodeDict begin {142.26372 56.90549 5.69046 } false
/N@NN3 11 {InitCnode } NewNode end end
 497 1488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  199.1692 56.90549 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
497 1488 a
 tx@Dict begin tx@NodeDict begin {199.1692 56.90549 5.69046 } false
/N@NN4 11 {InitCnode } NewNode end end
 497 1488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  170.71646 0.0 5.69046
.5 CLW mul sub 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
497 1488 a
 tx@Dict begin tx@NodeDict begin {170.71646 0.0 5.69046 } false /N@NN5
11 {InitCnode } NewNode end end
 497 1488 a 497 1488 a
 tx@Dict begin tx@NodeDict begin {170.71646 -28.45274 } false /N@EE1
10 {InitPnode } NewNode end end
 497 1488 a 497 1488
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@SS1 /N@NN1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 497 1488 a 497 1488 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@NN1 /N@NN2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 497 1488 a 497 1488 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 497 1488
a 497 1488 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 6.02632 4.71457
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 497 1488 a 472 1508 a Fh(\034)497 1488 y
 tx@Dict begin PutEnd  end

497 1488 a 497 1488 a
 tx@Dict begin PutEnd  end
 497 1488 a 497 1488 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@NN1 /N@NN3 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 497 1488
a 497 1488 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 497 1488 a 497 1488 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.78806 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 497 1488 a 473 1508
a Fh(a)497 1488 y
 tx@Dict begin PutEnd  end
 497 1488 a 497 1488 a
 tx@Dict begin PutEnd  end
 497 1488 a 497
1488 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@NN2 /N@NN3 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 497 1488 a 497 1488 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 497 1488 a 497 1488 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.78806 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 497
1488 a 473 1508 a Fh(a)497 1488 y
 tx@Dict begin PutEnd  end
 497 1488 a 497 1488
a
 tx@Dict begin PutEnd  end
 497 1488 a 497 1488 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@NN2 /N@NN4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 497 1488 a 497 1488 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 497 1488
a 497 1488 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 6.02632 4.71457
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 497 1488 a 472 1508 a Fh(\034)497 1488 y
 tx@Dict begin PutEnd  end

497 1488 a 497 1488 a
 tx@Dict begin PutEnd  end
 497 1488 a 497 1488 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@NN3 /N@NN5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 497 1488
a 497 1488 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 497 1488 a 497 1488 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 5.78806 4.71457
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 497 1488 a 473 1508
a Fh(a)497 1488 y
 tx@Dict begin PutEnd  end
 497 1488 a 497 1488 a
 tx@Dict begin PutEnd  end
 497 1488 a 497
1488 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@NN4 /N@NN5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 497 1488 a 497 1488 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 497 1488 a 497 1488 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 4.69937 7.60416
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 497
1488 a 477 1520 a Fh(b)497 1488 y
 tx@Dict begin PutEnd  end
 497 1488 a 497 1488
a
 tx@Dict begin PutEnd  end
 497 1488 a 497 1488 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 3.0 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@NN5 /N@EE1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 497 1488 a 270 1934 a Fi(Opga)m(v)m(e)35
b(3)46 b Fj(Laat)31 b Fh(x)f Fj(en)g Fh(y)k Fj(willek)m(eurige)28
b(gesloten)j(TCP)2273 1948 y Ff(\034)2315 1934 y Fj(-termen)g(zijn.)331
2195 y(\(i\).)45 b(Bewijs)30 b(dat)h Fh(x)20 b Fg(j)g
Fh(\034)5 b(:y)28 b Fj(=)d Fh(\016)s Fj(.)305 2381 y(\(ii\).)45
b(Laat)32 b(zien)e(dat)g(de)g(w)m(et)i Fh(x)8 b Fg(k)p
1422 2405 46 4 v 32 w Fh(\034)d(:y)29 b Fj(=)c Fh(x)8
b Fg(k)p 1799 2405 V 32 w Fh(y)34 b Fj(niet)29 b(geldig)h(is.)280
2566 y(\(iii\).)44 b(Bewijs)33 b(dat)g Fh(\034)5 b(:)p
Fj(\()p Fh(\034)g(:x)30 b Fg(k)g Fh(y)s Fj(\))g(=)g Fh(\034)5
b(:)p Fj(\()p Fh(x)30 b Fg(k)g Fh(y)s Fj(\).)49 b(U)33
b(mag)h(hierbij)c(gebruik)i(mak)m(en)h(v)-5 b(an)33 b(de)497
2679 y(onderdelen)c(\(i\))h(en)h(\(ii\))e(en)h(v)-5 b(an)31
b(de)f Fc(Axioms)j(of)g(Standar)-5 b(d)35 b(Concurr)-5
b(ency)p Fj(.)283 2865 y(\(iv\).)45 b(Bewijs)36 b(dat)h
Fh(\034)5 b(:x)35 b Fg(k)h Fh(\034)5 b(:y)38 b Fj(=)d
Fh(\034)5 b(:)p Fj(\()p Fh(x)36 b Fg(k)g Fh(y)s Fj(\).)59
b(U)36 b(mag)h(hierbij)d(gebruik)h(mak)m(en)i(v)-5 b(an)36
b(de)497 2978 y(onderdelen)29 b(\(i\),)i(\(ii\))e(en)h(\(iii\))f(en)h
(v)-5 b(an)31 b(de)f Fc(Axioms)j(of)g(Standar)-5 b(d)35
b(Concurr)-5 b(ency)p Fj(.)270 3187 y Fi(Opga)m(v)m(e)35
b(4)46 b Fj(Besc)m(hou)m(w)30 b(de)f(pro)s(cesalgebra)g(TCP)2039
3201 y Ff(\034)2082 3187 y Fj(.)40 b(Gegev)m(en)31 b(is)d(dat)i
Fh(\015)5 b Fj(\()p Fh(c;)15 b(d)p Fj(\))31 b(=)e Fh(\015)5
b Fj(\()p Fh(d;)15 b(c)p Fj(\))270 3300 y(=)32 b Fh(e)p
Fj(.)47 b(Er)32 b(zijn)g(geen)h(andere)f(comm)m(unicaties)g
(gede\014nieerd.)46 b(Besc)m(hou)m(w)34 b(de)e(recursiev)m(e)270
3413 y(sp)s(eci\014caties)1464 3611 y Fh(X)90 b Fj(=)83
b Fh(a:X)1938 3574 y Fe(0)1440 3749 y Fh(X)1522 3712
y Fe(0)1629 3749 y Fj(=)g Fh(a:X)1938 3712 y Fe(00)2001
3749 y Fj(+)20 b Fh(b:X)1421 3887 y(X)1503 3849 y Fe(00)1629
3887 y Fj(=)83 b Fh(b:X)1929 3849 y Fe(0)270 4085 y Fj(en)1373
4283 y Fh(W)96 b Fj(=)83 b Fh(\034)1749 4297 y Ff(I)1788
4283 y Fj(\()p Fh(@)1871 4297 y Ff(H)1939 4283 y Fj(\()p
Fh(U)36 b Fg(k)26 b Fh(V)20 b Fj(\)\))1400 4421 y Fh(U)93
b Fj(=)83 b Fh(a:U)1854 4384 y Fe(0)1377 4559 y Fh(U)1449
4521 y Fe(0)1555 4559 y Fj(=)g Fh(c:U)1399 4697 y(V)103
b Fj(=)83 b Fh(d:V)1855 4659 y Fe(0)1375 4835 y Fh(V)1449
4797 y Fe(0)1555 4835 y Fj(=)g Fh(b:V)270 5033 y Fj(met)31
b Fh(I)h Fj(=)25 b Fg(f)p Fh(e)p Fg(g)32 b Fj(en)e Fh(H)i
Fj(=)25 b Fg(f)p Fh(c;)15 b(d)p Fg(g)p Fj(.)331 5294
y(\(i\).)45 b(T)-8 b(ek)m(en)31 b(de)g(pro)s(cesgrafen)f(v)m(o)s(or)h
Fh(X)7 b Fj(,)31 b Fh(U)10 b Fj(,)30 b Fh(V)20 b Fj(,)31
b Fh(U)k Fg(k)26 b Fh(V)20 b Fj(,)31 b Fh(@)2354 5308
y Ff(H)2421 5294 y Fj(\()p Fh(U)36 b Fg(k)26 b Fh(V)20
b Fj(\))30 b(en)h Fh(W)13 b Fj(.)305 5479 y(\(ii\).)45
b(Zijn)34 b(de)i(pro)s(cesgrafen)f(v)m(o)s(or)i Fh(X)43
b Fj(en)36 b Fh(W)48 b Fj(rb-bisimilair?)j(Zo)36 b(ja,)i(construeer)e
(dan)497 5592 y(een)31 b(rb-bisim)m(ulatie;)c(zo)k(nee,)g(leg)g(uit)e
(w)m(aarom)i(niet.)1807 5841 y(3)p eop
%%Page: 4 4
4 3 bop 400 399 a Fj(\(iii\).)44 b(Bewijs)25 b(dat)h
Fh(X)33 b Fj(=)25 b Fh(W)38 b Fj(met)26 b(b)s(eh)m(ulp)d(v)-5
b(an)26 b(RSP)f(en)g(RDP.)39 b(Een)26 b(b)s(ewijs)d(dat)j(gebruik)617
511 y(maakt)32 b(v)-5 b(an)30 b(AIP)g(lev)m(ert)h(geen)g(pun)m(ten)e
(op!)403 722 y(\(iv\).)45 b(Besc)m(hou)m(w)32 b(de)e(v)m(olgende)h
(recursiev)m(e)f(sp)s(eci\014catie:)1404 941 y Fh(X)1479
955 y Fd(1)1699 941 y Fj(=)83 b Fh(a:\016)1404 1054 y(X)1479
1068 y Ff(n)p Fd(+1)1699 1054 y Fj(=)g Fh(a:X)2008 1021
y Fe(0)2001 1077 y Ff(n)2432 1054 y Fj(\()p Fh(n)25 b
Fg(\025)g Fj(1\))1404 1167 y Fh(X)1486 1134 y Fe(0)1479
1192 y Fd(1)1699 1167 y Fj(=)83 b Fh(a:\016)24 b Fj(+)c
Fh(b:\016)1404 1280 y(X)1486 1247 y Fe(0)1479 1305 y
Ff(n)p Fd(+1)1699 1280 y Fj(=)83 b Fh(a:X)2008 1247 y
Fe(00)2001 1303 y Ff(n)2071 1280 y Fj(+)20 b Fh(b:X)2301
1294 y Ff(n)2432 1280 y Fj(\()p Fh(n)25 b Fg(\025)g Fj(1\))1404
1393 y Fh(X)1486 1360 y Fe(00)1479 1417 y Fd(1)1699 1393
y Fj(=)83 b Fh(b:\016)1404 1506 y(X)1486 1473 y Fe(00)1479
1530 y Ff(n)p Fd(+1)1699 1506 y Fj(=)g Fh(b:X)1999 1473
y Fe(0)1992 1528 y Ff(n)2432 1506 y Fj(\()p Fh(n)25 b
Fg(\025)g Fj(1\))617 1725 y(Bewijs)35 b(dat)h Fh(\031)1131
1739 y Ff(n)1178 1725 y Fj(\()p Fh(X)7 b Fj(\))35 b(=)f
Fh(X)1545 1739 y Ff(n)1627 1725 y Fj(v)m(o)s(or)i(alle)f
Fh(n)f Fg(\025)f Fj(1.)57 b(Hin)m(t:)51 b(w)m(ellic)m(h)m(t)35
b(helpt)g(het)g(als)g(u)617 1838 y(o)s(ok)c(uitdrukkingen)c(geeft)32
b(v)m(o)s(or)f Fh(\031)1852 1852 y Ff(n)1898 1838 y Fj(\()p
Fh(X)2015 1805 y Fe(0)2039 1838 y Fj(\))g(en)f Fh(\031)2278
1852 y Ff(n)2325 1838 y Fj(\()p Fh(X)2442 1805 y Fe(00)2485
1838 y Fj(\).)390 2080 y Fi(Opga)m(v)m(e)35 b(5)46 b
Fj(Laat)31 b Fh(B)5 b Fj(,)30 b Fh(T)43 b Fj(en)30 b
Fc(MaxB)39 b Fj(p)s(ositiev)m(e)30 b(natuurlijk)m(e)e(getallen)i(zijn)f
(zo)s(danig)h(dat)390 2193 y(0)c Fh(<)f(B)k Fg(\024)c
Fc(MaxB)37 b Fj(en)26 b(0)g Fh(<)f(T)38 b Fg(\024)25
b Fc(MaxB)9 b Fj(.)40 b(Tw)m(ee)27 b(partijen)f(\()p
Fh(P)2468 2207 y Fd(1)2535 2193 y Fj(en)g Fh(P)2710 2207
y Fd(2)2750 2193 y Fj(\))h(v)m(o)s(eren)g(een)g(onder-)390
2306 y(handelingspro)s(ces)34 b(met)j(b)s(etrekking)f(tot)h(de)g(aansc)
m(haf)g(v)-5 b(an)37 b(een)g(h)m(uis.)58 b(De)37 b(constan)m(te)390
2419 y Fc(MaxB)i Fj(represen)m(teert)31 b(een)g(do)s(or)e(de)h(o)m(v)m
(erheid)g(gestelde)h(b)s(o)m(v)m(engrens)f(aan)g(de)g(prijs)e(v)-5
b(an)390 2532 y(een)31 b(h)m(uis.)390 2723 y(De)h(ene)f(partij)f(\()p
Fh(P)1037 2737 y Fd(1)1077 2723 y Fj(\))h(do)s(et)g(een)g(b)s(o)s(d,)f
(zeg)i Fh(b)p Fj(,)g(en)e(w)m(ac)m(h)m(t)j(dan)d(op)h(een)g(afwijzing)f
(dan)g(w)m(el)390 2836 y(een)25 b(acceptatie)h(v)-5 b(an)25
b(dat)g(b)s(o)s(d)e(do)s(or)h(de)g(andere)h(partij.)37
b(Als)24 b(het)h(b)s(o)s(d)e(afgew)m(ezen)k(w)m(ordt,)390
2949 y(zal)i Fh(P)588 2963 y Fd(1)657 2949 y Fj(het)h(b)s(o)s(d)e(v)m
(erhogen)i(tot)g(\()p Fh(b)18 b Fj(+)g Fh(T)31 b Fj(+)18
b(1\))30 b(div)f(2.)41 b(Als)28 b(het)i(b)s(o)s(d)d(geaccepteerd)32
b(w)m(ordt)390 3062 y(zal)26 b Fh(P)585 3076 y Fd(1)651
3062 y Fj(het)g(v)m(ersc)m(h)m(uldigde)f(b)s(edrag)g(b)s(etalen.)39
b(De)27 b(constan)m(t)g Fh(T)39 b Fj(stelt)26 b(hier)e(het)j(maximale)
390 3174 y(b)s(o)s(d)i(v)m(o)s(or)i(dat)f Fh(P)996 3188
y Fd(1)1066 3174 y Fj(w)m(enst)h(te)g(do)s(en.)390 3366
y(De)21 b(andere)f(partij)f(\()p Fh(P)1136 3380 y Fd(2)1177
3366 y Fj(\))h(staat)i(in)d(princip)s(e)e(op)s(en)j(v)m(o)s(or)h(elk)e
(do)s(or)h(de)g(o)m(v)m(erheid)h(to)s(egestaan)390 3479
y(b)s(o)s(d.)37 b(Het)26 b(v)m(ergelijkt)e(dit)g(b)s(o)s(d)f(met)i(de)g
(b)s(o)s(demprijs)c Fh(B)29 b Fj(w)m(elk)m(e)c(deze)g(in)f(gedac)m(h)m
(ten)i(heeft.)390 3591 y(Als)21 b(het)i(b)s(o)s(d)e(onder)g(de)h(b)s(o)
s(demprijs)d(ligt)j(w)m(ordt)g(het)g(v)m(erw)m(orp)s(en,)i(anders)d
(geaccepteerd.)390 3704 y(Daarna)31 b(w)m(ordt)g(gew)m(ac)m(h)m(t)i(op)
d(de)g(b)s(etaling)f(do)s(or)h(de)g(andere)g(partij.)390
3896 y(Het)f(onderhandelingsgedrag)e(v)-5 b(an)28 b(de)h(partijen)e(w)m
(ordt)i(b)s(esc)m(hrev)m(en)f(do)s(or)g(de)h(v)m(olgende)390
4009 y(recursiev)m(e)h(sp)s(eci\014catie:)505 4222 y
Fh(P)563 4236 y Fd(1)602 4222 y Fj(\()p Fh(b)p Fj(\))98
b(=)82 b Fh(s)1005 4237 y Fd(o\013er)1144 4222 y Fj(\()p
Fh(b)p Fj(\))p Fh(:Q)1350 4236 y Fd(1)1391 4222 y Fj(\()p
Fh(b)p Fj(\))1226 b(\(0)26 b Fg(\024)f Fh(b)h Fg(\024)f
Fh(T)13 b Fj(\))505 4335 y Fh(Q)577 4349 y Fd(1)616 4335
y Fj(\()p Fh(b)p Fj(\))84 b(=)e Fh(r)1003 4349 y Fd(accept)1204
4335 y Fh(:s)1272 4349 y Fd(pa)n(y)1386 4335 y Fh(:\017)21
b Fj(+)f Fh(r)1601 4349 y Fd(reject)1775 4335 y Fh(:P)1858
4349 y Fd(1)1898 4335 y Fj(\(\()p Fh(b)h Fj(+)f Fh(T)33
b Fj(+)20 b(1\))31 b(div)f(2\))84 b(\(0)26 b Fg(\024)f
Fh(b)h Fg(\024)f Fh(T)13 b Fj(\))505 4561 y Fh(P)563
4575 y Fd(2)809 4561 y Fj(=)1097 4493 y Fb(P)962 4645
y Fd(0)p Fe(\024)p Ff(b)p Fe(\024)p Fa(MaxB)1343 4561
y Fh(r)1384 4576 y Fd(o\013er)1523 4561 y Fj(\()p Fh(b)p
Fj(\))p Fh(:Q)1729 4575 y Fd(2)1769 4561 y Fj(\()p Fh(b)p
Fj(\))505 4744 y Fh(Q)577 4758 y Fd(2)616 4744 y Fj(\()p
Fh(b)p Fj(\))84 b(=)e Fh(s)1005 4758 y Fd(reject)1180
4744 y Fh(:P)1263 4758 y Fd(2)2726 4744 y Fj(\(0)26 b
Fg(\024)f Fh(b)h(<)f(B)5 b Fj(\))505 4857 y Fh(Q)577
4871 y Fd(2)616 4857 y Fj(\()p Fh(b)p Fj(\))84 b(=)e
Fh(s)1005 4871 y Fd(accept)1205 4857 y Fh(:r)1271 4871
y Fd(pa)n(y)2726 4857 y Fj(\()p Fh(B)30 b Fg(\024)25
b Fh(b)h Fg(\024)f Fc(MaxB)9 b Fj(\))505 5083 y Fh(O)s
Fj(\()p Fh(b)p Fj(\))123 b(=)82 b Fh(\034)1002 5097 y
Ff(I)1042 5083 y Fj(\()p Fh(@)1125 5097 y Ff(H)1193 5083
y Fj(\()p Fh(P)1286 5097 y Fd(1)1326 5083 y Fj(\()p Fh(b)p
Fj(\))26 b Fg(k)g Fh(P)1590 5097 y Fd(2)1629 5083 y Fj(\)\))1027
b(\(0)26 b Fg(\024)f Fh(b)h Fg(\024)f Fh(T)13 b Fj(\))390
5295 y(w)m(aarin)489 5491 y Fh(H)90 b Fj(=)83 b Fg(f)p
Fh(s)897 5506 y Fd(o\013er)1037 5491 y Fj(\()p Fh(b)p
Fj(\))p Fh(;)15 b(r)1227 5506 y Fd(o\013er)1367 5491
y Fj(\()p Fh(b)p Fj(\))p Fh(;)g(s)1559 5505 y Fd(accept)1760
5491 y Fh(;)g(r)1841 5505 y Fd(accept)2042 5491 y Fh(;)g(s)2125
5505 y Fd(reject)2300 5491 y Fh(;)g(s)2383 5505 y Fd(pa)n(y)2497
5491 y Fh(;)g(r)2578 5505 y Fd(pa)n(y)2719 5491 y Fg(j)26
b Fj(0)f Fg(\024)g Fh(b)g Fg(\024)g Fc(MaxB)10 b Fg(g)p
Fh(;)489 5604 y(I)126 b Fj(=)83 b Fg(f)p Fh(c)893 5619
y Fd(o\013er)1033 5604 y Fj(\()p Fh(b)p Fj(\))p Fh(;)15
b(c)1221 5618 y Fd(accept)1423 5604 y Fh(;)g(c)1502 5618
y Fd(reject)1703 5604 y Fg(j)25 b Fj(0)h Fg(\024)f Fh(b)g
Fg(\024)g Fc(MaxB)10 b Fg(g)p Fh(:)1927 5841 y Fj(4)p
eop
%%Page: 5 5
5 4 bop 270 399 a Fj(De)31 b(v)m(olgende)g(comm)m(unicaties)f(zijn)f
(gede\014nieerd:)833 595 y Fh(\015)5 b Fj(\()p Fh(s)963
610 y Fd(o\013er)1102 595 y Fj(\()p Fh(b)p Fj(\))p Fh(;)15
b(r)1292 610 y Fd(o\013er)1433 595 y Fj(\()p Fh(b)p Fj(\)\))84
b(=)f Fh(c)1854 610 y Fd(o\013er)1993 595 y Fj(\()p Fh(b)p
Fj(\))h(\(0)26 b Fg(\024)f Fh(b)h Fg(\024)e Fc(MaxB)10
b Fj(\))833 708 y Fh(\015)5 b Fj(\()p Fh(s)963 722 y
Fd(accept)1163 708 y Fh(;)15 b(r)1244 722 y Fd(accept)1445
708 y Fj(\))181 b(=)83 b Fh(c)1854 722 y Fd(accept)833
821 y Fh(\015)5 b Fj(\()p Fh(s)963 835 y Fd(reject)1138
821 y Fh(;)15 b(r)1219 835 y Fd(reject)1394 821 y Fj(\))232
b(=)83 b Fh(c)1854 835 y Fd(reject)833 934 y Fh(\015)5
b Fj(\()p Fh(s)963 948 y Fd(pa)n(y)1078 934 y Fh(;)15
b(r)1159 948 y Fd(pa)n(y)1274 934 y Fj(\))352 b(=)83
b Fh(c)1854 948 y Fd(pa)n(y)331 1222 y Fj(\(i\).)45 b(Geef)39
b(een)g(lineaire)d(recursiev)m(e)i(sp)s(eci\014catie)g(v)m(o)s(or)h
(het)f(pro)s(ces)g Fh(@)2824 1236 y Ff(H)2892 1222 y
Fj(\()p Fh(P)2985 1236 y Fd(1)3025 1222 y Fj(\()p Fh(b)p
Fj(\))h Fg(k)g Fh(P)3315 1236 y Fd(2)3355 1222 y Fj(\))497
1335 y(v)m(o)s(or)31 b(alle)f(0)25 b Fg(\024)g Fh(b)h
Fg(\024)f Fh(T)13 b Fj(.)305 1522 y(\(ii\).)45 b(Geef)27
b(een)f(lineaire)f(recursiev)m(e)g(sp)s(eci\014catie)h(v)m(o)s(or)g
(het)g(pro)s(ces)g Fh(O)s Fj(\()p Fh(b)p Fj(\))h(v)m(o)s(or)f(alle)g(0)
f Fg(\024)497 1635 y Fh(b)j Fg(\024)g Fh(T)13 b Fj(.)46
b(T)-8 b(ek)m(en)33 b(een)f(pro)s(cesgraaf)h(v)m(o)s(or)f
Fh(O)s Fj(\(0\))h(v)m(o)s(or)g(het)f(gev)-5 b(al)33 b(dat)f
Fh(T)41 b Fj(=)28 b(128)p Fh(:)p Fj(000)497 1748 y(en)34
b Fh(B)h Fj(=)30 b(112)p Fh(:)p Fj(000)36 b(en)e(geef)g(zo)g(mogelijk)f
(een)h(rb-bisim)m(ulatie)c(tussen)j(deze)h(graaf)497
1861 y(en)c(de)h(graaf)g(v)m(o)s(or)g Fh(\034)5 b(:c)1284
1875 y Fd(pa)n(y)1399 1861 y Fh(:\017)p Fj(.)280 2049
y(\(iii\).)44 b(Beredeneer)21 b(onder)f(w)m(elk)m(e)h(v)m(o)s(orw)m
(aarde\(n\))g(op)f Fh(B)25 b Fj(en)20 b Fh(T)33 b Fj(er)20
b(geen)h(v)m(erk)m(o)s(op)g(plaatsvindt?)1807 5841 y(5)p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
